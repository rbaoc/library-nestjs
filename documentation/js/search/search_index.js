var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/controllers/AppController.html', [0, 1.527, 1, 2.651]],
      [
        'body/controllers/AppController.html',
        [
          0,
          2.593,
          1,
          4.502,
          2,
          2.143,
          3,
          0.276,
          4,
          0.276,
          5,
          0.219,
          6,
          4.565,
          7,
          0.637,
          8,
          2.142,
          9,
          7.336,
          10,
          1.543,
          11,
          0.017,
          12,
          0.881,
          13,
          5.299,
          14,
          1.77,
          15,
          2.352,
          16,
          0.306,
          17,
          1.02,
          18,
          0.276,
          19,
          0.228,
          20,
          1.77,
          21,
          5.299,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
        ],
      ],
      ['title/modules/AppModule.html', [25, 1.385, 26, 2.651]],
      [
        'body/modules/AppModule.html',
        [
          1,
          4.071,
          2,
          2.051,
          3,
          0.192,
          4,
          0.192,
          5,
          0.153,
          11,
          0.018,
          16,
          0.426,
          17,
          0.71,
          18,
          0.192,
          19,
          0.159,
          22,
          0.008,
          23,
          0.012,
          24,
          0.008,
          25,
          2.127,
          26,
          5.301,
          27,
          1.743,
          28,
          1.743,
          29,
          2.08,
          30,
          2.08,
          31,
          1.844,
          32,
          2.86,
          33,
          2.08,
          34,
          3.179,
          35,
          3.179,
          36,
          4.381,
          37,
          4.075,
          38,
          4.381,
          39,
          4.381,
          40,
          4.075,
          41,
          3.813,
          42,
          2.86,
          43,
          2.08,
          44,
          1.955,
          45,
          3.69,
          46,
          2.86,
          47,
          3.179,
          48,
          2.223,
          49,
          5.073,
          50,
          5.073,
          51,
          3.69,
          52,
          3.69,
          53,
          3.179,
          54,
          3.69,
          55,
          3.69,
          56,
          3.179,
          57,
          3.562,
          58,
          3.69,
          59,
          2.842,
          60,
          3.562,
          61,
          3.69,
          62,
          3.69,
          63,
          3.69,
          64,
          3.69,
          65,
          5.073,
          66,
          5.073,
        ],
      ],
      ['title/controllers/AuthController.html', [0, 1.527, 67, 2.651]],
      [
        'body/controllers/AuthController.html',
        [
          0,
          1.238,
          2,
          1.238,
          3,
          0.16,
          4,
          0.16,
          5,
          0.127,
          7,
          0.368,
          8,
          1.485,
          10,
          1.776,
          11,
          0.018,
          12,
          1.014,
          14,
          2.038,
          16,
          0.402,
          17,
          0.589,
          18,
          0.16,
          19,
          0.132,
          20,
          1.919,
          22,
          0.007,
          23,
          0.01,
          24,
          0.007,
          67,
          3.121,
          68,
          2.637,
          69,
          1.983,
          70,
          2.637,
          71,
          4.445,
          72,
          3.829,
          73,
          2.45,
          74,
          4.445,
          75,
          4.445,
          76,
          3.829,
          77,
          3.06,
          78,
          4.338,
          79,
          3.06,
          80,
          3.06,
          81,
          2.135,
          82,
          1.481,
          83,
          0.868,
          84,
          1.351,
          85,
          4.122,
          86,
          1.669,
          87,
          3.06,
          88,
          3.06,
          89,
          3.06,
          90,
          3.952,
          91,
          3.06,
          92,
          3.06,
          93,
          3.06,
          94,
          4.445,
          95,
          3.06,
          96,
          3.06,
          97,
          3.06,
          98,
          2.637,
          99,
          3.371,
          100,
          3.06,
          101,
          3.06,
          102,
          1.711,
          103,
          2.149,
          104,
          1.983,
          105,
          2.358,
          106,
          2.358,
          107,
          1.983,
          108,
          3.06,
          109,
          3.06,
          110,
          1.621,
          111,
          1.529,
          112,
          2.226,
          113,
          1.844,
          114,
          2.473,
          115,
          1.983,
          116,
          2.358,
          117,
          2.149,
          118,
          3.06,
          119,
          1.621,
          120,
          3.06,
          121,
          2.149,
          122,
          3.06,
          123,
          3.06,
          124,
          1.446,
          125,
          2.221,
          126,
          1.631,
          127,
          1.983,
          128,
          2.879,
          129,
          3.06,
          130,
          2.637,
          131,
          3.06,
          132,
          2.358,
          133,
          3.06,
          134,
          3.06,
          135,
          2.637,
          136,
          2.637,
          137,
          3.829,
          138,
          3.06,
          139,
          3.06,
          140,
          3.06,
          141,
          3.06,
          142,
          4.445,
          143,
          4.445,
          144,
          3.06,
          145,
          3.06,
          146,
          3.06,
          147,
          2.637,
          148,
          3.06,
          149,
          3.06,
          150,
          3.06,
          151,
          3.06,
          152,
          3.06,
          153,
          3.06,
          154,
          3.06,
        ],
      ],
      ['title/modules/AuthModule.html', [25, 1.385, 36, 2.446]],
      [
        'body/modules/AuthModule.html',
        [
          2,
          2.004,
          3,
          0.186,
          4,
          0.186,
          5,
          0.148,
          11,
          0.018,
          16,
          0.42,
          17,
          0.687,
          18,
          0.186,
          19,
          0.154,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          25,
          2.09,
          27,
          1.686,
          28,
          1.686,
          29,
          2.011,
          30,
          2.011,
          31,
          1.782,
          32,
          3.211,
          33,
          3.211,
          36,
          4.992,
          41,
          3.773,
          42,
          2.794,
          43,
          2.011,
          44,
          1.89,
          46,
          2.794,
          47,
          4.27,
          48,
          2.15,
          59,
          2.748,
          67,
          3.999,
          112,
          2.846,
          113,
          2.15,
          114,
          3.466,
          115,
          2.311,
          155,
          3.074,
          156,
          3.074,
          157,
          3.074,
          158,
          3.568,
          159,
          4.336,
          160,
          4.336,
          161,
          4.336,
          162,
          3.568,
          163,
          3.48,
          164,
          3.568,
          165,
          2.748,
          166,
          4.956,
          167,
          1.89,
          168,
          3.568,
          169,
          3.568,
          170,
          3.568,
          171,
          3.568,
          172,
          3.568,
          173,
          3.568,
          174,
          3.568,
          175,
          3.568,
          176,
          3.568,
          177,
          3.568,
        ],
      ],
      ['title/injectables/AuthService.html', [114, 1.784, 178, 0.836]],
      [
        'body/injectables/AuthService.html',
        [
          3,
          0.129,
          4,
          0.129,
          5,
          0.102,
          7,
          0.297,
          8,
          1.265,
          11,
          0.018,
          12,
          1.049,
          14,
          2.043,
          15,
          2.625,
          16,
          0.364,
          17,
          0.475,
          18,
          0.129,
          19,
          0.106,
          20,
          2.043,
          22,
          0.006,
          23,
          0.009,
          24,
          0.006,
          48,
          1.487,
          72,
          3.262,
          73,
          2.624,
          81,
          2.209,
          82,
          1.532,
          83,
          0.898,
          84,
          1.398,
          86,
          2.31,
          90,
          2.983,
          102,
          2.43,
          110,
          1.308,
          111,
          1.233,
          112,
          2.601,
          113,
          1.487,
          114,
          1.789,
          116,
          1.902,
          124,
          1.789,
          125,
          2.301,
          126,
          1.69,
          163,
          4.126,
          165,
          1.902,
          178,
          0.839,
          179,
          0.998,
          180,
          2.127,
          181,
          3.786,
          182,
          3.786,
          183,
          3.786,
          184,
          3.786,
          185,
          3.786,
          186,
          3.786,
          187,
          2.469,
          188,
          6.117,
          189,
          2.469,
          190,
          3.786,
          191,
          2.469,
          192,
          3.786,
          193,
          4.448,
          194,
          2.469,
          195,
          2.127,
          196,
          1.892,
          197,
          3.786,
          198,
          2.469,
          199,
          3.786,
          200,
          3.111,
          201,
          2.469,
          202,
          1.902,
          203,
          3.786,
          204,
          4.352,
          205,
          2.469,
          206,
          3.786,
          207,
          2.983,
          208,
          2.469,
          209,
          2.58,
          210,
          3.786,
          211,
          2.469,
          212,
          3.967,
          213,
          1.789,
          214,
          1.167,
          215,
          3.786,
          216,
          2.658,
          217,
          2.127,
          218,
          1.79,
          219,
          2.631,
          220,
          2.469,
          221,
          2.176,
          222,
          1.958,
          223,
          2.469,
          224,
          2.127,
          225,
          2.469,
          226,
          2.127,
          227,
          2.127,
          228,
          1.599,
          229,
          2.469,
          230,
          2.469,
          231,
          2.469,
          232,
          2.469,
          233,
          2.469,
          234,
          2.469,
          235,
          2.469,
          236,
          3.967,
          237,
          2.127,
          238,
          2.127,
          239,
          3.786,
          240,
          3.786,
          241,
          2.127,
          242,
          3.786,
          243,
          2.469,
          244,
          2.469,
          245,
          2.127,
          246,
          1.487,
          247,
          2.469,
          248,
          2.469,
          249,
          2.469,
        ],
      ],
      ['title/classes/Book.html', [19, 0.163, 250, 1.605]],
      [
        'body/classes/Book.html',
        [
          3,
          0.161,
          4,
          0.161,
          5,
          0.128,
          7,
          0.372,
          10,
          2.032,
          11,
          0.018,
          12,
          1.16,
          15,
          2.118,
          16,
          0.353,
          18,
          0.161,
          19,
          0.193,
          22,
          0.007,
          23,
          0.01,
          24,
          0.007,
          82,
          1.669,
          83,
          0.993,
          84,
          0.992,
          196,
          2.883,
          250,
          1.904,
          251,
          0.786,
          252,
          2.664,
          253,
          1.496,
          254,
          4.535,
          255,
          3.697,
          256,
          3.41,
          257,
          2.129,
          258,
          2.487,
          259,
          4.535,
          260,
          4.535,
          261,
          4.055,
          262,
          3.697,
          263,
          3.245,
          264,
          2.664,
          265,
          4.052,
          266,
          4.301,
          267,
          3.383,
          268,
          3.092,
          269,
          3.739,
          270,
          2.171,
          271,
          2.382,
          272,
          3.092,
          273,
          2.382,
          274,
          2.968,
          275,
          3.092,
          276,
          1.535,
          277,
          3.697,
          278,
          3.092,
          279,
          3.144,
          280,
          2.883,
          281,
          2.382,
          282,
          3.092,
          283,
          4.478,
          284,
          3.092,
          285,
          3.092,
          286,
          3.092,
          287,
          4.625,
          288,
          3.092,
          289,
          2.894,
          290,
          2.664,
          291,
          3.092,
          292,
          2.171,
          293,
          2.171,
          294,
          3.092,
          295,
          1.545,
          296,
          1.863,
          297,
          3.144,
          298,
          3.144,
          299,
          3.144,
          300,
          3.858,
          301,
          3.858,
          302,
          1.25,
          303,
          3.092,
          304,
          2.382,
          305,
          4.052,
          306,
          1.461,
          307,
          1.863,
          308,
          2.664,
          309,
          1.904,
          310,
          2.382,
          311,
          2.171,
          312,
          2.171,
          313,
          3.092,
          314,
          3.092,
        ],
      ],
      ['title/controllers/BookController.html', [0, 1.527, 315, 2.651]],
      [
        'body/controllers/BookController.html',
        [
          0,
          0.935,
          2,
          0.935,
          3,
          0.121,
          4,
          0.121,
          5,
          0.096,
          7,
          0.278,
          8,
          1.203,
          10,
          1.739,
          11,
          0.018,
          12,
          0.993,
          14,
          1.996,
          16,
          0.387,
          17,
          0.445,
          18,
          0.121,
          19,
          0.1,
          20,
          2.167,
          22,
          0.005,
          23,
          0.008,
          24,
          0.005,
          69,
          1.499,
          73,
          2.791,
          78,
          3.6,
          81,
          2.091,
          82,
          1.451,
          83,
          0.85,
          84,
          1.324,
          85,
          3.231,
          102,
          2.65,
          103,
          2.528,
          104,
          1.499,
          105,
          2.773,
          106,
          3.405,
          107,
          1.499,
          119,
          1.226,
          126,
          0.849,
          127,
          3.501,
          128,
          3.501,
          132,
          1.782,
          213,
          2.357,
          214,
          1.093,
          218,
          1.347,
          219,
          2.089,
          221,
          2.089,
          222,
          1.88,
          250,
          2.927,
          257,
          2.86,
          276,
          1.849,
          302,
          0.935,
          315,
          2.528,
          316,
          1.993,
          317,
          3.808,
          318,
          1.531,
          319,
          3.808,
          320,
          1.907,
          321,
          1.907,
          322,
          2.492,
          323,
          2.313,
          324,
          2.313,
          325,
          2.313,
          326,
          1.993,
          327,
          3.032,
          328,
          1.993,
          329,
          2.313,
          330,
          2.313,
          331,
          2.492,
          332,
          1.782,
          333,
          2.313,
          334,
          1.304,
          335,
          1.624,
          336,
          2.313,
          337,
          1.304,
          338,
          1.993,
          339,
          2.313,
          340,
          2.313,
          341,
          2.313,
          342,
          2.313,
          343,
          1.394,
          344,
          4.002,
          345,
          2.313,
          346,
          2.313,
          347,
          1.226,
          348,
          1.624,
          349,
          1.782,
          350,
          2.313,
          351,
          2.528,
          352,
          1.226,
          353,
          1.782,
          354,
          1.624,
          355,
          1.226,
          356,
          1.624,
          357,
          1.226,
          358,
          1.499,
          359,
          1.226,
          360,
          1.782,
          361,
          1.226,
          362,
          1.782,
          363,
          2.342,
          364,
          1.993,
          365,
          1.394,
          366,
          2.332,
          367,
          1.304,
          368,
          2.313,
          369,
          1.499,
          370,
          3.104,
          371,
          2.313,
          372,
          2.313,
          373,
          0.935,
          374,
          1.456,
          375,
          2.313,
          376,
          1.624,
          377,
          1.782,
          378,
          2.313,
          379,
          3.104,
          380,
          2.342,
          381,
          2.313,
          382,
          3.405,
          383,
          2.313,
          384,
          1.624,
          385,
          1.624,
          386,
          1.782,
          387,
          2.313,
          388,
          2.313,
          389,
          2.313,
          390,
          2.313,
          391,
          2.313,
        ],
      ],
      ['title/modules/BookModule.html', [25, 1.385, 37, 2.275]],
      [
        'body/modules/BookModule.html',
        [
          2,
          2.119,
          3,
          0.202,
          4,
          0.202,
          5,
          0.16,
          11,
          0.018,
          16,
          0.417,
          17,
          0.745,
          18,
          0.202,
          19,
          0.167,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          25,
          2.18,
          27,
          1.829,
          28,
          1.829,
          29,
          2.182,
          30,
          2.182,
          31,
          1.934,
          32,
          3.35,
          33,
          3.35,
          37,
          4.657,
          40,
          4.134,
          41,
          3.868,
          42,
          2.954,
          43,
          2.182,
          44,
          2.05,
          46,
          2.954,
          56,
          3.334,
          59,
          2.981,
          112,
          2.918,
          113,
          2.332,
          250,
          1.646,
          315,
          4.173,
          362,
          2.981,
          363,
          3.939,
          364,
          3.334,
          392,
          3.334,
          393,
          3.334,
          394,
          3.87,
          395,
          3.334,
          396,
          3.428,
          397,
          3.87,
          398,
          3.395,
          399,
          1.829,
          400,
          2.981,
          401,
          3.87,
          402,
          3.87,
        ],
      ],
      ['title/classes/BookPaginationParam.html', [19, 0.163, 331, 1.886]],
      [
        'body/classes/BookPaginationParam.html',
        [
          3,
          0.178,
          4,
          0.178,
          5,
          0.141,
          7,
          0.411,
          10,
          1.399,
          11,
          0.018,
          12,
          1.127,
          16,
          0.277,
          18,
          0.315,
          19,
          0.292,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          83,
          1.015,
          84,
          1.337,
          246,
          2.057,
          251,
          0.868,
          253,
          1.605,
          276,
          1.918,
          306,
          1.613,
          309,
          2.706,
          331,
          2.401,
          373,
          2.249,
          374,
          2.249,
          403,
          2.057,
          404,
          2.03,
          405,
          4.137,
          406,
          4.19,
          407,
          3.603,
          408,
          3.603,
          409,
          3.603,
          410,
          3.603,
          411,
          3.603,
          412,
          2.85,
          413,
          3.113,
          414,
          4.762,
          415,
          2.397,
          416,
          2.956,
          417,
          2.397,
          418,
          2.212,
          419,
          2.397,
          420,
          2.896,
          421,
          2.397,
          422,
          2.397,
          423,
          2.397,
          424,
          2.212,
          425,
          2.397,
          426,
          3.135,
          427,
          1.925,
          428,
          2.779,
          429,
          1.452,
          430,
          2.212,
          431,
          2.212,
          432,
          2.212,
          433,
          1.706,
          434,
          1.706,
          435,
          1.706,
        ],
      ],
      ['title/injectables/BookService.html', [178, 0.836, 363, 2]],
      [
        'body/injectables/BookService.html',
        [
          3,
          0.099,
          4,
          0.099,
          5,
          0.079,
          7,
          0.229,
          8,
          1.029,
          11,
          0.018,
          12,
          0.958,
          14,
          1.848,
          16,
          0.353,
          17,
          0.366,
          18,
          0.099,
          19,
          0.082,
          20,
          2.043,
          22,
          0.004,
          23,
          0.007,
          24,
          0.004,
          73,
          2.704,
          81,
          2.017,
          82,
          1.399,
          83,
          0.82,
          84,
          1.276,
          86,
          1.765,
          102,
          2.533,
          112,
          2.353,
          113,
          1.146,
          124,
          1.456,
          125,
          1.941,
          126,
          1.425,
          178,
          0.683,
          179,
          0.769,
          213,
          1.835,
          214,
          0.899,
          218,
          1.864,
          219,
          2.483,
          221,
          2.956,
          222,
          2.834,
          228,
          3.584,
          250,
          2.895,
          257,
          2.237,
          258,
          1.835,
          267,
          1.632,
          276,
          1.925,
          280,
          1.941,
          289,
          1.456,
          302,
          0.769,
          317,
          2.655,
          318,
          1.31,
          319,
          2.655,
          320,
          2.058,
          321,
          1.632,
          322,
          2.518,
          326,
          2.655,
          327,
          2.784,
          331,
          0.95,
          334,
          1.737,
          337,
          1.737,
          343,
          1.146,
          344,
          3.584,
          347,
          1.008,
          352,
          1.008,
          359,
          1.008,
          360,
          1.465,
          361,
          1.008,
          362,
          1.465,
          363,
          1.632,
          365,
          1.146,
          366,
          1.996,
          367,
          1.072,
          373,
          1.571,
          374,
          1.806,
          380,
          1.008,
          396,
          2.764,
          399,
          0.899,
          400,
          1.465,
          416,
          0.852,
          436,
          1.638,
          437,
          1.902,
          438,
          3.137,
          439,
          1.902,
          440,
          3.081,
          441,
          3.081,
          442,
          3.584,
          443,
          1.902,
          444,
          2.374,
          445,
          1.902,
          446,
          3.081,
          447,
          1.902,
          448,
          2.164,
          449,
          1.902,
          450,
          1.902,
          451,
          3.081,
          452,
          1.902,
          453,
          1.902,
          454,
          1.335,
          455,
          1.902,
          456,
          1.902,
          457,
          1.902,
          458,
          3.781,
          459,
          1.465,
          460,
          2.728,
          461,
          1.902,
          462,
          3.137,
          463,
          1.902,
          464,
          2.728,
          465,
          3.446,
          466,
          2.728,
          467,
          3.081,
          468,
          1.335,
          469,
          1.335,
          470,
          1.335,
          471,
          2.516,
          472,
          2.164,
          473,
          2.655,
          474,
          1.232,
          475,
          1.902,
          476,
          2.164,
          477,
          1.335,
          478,
          3.081,
          479,
          1.902,
          480,
          1.335,
          481,
          1.902,
          482,
          1.335,
          483,
          3.848,
          484,
          3.081,
          485,
          3.081,
          486,
          2.655,
          487,
          4.467,
          488,
          1.902,
          489,
          3.081,
          490,
          4.467,
          491,
          3.081,
          492,
          3.081,
          493,
          1.902,
          494,
          1.335,
          495,
          1.335,
          496,
          3.081,
          497,
          1.902,
          498,
          1.902,
          499,
          1.638,
          500,
          1.902,
          501,
          1.335,
        ],
      ],
      ['title/classes/Category.html', [19, 0.163, 263, 2]],
      [
        'body/classes/Category.html',
        [
          3,
          0.173,
          4,
          0.173,
          5,
          0.137,
          7,
          0.399,
          10,
          1.958,
          11,
          0.018,
          12,
          1.118,
          15,
          2.187,
          16,
          0.344,
          18,
          0.173,
          19,
          0.203,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          82,
          1.721,
          83,
          0.957,
          84,
          1.043,
          196,
          2.353,
          250,
          2.676,
          251,
          0.843,
          253,
          1.573,
          255,
          3.844,
          256,
          3.546,
          257,
          2.545,
          258,
          2.587,
          262,
          3.844,
          263,
          2.495,
          264,
          2.857,
          265,
          4.42,
          266,
          3.844,
          267,
          3.563,
          269,
          3.86,
          270,
          2.329,
          271,
          2.555,
          273,
          2.555,
          274,
          3.359,
          276,
          1.252,
          277,
          3.844,
          279,
          2.329,
          280,
          2.353,
          281,
          2.555,
          287,
          4.185,
          292,
          2.329,
          293,
          2.329,
          295,
          1.657,
          296,
          1.998,
          297,
          3.306,
          298,
          3.306,
          299,
          3.306,
          300,
          4.057,
          302,
          1.341,
          305,
          4.185,
          306,
          1.567,
          307,
          1.998,
          308,
          2.857,
          309,
          1.41,
          310,
          2.555,
          311,
          2.329,
          312,
          2.329,
          465,
          3.844,
          502,
          2.857,
          503,
          4.709,
          504,
          3.316,
          505,
          4.709,
          506,
          4.057,
          507,
          4.709,
          508,
          3.316,
          509,
          3.316,
          510,
          3.316,
          511,
          3.316,
          512,
          3.316,
          513,
          2.857,
          514,
          3.316,
          515,
          3.316,
          516,
          4.709,
          517,
          2.148,
          518,
          2.857,
          519,
          3.316,
          520,
          3.316,
          521,
          4.709,
          522,
          2.857,
        ],
      ],
      ['title/controllers/CategoryController.html', [0, 1.527, 523, 2.651]],
      [
        'body/controllers/CategoryController.html',
        [
          0,
          0.9,
          2,
          0.9,
          3,
          0.116,
          4,
          0.116,
          5,
          0.092,
          7,
          0.268,
          8,
          1.166,
          10,
          1.775,
          11,
          0.018,
          12,
          1.013,
          14,
          2.037,
          16,
          0.389,
          17,
          0.428,
          18,
          0.116,
          19,
          0.096,
          20,
          2.037,
          22,
          0.005,
          23,
          0.008,
          24,
          0.005,
          69,
          1.441,
          73,
          2.814,
          81,
          2.134,
          82,
          1.48,
          83,
          0.867,
          84,
          1.351,
          102,
          2.681,
          103,
          3.429,
          104,
          1.441,
          105,
          2.69,
          107,
          1.441,
          119,
          1.179,
          126,
          0.816,
          127,
          3.437,
          128,
          3.437,
          132,
          2.69,
          213,
          2.037,
          214,
          1.051,
          218,
          1.064,
          219,
          1.65,
          221,
          1.65,
          222,
          1.485,
          250,
          0.946,
          257,
          2.726,
          263,
          3.119,
          276,
          1.916,
          302,
          0.9,
          318,
          1.833,
          320,
          1.85,
          321,
          1.85,
          322,
          2.43,
          327,
          2.587,
          328,
          1.917,
          332,
          1.714,
          334,
          1.254,
          335,
          1.562,
          337,
          1.254,
          338,
          1.917,
          343,
          1.34,
          347,
          1.179,
          348,
          1.562,
          349,
          1.714,
          351,
          2.452,
          352,
          1.179,
          354,
          1.562,
          355,
          1.179,
          356,
          1.562,
          357,
          1.179,
          358,
          1.441,
          359,
          1.179,
          361,
          1.179,
          365,
          1.34,
          366,
          1.441,
          367,
          1.254,
          369,
          1.441,
          370,
          3.726,
          373,
          0.9,
          374,
          1.412,
          376,
          1.562,
          377,
          1.714,
          379,
          1.562,
          380,
          1.85,
          382,
          3.321,
          384,
          1.562,
          385,
          1.562,
          386,
          1.714,
          433,
          2.44,
          442,
          3.163,
          465,
          3.027,
          473,
          1.917,
          517,
          1.441,
          523,
          2.452,
          524,
          1.917,
          525,
          3.714,
          526,
          3.714,
          527,
          3.008,
          528,
          3.714,
          529,
          2.225,
          530,
          4.207,
          531,
          2.225,
          532,
          2.225,
          533,
          2.225,
          534,
          2.225,
          535,
          2.225,
          536,
          1.917,
          537,
          3.392,
          538,
          2.225,
          539,
          1.917,
          540,
          2.225,
          541,
          2.225,
          542,
          2.225,
          543,
          2.225,
          544,
          2.225,
          545,
          2.225,
          546,
          3.95,
          547,
          2.225,
          548,
          2.225,
          549,
          1.917,
          550,
          1.714,
          551,
          1.714,
          552,
          2.597,
          553,
          1.917,
          554,
          2.69,
          555,
          2.225,
          556,
          2.225,
          557,
          2.225,
          558,
          2.225,
          559,
          2.225,
          560,
          2.225,
          561,
          2.225,
          562,
          2.225,
          563,
          2.225,
          564,
          2.225,
          565,
          2.225,
          566,
          2.225,
          567,
          2.225,
          568,
          1.917,
          569,
          2.225,
          570,
          2.225,
        ],
      ],
      ['title/modules/CategoryModule.html', [25, 1.385, 38, 2.446]],
      [
        'body/modules/CategoryModule.html',
        [
          2,
          2.076,
          3,
          0.196,
          4,
          0.196,
          5,
          0.155,
          11,
          0.018,
          16,
          0.423,
          17,
          0.723,
          18,
          0.196,
          19,
          0.162,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          25,
          2.147,
          27,
          1.774,
          28,
          1.774,
          29,
          2.116,
          30,
          2.116,
          31,
          1.876,
          32,
          3.298,
          33,
          3.298,
          37,
          4.096,
          38,
          4.993,
          42,
          2.894,
          43,
          2.116,
          44,
          1.989,
          46,
          2.894,
          53,
          3.234,
          86,
          1.637,
          111,
          1.876,
          112,
          2.891,
          113,
          2.262,
          263,
          1.989,
          289,
          2.426,
          304,
          2.892,
          363,
          3.602,
          396,
          3.397,
          398,
          3.326,
          399,
          1.774,
          400,
          2.892,
          523,
          4.108,
          551,
          2.892,
          552,
          4.458,
          553,
          3.234,
          571,
          3.234,
          572,
          3.234,
          573,
          3.234,
          574,
          3.754,
          575,
          3.754,
          576,
          3.234,
          577,
          3.754,
          578,
          3.754,
        ],
      ],
      ['title/classes/CategoryPaginationParam.html', [19, 0.163, 433, 1.886]],
      [
        'body/classes/CategoryPaginationParam.html',
        [
          3,
          0.178,
          4,
          0.178,
          5,
          0.141,
          7,
          0.411,
          10,
          1.399,
          11,
          0.018,
          12,
          1.127,
          16,
          0.277,
          18,
          0.315,
          19,
          0.292,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          83,
          1.015,
          84,
          1.337,
          246,
          2.057,
          251,
          0.868,
          253,
          1.605,
          276,
          1.918,
          306,
          1.613,
          309,
          2.706,
          331,
          1.706,
          373,
          2.249,
          374,
          2.249,
          403,
          2.057,
          404,
          2.03,
          405,
          4.137,
          406,
          4.19,
          407,
          3.603,
          408,
          3.603,
          409,
          3.603,
          410,
          3.603,
          411,
          3.603,
          412,
          2.85,
          413,
          3.113,
          414,
          4.762,
          415,
          2.397,
          416,
          2.956,
          417,
          2.397,
          418,
          2.212,
          419,
          2.397,
          420,
          2.896,
          421,
          2.397,
          422,
          2.397,
          423,
          2.397,
          424,
          2.212,
          425,
          2.397,
          426,
          3.135,
          427,
          1.925,
          428,
          2.779,
          429,
          1.452,
          430,
          2.212,
          431,
          2.212,
          432,
          2.212,
          433,
          2.401,
          434,
          1.706,
          435,
          1.706,
        ],
      ],
      ['title/injectables/CategoryService.html', [178, 0.836, 552, 2.275]],
      [
        'body/injectables/CategoryService.html',
        [
          3,
          0.091,
          4,
          0.091,
          5,
          0.072,
          7,
          0.209,
          8,
          0.956,
          11,
          0.018,
          12,
          0.987,
          14,
          1.925,
          15,
          1.339,
          16,
          0.351,
          17,
          0.334,
          18,
          0.091,
          19,
          0.075,
          20,
          1.925,
          22,
          0.004,
          23,
          0.006,
          24,
          0.004,
          73,
          2.75,
          81,
          2.077,
          82,
          1.561,
          83,
          0.845,
          84,
          1.315,
          102,
          2.595,
          124,
          1.352,
          125,
          1.43,
          126,
          1.05,
          178,
          0.634,
          179,
          0.703,
          213,
          2.805,
          214,
          0.821,
          218,
          1.695,
          219,
          2.724,
          221,
          2.875,
          222,
          2.691,
          228,
          3.734,
          250,
          2.264,
          254,
          4.032,
          257,
          2.249,
          258,
          1.999,
          263,
          3.454,
          267,
          0.92,
          276,
          1.9,
          280,
          1.823,
          302,
          0.703,
          318,
          1.217,
          320,
          2.242,
          321,
          1.516,
          322,
          2.385,
          327,
          2.242,
          334,
          1.613,
          337,
          1.613,
          343,
          1.047,
          347,
          0.92,
          352,
          0.92,
          359,
          0.92,
          361,
          0.92,
          363,
          2.82,
          365,
          1.047,
          366,
          1.125,
          367,
          0.979,
          373,
          1.711,
          374,
          1.711,
          380,
          0.92,
          399,
          0.821,
          416,
          0.778,
          433,
          0.868,
          438,
          2.971,
          442,
          3.261,
          448,
          2.01,
          454,
          1.22,
          459,
          1.338,
          460,
          2.563,
          462,
          2.971,
          464,
          2.563,
          465,
          2.01,
          466,
          2.563,
          468,
          1.22,
          469,
          1.22,
          470,
          1.22,
          471,
          3.031,
          472,
          2.971,
          474,
          1.125,
          476,
          1.22,
          477,
          1.22,
          480,
          3.738,
          482,
          1.22,
          483,
          1.497,
          486,
          1.497,
          499,
          1.497,
          517,
          1.125,
          525,
          3.144,
          526,
          3.144,
          527,
          2.466,
          528,
          3.144,
          530,
          3.144,
          536,
          2.466,
          537,
          3.033,
          539,
          2.466,
          546,
          3.448,
          549,
          1.497,
          550,
          1.338,
          551,
          1.338,
          552,
          1.724,
          554,
          2.205,
          576,
          1.497,
          579,
          1.497,
          580,
          2.862,
          581,
          1.737,
          582,
          1.737,
          583,
          2.862,
          584,
          1.737,
          585,
          1.737,
          586,
          5.324,
          587,
          1.737,
          588,
          1.737,
          589,
          1.737,
          590,
          1.737,
          591,
          1.737,
          592,
          1.737,
          593,
          1.737,
          594,
          2.862,
          595,
          1.737,
          596,
          1.737,
          597,
          1.737,
          598,
          1.737,
          599,
          1.737,
          600,
          1.737,
          601,
          2.466,
          602,
          1.497,
          603,
          1.737,
          604,
          2.862,
          605,
          1.737,
          606,
          4.232,
          607,
          1.737,
          608,
          1.737,
          609,
          1.737,
          610,
          1.737,
          611,
          1.737,
          612,
          2.862,
          613,
          2.862,
          614,
          1.737,
          615,
          1.737,
          616,
          1.737,
          617,
          2.862,
          618,
          1.737,
          619,
          1.737,
          620,
          1.737,
          621,
          2.862,
          622,
          1.737,
          623,
          1.737,
        ],
      ],
      ['title/classes/CreateBookDto.html', [19, 0.163, 327, 2]],
      [
        'body/classes/CreateBookDto.html',
        [
          3,
          0.216,
          4,
          0.216,
          5,
          0.171,
          7,
          0.497,
          10,
          1.981,
          11,
          0.017,
          12,
          1.131,
          15,
          2.4,
          16,
          0.316,
          18,
          0.216,
          19,
          0.236,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          82,
          1.492,
          83,
          0.968,
          84,
          1.549,
          196,
          3.268,
          251,
          1.051,
          253,
          1.83,
          256,
          3.98,
          258,
          2.903,
          259,
          5.294,
          260,
          5.294,
          274,
          2.331,
          276,
          1.457,
          295,
          2.066,
          296,
          2.492,
          307,
          3.301,
          327,
          2.903,
          426,
          3.089,
          427,
          2.331,
          428,
          3.268,
          429,
          1.759,
          624,
          6.025,
          625,
          3.186,
          626,
          3.563,
          627,
          4.136,
          628,
          3.847,
          629,
          4.136,
          630,
          4.136,
          631,
          3.186,
          632,
          4.136,
          633,
          4.136,
          634,
          4.136,
          635,
          4.314,
          636,
          3.98,
          637,
          4.733,
          638,
          3.563,
          639,
          3.186,
          640,
          3.563,
          641,
          3.563,
        ],
      ],
      ['title/classes/CreateCategoryDto.html', [19, 0.163, 537, 2.275]],
      [
        'body/classes/CreateCategoryDto.html',
        [
          3,
          0.239,
          4,
          0.239,
          5,
          0.189,
          7,
          0.55,
          10,
          1.878,
          11,
          0.017,
          12,
          1.072,
          15,
          2.495,
          16,
          0.338,
          18,
          0.239,
          19,
          0.252,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          82,
          1.566,
          83,
          0.918,
          84,
          1.506,
          196,
          2.923,
          251,
          1.162,
          253,
          1.954,
          256,
          4.179,
          258,
          3.048,
          274,
          2.579,
          295,
          2.286,
          296,
          2.756,
          307,
          3.525,
          428,
          3.223,
          429,
          1.945,
          537,
          3.525,
          626,
          3.941,
          628,
          3.212,
          631,
          3.524,
          635,
          4.109,
          636,
          3.79,
          637,
          4.969,
          638,
          3.941,
          639,
          3.524,
          640,
          3.941,
          642,
          5.858,
          643,
          3.524,
          644,
          4.575,
          645,
          4.575,
          646,
          4.575,
        ],
      ],
      ['title/classes/CreateRecordDto.html', [19, 0.163, 647, 2.446]],
      [
        'body/classes/CreateRecordDto.html',
        [
          3,
          0.216,
          4,
          0.216,
          5,
          0.172,
          7,
          0.499,
          10,
          1.983,
          11,
          0.018,
          12,
          1.132,
          16,
          0.355,
          18,
          0.216,
          19,
          0.237,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          83,
          0.969,
          84,
          1.551,
          86,
          1.962,
          111,
          2.072,
          196,
          2.742,
          250,
          2.976,
          251,
          1.054,
          253,
          1.833,
          258,
          2.907,
          269,
          4.242,
          428,
          3.272,
          429,
          1.763,
          494,
          4.32,
          495,
          4.32,
          501,
          4.32,
          517,
          2.686,
          628,
          2.912,
          635,
          3.854,
          636,
          3.986,
          647,
          3.556,
          648,
          6.03,
          649,
          3.194,
          650,
          4.147,
          651,
          4.147,
          652,
          5.489,
          653,
          4.147,
          654,
          4.147,
          655,
          4.147,
          656,
          4.147,
          657,
          4.147,
          658,
          6.153,
          659,
          4.147,
          660,
          4.147,
          661,
          4.147,
        ],
      ],
      ['title/classes/CreateUserDto.html', [19, 0.163, 99, 2]],
      [
        'body/classes/CreateUserDto.html',
        [
          3,
          0.208,
          4,
          0.208,
          5,
          0.165,
          7,
          0.48,
          10,
          1.958,
          11,
          0.018,
          12,
          1.118,
          15,
          2.637,
          16,
          0.309,
          18,
          0.208,
          19,
          0.231,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          83,
          0.957,
          99,
          2.836,
          135,
          4.611,
          196,
          2.674,
          207,
          3.911,
          209,
          3.223,
          216,
          2.804,
          251,
          1.015,
          253,
          1.788,
          274,
          3.403,
          295,
          1.995,
          296,
          2.406,
          307,
          3.886,
          428,
          2.674,
          429,
          1.698,
          628,
          2.804,
          631,
          4.123,
          635,
          3.758,
          636,
          4.357,
          637,
          5.182,
          639,
          4.123,
          662,
          5.965,
          663,
          2.804,
          664,
          3.911,
          665,
          5.202,
          666,
          3.911,
          667,
          3.993,
          668,
          3.993,
          669,
          3.993,
          670,
          3.993,
          671,
          5.353,
          672,
          3.993,
          673,
          3.993,
          674,
          3.993,
          675,
          3.993,
          676,
          3.993,
          677,
          3.44,
          678,
          3.993,
          679,
          3.993,
          680,
          3.993,
          681,
          3.44,
          682,
          3.44,
          683,
          3.993,
        ],
      ],
      ['title/modules/DatabaseModule.html', [25, 1.385, 39, 2.446]],
      [
        'body/modules/DatabaseModule.html',
        [
          3,
          0.261,
          4,
          0.261,
          5,
          0.207,
          11,
          0.018,
          16,
          0.405,
          17,
          0.962,
          18,
          0.261,
          19,
          0.216,
          20,
          1.67,
          22,
          0.011,
          23,
          0.014,
          24,
          0.011,
          25,
          2.27,
          27,
          2.362,
          39,
          4.008,
          46,
          2.818,
          218,
          1.523,
          245,
          5.331,
          398,
          3.239,
          399,
          2.362,
          684,
          5,
          685,
          6.188,
          686,
          6.72,
          687,
          5,
          688,
          5,
          689,
          6.188,
          690,
          5,
          691,
          5,
          692,
          5,
          693,
          5,
          694,
          5,
        ],
      ],
      ['title/classes/ExceptionsFilter.html', [19, 0.163, 60, 2.651]],
      [
        'body/classes/ExceptionsFilter.html',
        [
          3,
          0.227,
          4,
          0.227,
          5,
          0.18,
          7,
          0.523,
          8,
          1.892,
          11,
          0.018,
          12,
          0.723,
          14,
          1.453,
          15,
          2.078,
          16,
          0.251,
          17,
          0.837,
          18,
          0.227,
          19,
          0.188,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          60,
          3.977,
          81,
          1.522,
          82,
          1.056,
          83,
          0.619,
          84,
          0.964,
          213,
          2.676,
          214,
          2.056,
          218,
          1.726,
          222,
          1.85,
          251,
          1.105,
          276,
          1.157,
          471,
          4.322,
          695,
          4.88,
          696,
          3.748,
          697,
          3.977,
          698,
          6.298,
          699,
          5.664,
          700,
          5.426,
          701,
          6.298,
          702,
          6.672,
          703,
          4.35,
          704,
          5.664,
          705,
          4.35,
          706,
          4.35,
          707,
          4.35,
          708,
          4.35,
          709,
          4.35,
          710,
          6.918,
          711,
          6.918,
          712,
          4.35,
          713,
          4.35,
          714,
          4.35,
          715,
          3.748,
          716,
          4.35,
          717,
          3.748,
          718,
          3.748,
          719,
          4.35,
          720,
          4.35,
          721,
          4.35,
        ],
      ],
      [
        'title/injectables/ExcludeNullInterceptor.html',
        [178, 0.836, 722, 2.908],
      ],
      [
        'body/injectables/ExcludeNullInterceptor.html',
        [
          3,
          0.213,
          4,
          0.213,
          5,
          0.169,
          7,
          0.492,
          8,
          1.817,
          11,
          0.018,
          12,
          0.904,
          14,
          1.817,
          16,
          0.353,
          17,
          0.787,
          18,
          0.213,
          19,
          0.176,
          20,
          2.176,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          81,
          1.904,
          82,
          1.321,
          83,
          0.774,
          84,
          1.205,
          147,
          5.611,
          178,
          1.205,
          179,
          1.654,
          412,
          3.122,
          697,
          2.872,
          700,
          5.842,
          722,
          4.19,
          723,
          3.524,
          724,
          5.439,
          725,
          5.439,
          726,
          5.439,
          727,
          5.611,
          728,
          6.513,
          729,
          4.091,
          730,
          3.524,
          731,
          6.111,
          732,
          5.439,
          733,
          4.091,
          734,
          5.439,
          735,
          3.524,
          736,
          4.091,
          737,
          4.091,
          738,
          4.091,
          739,
          4.091,
          740,
          5.439,
          741,
          4.091,
          742,
          4.091,
          743,
          5.439,
          744,
          4.091,
          745,
          4.091,
          746,
          4.091,
          747,
          4.091,
          748,
          3.524,
        ],
      ],
      ['title/injectables/GoogleAuthGuard.html', [117, 2.651, 178, 0.836]],
      [
        'body/injectables/GoogleAuthGuard.html',
        [
          3,
          0.291,
          4,
          0.291,
          5,
          0.231,
          11,
          0.017,
          16,
          0.381,
          17,
          1.073,
          18,
          0.291,
          19,
          0.24,
          22,
          0.013,
          23,
          0.015,
          24,
          0.013,
          117,
          4.64,
          167,
          2.953,
          178,
          1.464,
          179,
          2.254,
          404,
          1.778,
          749,
          4.801,
          750,
          4.293,
          751,
          5.573,
        ],
      ],
      ['title/injectables/GoogleStrategy.html', [159, 2.446, 178, 0.836]],
      [
        'body/injectables/GoogleStrategy.html',
        [
          3,
          0.195,
          4,
          0.195,
          5,
          0.155,
          7,
          0.449,
          8,
          1.709,
          11,
          0.018,
          12,
          0.85,
          14,
          1.248,
          15,
          2.491,
          16,
          0.401,
          17,
          0.719,
          18,
          0.195,
          19,
          0.161,
          20,
          1.248,
          22,
          0.008,
          23,
          0.012,
          24,
          0.008,
          48,
          2.251,
          73,
          2.246,
          81,
          1.791,
          82,
          1.417,
          83,
          0.728,
          84,
          1.133,
          86,
          1.192,
          90,
          3.314,
          102,
          1.97,
          110,
          1.979,
          111,
          1.866,
          114,
          3.208,
          115,
          2.42,
          124,
          2.417,
          125,
          2.556,
          126,
          1.877,
          159,
          3.314,
          163,
          4.881,
          167,
          1.979,
          178,
          1.133,
          179,
          1.511,
          200,
          3.083,
          202,
          2.878,
          209,
          1.866,
          217,
          3.218,
          218,
          1.559,
          221,
          1.765,
          222,
          1.589,
          404,
          1.192,
          664,
          2.42,
          666,
          2.42,
          677,
          3.218,
          752,
          3.218,
          753,
          4.495,
          754,
          2.623,
          755,
          3.736,
          756,
          3.736,
          757,
          5.835,
          758,
          6.789,
          759,
          3.736,
          760,
          5.116,
          761,
          2.878,
          762,
          2.878,
          763,
          2.623,
          764,
          3.941,
          765,
          3.218,
          766,
          2.878,
          767,
          2.878,
          768,
          3.736,
          769,
          3.736,
          770,
          3.736,
          771,
          3.736,
          772,
          3.736,
          773,
          3.736,
          774,
          3.736,
          775,
          3.736,
          776,
          3.736,
          777,
          3.736,
          778,
          3.736,
          779,
          3.736,
        ],
      ],
      ['title/classes/GoogleUserDto.html', [19, 0.163, 200, 2.275]],
      [
        'body/classes/GoogleUserDto.html',
        [
          3,
          0.282,
          4,
          0.282,
          5,
          0.224,
          11,
          0.017,
          16,
          0.375,
          18,
          0.282,
          19,
          0.233,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          99,
          2.868,
          110,
          2.868,
          200,
          3.913,
          209,
          2.704,
          218,
          1.649,
          251,
          1.375,
          318,
          2.302,
          404,
          1.726,
          663,
          3.801,
          664,
          3.506,
          666,
          3.506,
          780,
          4.663,
          781,
          4.17,
          782,
          3.051,
          783,
          3.051,
          784,
          4.17,
        ],
      ],
      ['title/interfaces/IRequest.html', [78, 2.275, 785, 2.651]],
      [
        'body/interfaces/IRequest.html',
        [
          3,
          0.245,
          4,
          0.245,
          5,
          0.194,
          7,
          0.564,
          11,
          0.018,
          15,
          2.518,
          16,
          0.343,
          17,
          0.902,
          18,
          0.369,
          22,
          0.011,
          23,
          0.013,
          24,
          0.011,
          70,
          4.04,
          78,
          3.581,
          83,
          0.976,
          85,
          4.227,
          86,
          2.307,
          90,
          3.037,
          111,
          2.343,
          204,
          3.037,
          209,
          2.97,
          236,
          4.04,
          241,
          5.121,
          253,
          1.985,
          276,
          1.58,
          404,
          1.896,
          444,
          3.612,
          785,
          3.292,
          786,
          4.689,
          787,
          3.612,
          788,
          5.121,
          789,
          4.04,
        ],
      ],
      ['title/classes/IdParam.html', [19, 0.163, 790, 2.908]],
      [
        'body/classes/IdParam.html',
        [
          3,
          0.278,
          4,
          0.278,
          5,
          0.221,
          7,
          0.642,
          10,
          1.554,
          11,
          0.017,
          12,
          0.887,
          16,
          0.308,
          18,
          0.278,
          19,
          0.278,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          83,
          0.759,
          251,
          1.356,
          253,
          2.151,
          257,
          2.796,
          276,
          1.712,
          426,
          3.63,
          427,
          3.008,
          429,
          2.269,
          641,
          4.597,
          790,
          4.96,
          791,
          4.597,
          792,
          5.336,
          793,
          5.336,
        ],
      ],
      ['title/injectables/JwtAuthGuard.html', [119, 2, 178, 0.836]],
      [
        'body/injectables/JwtAuthGuard.html',
        [
          3,
          0.291,
          4,
          0.291,
          5,
          0.231,
          11,
          0.017,
          16,
          0.381,
          17,
          1.073,
          18,
          0.291,
          19,
          0.24,
          22,
          0.013,
          23,
          0.015,
          24,
          0.013,
          119,
          3.501,
          167,
          2.953,
          178,
          1.464,
          179,
          2.254,
          404,
          1.778,
          750,
          4.293,
          794,
          4.801,
          795,
          5.573,
        ],
      ],
      ['title/injectables/JwtStrategy.html', [160, 2.446, 178, 0.836]],
      [
        'body/injectables/JwtStrategy.html',
        [
          3,
          0.216,
          4,
          0.216,
          5,
          0.171,
          7,
          0.497,
          8,
          1.83,
          11,
          0.018,
          12,
          0.911,
          14,
          1.381,
          16,
          0.412,
          17,
          0.796,
          18,
          0.216,
          19,
          0.178,
          20,
          1.381,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          48,
          2.492,
          73,
          2.366,
          81,
          1.917,
          82,
          1.33,
          83,
          0.779,
          84,
          1.214,
          86,
          1.319,
          102,
          2.109,
          111,
          2.066,
          114,
          3.304,
          115,
          2.679,
          116,
          3.186,
          124,
          2.589,
          125,
          2.737,
          126,
          2.01,
          160,
          3.549,
          163,
          5.01,
          167,
          2.191,
          178,
          1.214,
          179,
          1.672,
          204,
          4.409,
          280,
          2.066,
          404,
          1.319,
          753,
          4.221,
          754,
          2.904,
          761,
          3.186,
          762,
          3.186,
          763,
          2.904,
          766,
          3.186,
          767,
          3.186,
          796,
          3.563,
          797,
          4.136,
          798,
          5.479,
          799,
          4.136,
          800,
          4.136,
          801,
          4.72,
          802,
          4.136,
          803,
          4.136,
          804,
          4.136,
          805,
          4.136,
          806,
          4.136,
          807,
          4.136,
        ],
      ],
      ['title/classes/LengthLimits.html', [19, 0.163, 295, 1.886]],
      [
        'body/classes/LengthLimits.html',
        [
          3,
          0.202,
          4,
          0.202,
          5,
          0.161,
          7,
          0.467,
          11,
          0.018,
          12,
          1.141,
          18,
          0.202,
          19,
          0.167,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          83,
          0.977,
          126,
          2.807,
          251,
          0.986,
          253,
          1.754,
          276,
          1.826,
          295,
          2.623,
          309,
          2.985,
          406,
          4.313,
          412,
          3.075,
          416,
          2.351,
          682,
          4.523,
          808,
          3.343,
          809,
          5.95,
          810,
          5.95,
          811,
          5.95,
          812,
          5.95,
          813,
          5.95,
          814,
          5.95,
          815,
          5.25,
          816,
          3.88,
          817,
          3.88,
          818,
          3.88,
          819,
          5.25,
          820,
          3.88,
          821,
          5.25,
          822,
          3.88,
          823,
          5.25,
          824,
          3.88,
          825,
          6.866,
        ],
      ],
      ['title/injectables/LocalAuthGuard.html', [121, 2.651, 178, 0.836]],
      [
        'body/injectables/LocalAuthGuard.html',
        [
          3,
          0.291,
          4,
          0.291,
          5,
          0.231,
          11,
          0.017,
          16,
          0.381,
          17,
          1.073,
          18,
          0.291,
          19,
          0.24,
          22,
          0.013,
          23,
          0.015,
          24,
          0.013,
          121,
          4.64,
          167,
          2.953,
          178,
          1.464,
          179,
          2.254,
          404,
          1.778,
          750,
          4.293,
          826,
          4.801,
          827,
          5.573,
        ],
      ],
      ['title/injectables/LocalStrategy.html', [161, 2.446, 178, 0.836]],
      [
        'body/injectables/LocalStrategy.html',
        [
          3,
          0.229,
          4,
          0.229,
          5,
          0.182,
          7,
          0.528,
          8,
          1.903,
          11,
          0.018,
          12,
          0.947,
          14,
          1.466,
          15,
          2.608,
          16,
          0.4,
          17,
          0.845,
          18,
          0.229,
          19,
          0.189,
          20,
          1.466,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          73,
          2.435,
          81,
          1.994,
          82,
          1.383,
          83,
          0.81,
          84,
          1.262,
          86,
          1.4,
          102,
          2.193,
          111,
          2.193,
          114,
          3.359,
          115,
          2.843,
          124,
          2.073,
          126,
          1.61,
          161,
          3.69,
          167,
          2.325,
          178,
          1.262,
          179,
          1.775,
          207,
          4.336,
          209,
          2.193,
          369,
          2.843,
          404,
          1.4,
          753,
          4.388,
          754,
          3.081,
          761,
          3.38,
          762,
          3.38,
          763,
          3.081,
          766,
          3.38,
          767,
          3.38,
          828,
          3.781,
          829,
          4.388,
          830,
          5.696,
          831,
          4.388,
          832,
          4.908,
          833,
          4.388,
        ],
      ],
      ['title/classes/PaginationParam.html', [19, 0.163, 405, 2.128]],
      [
        'body/classes/PaginationParam.html',
        [
          3,
          0.185,
          4,
          0.185,
          5,
          0.147,
          7,
          0.426,
          10,
          1.436,
          11,
          0.018,
          12,
          1.139,
          16,
          0.284,
          18,
          0.32,
          19,
          0.295,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          83,
          1.023,
          84,
          1.359,
          246,
          2.134,
          251,
          0.9,
          253,
          1.647,
          276,
          1.931,
          306,
          1.674,
          309,
          2.743,
          331,
          1.77,
          373,
          2.294,
          374,
          2.294,
          403,
          2.134,
          404,
          1.957,
          405,
          3.765,
          406,
          4.212,
          407,
          3.676,
          408,
          3.676,
          409,
          3.676,
          410,
          3.676,
          411,
          3.676,
          412,
          2.889,
          413,
          3.195,
          416,
          2.991,
          418,
          2.295,
          420,
          2.972,
          424,
          2.295,
          426,
          3.198,
          427,
          1.997,
          428,
          2.835,
          429,
          1.506,
          430,
          2.295,
          431,
          2.295,
          432,
          2.295,
          433,
          1.77,
          434,
          1.77,
          435,
          1.77,
          834,
          3.542,
          835,
          3.542,
          836,
          3.542,
          837,
          3.542,
          838,
          3.542,
          839,
          3.542,
          840,
          3.542,
        ],
      ],
      ['title/classes/Record.html', [19, 0.163, 289, 1.784]],
      [
        'body/classes/Record.html',
        [
          3,
          0.158,
          4,
          0.158,
          5,
          0.126,
          7,
          0.365,
          10,
          2.024,
          11,
          0.018,
          12,
          1.155,
          16,
          0.33,
          18,
          0.158,
          19,
          0.191,
          22,
          0.007,
          23,
          0.01,
          24,
          0.007,
          82,
          1.729,
          83,
          0.989,
          86,
          1.939,
          111,
          1.517,
          196,
          2.208,
          250,
          2.854,
          251,
          0.771,
          253,
          1.476,
          255,
          3.658,
          257,
          2.107,
          258,
          2.462,
          262,
          3.658,
          265,
          3.103,
          266,
          4.456,
          267,
          3.362,
          269,
          4.348,
          270,
          2.132,
          271,
          2.339,
          273,
          3.404,
          276,
          1.687,
          277,
          3.658,
          279,
          2.132,
          280,
          2.208,
          281,
          2.339,
          287,
          4.456,
          289,
          2.088,
          292,
          2.132,
          293,
          2.132,
          297,
          3.103,
          298,
          3.103,
          299,
          3.103,
          302,
          1.228,
          305,
          4.018,
          306,
          1.434,
          309,
          1.291,
          310,
          2.339,
          311,
          2.132,
          312,
          2.132,
          442,
          3.375,
          494,
          3.658,
          495,
          3.658,
          501,
          3.658,
          506,
          4.488,
          517,
          1.967,
          522,
          4.93,
          841,
          2.615,
          842,
          4.488,
          843,
          4.419,
          844,
          4.419,
          845,
          3.036,
          846,
          3.036,
          847,
          3.807,
          848,
          4.419,
          849,
          3.036,
          850,
          5.722,
          851,
          3.036,
          852,
          3.036,
          853,
          3.036,
          854,
          3.036,
          855,
          3.036,
          856,
          4.419,
          857,
          3.036,
          858,
          3.036,
          859,
          5.21,
          860,
          3.036,
          861,
          3.036,
        ],
      ],
      ['title/controllers/RecordController.html', [0, 1.527, 862, 2.651]],
      [
        'body/controllers/RecordController.html',
        [
          0,
          1.393,
          2,
          1.393,
          3,
          0.18,
          4,
          0.18,
          5,
          0.143,
          7,
          0.414,
          8,
          1.616,
          10,
          1.627,
          11,
          0.018,
          12,
          0.929,
          14,
          1.867,
          16,
          0.407,
          17,
          0.663,
          18,
          0.18,
          19,
          0.149,
          20,
          1.867,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          69,
          2.232,
          73,
          2.715,
          81,
          1.956,
          82,
          1.357,
          83,
          0.795,
          84,
          1.238,
          102,
          2.549,
          104,
          2.232,
          107,
          2.232,
          119,
          1.825,
          126,
          1.264,
          127,
          2.232,
          128,
          3.133,
          213,
          2.285,
          214,
          1.628,
          218,
          1.05,
          219,
          1.628,
          221,
          1.628,
          222,
          1.465,
          257,
          2.582,
          276,
          1.76,
          289,
          3.128,
          302,
          1.393,
          320,
          2.563,
          321,
          2.563,
          332,
          2.654,
          334,
          1.942,
          335,
          2.419,
          337,
          1.942,
          347,
          1.825,
          348,
          2.419,
          351,
          3.397,
          352,
          1.825,
          354,
          2.419,
          355,
          1.825,
          356,
          2.419,
          357,
          1.825,
          358,
          2.232,
          359,
          1.825,
          361,
          1.825,
          369,
          2.232,
          370,
          2.419,
          373,
          1.393,
          374,
          1.956,
          376,
          2.419,
          377,
          2.654,
          379,
          2.419,
          380,
          1.825,
          384,
          2.419,
          385,
          2.419,
          386,
          2.654,
          396,
          2.793,
          434,
          3.028,
          862,
          3.397,
          863,
          2.968,
          864,
          4.816,
          865,
          3.445,
          866,
          3.445,
          867,
          3.445,
          868,
          3.445,
          869,
          3.445,
          870,
          2.654,
          871,
          2.654,
          872,
          2.968,
          873,
          3.445,
          874,
          3.445,
          875,
          3.445,
          876,
          3.445,
        ],
      ],
      ['title/modules/RecordModule.html', [25, 1.385, 40, 2.275]],
      [
        'body/modules/RecordModule.html',
        [
          2,
          2.339,
          3,
          0.234,
          4,
          0.234,
          5,
          0.186,
          11,
          0.018,
          16,
          0.403,
          17,
          0.865,
          18,
          0.234,
          19,
          0.194,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          25,
          2.347,
          27,
          2.123,
          28,
          2.123,
          29,
          2.533,
          30,
          2.533,
          31,
          2.245,
          32,
          3.606,
          33,
          3.606,
          40,
          4.623,
          42,
          3.26,
          43,
          2.533,
          44,
          2.38,
          46,
          2.533,
          289,
          2.123,
          396,
          3.799,
          398,
          3.747,
          399,
          2.123,
          862,
          4.492,
          871,
          3.461,
          872,
          3.871,
          877,
          3.871,
          878,
          4.493,
          879,
          3.871,
          880,
          4.493,
          881,
          4.493,
          882,
          4.493,
        ],
      ],
      ['title/classes/RecordPaginationParam.html', [19, 0.163, 434, 1.886]],
      [
        'body/classes/RecordPaginationParam.html',
        [
          3,
          0.178,
          4,
          0.178,
          5,
          0.141,
          7,
          0.411,
          10,
          1.399,
          11,
          0.018,
          12,
          1.127,
          16,
          0.277,
          18,
          0.315,
          19,
          0.292,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          83,
          1.015,
          84,
          1.337,
          246,
          2.057,
          251,
          0.868,
          253,
          1.605,
          276,
          1.918,
          306,
          1.613,
          309,
          2.706,
          331,
          1.706,
          373,
          2.249,
          374,
          2.249,
          403,
          2.057,
          404,
          2.03,
          405,
          4.137,
          406,
          4.19,
          407,
          3.603,
          408,
          3.603,
          409,
          3.603,
          410,
          3.603,
          411,
          3.603,
          412,
          2.85,
          413,
          3.113,
          414,
          4.762,
          415,
          2.397,
          416,
          2.956,
          417,
          2.397,
          418,
          2.212,
          419,
          2.397,
          420,
          2.896,
          421,
          2.397,
          422,
          2.397,
          423,
          2.397,
          424,
          2.212,
          425,
          2.397,
          426,
          3.135,
          427,
          1.925,
          428,
          2.779,
          429,
          1.452,
          430,
          2.212,
          431,
          2.212,
          432,
          2.212,
          433,
          1.706,
          434,
          2.401,
          435,
          1.706,
        ],
      ],
      ['title/injectables/RecordService.html', [178, 0.836, 396, 1.886]],
      [
        'body/injectables/RecordService.html',
        [
          3,
          0.117,
          4,
          0.117,
          5,
          0.093,
          7,
          0.27,
          8,
          1.173,
          11,
          0.018,
          12,
          0.981,
          14,
          1.887,
          16,
          0.363,
          17,
          0.431,
          18,
          0.117,
          19,
          0.151,
          20,
          1.887,
          22,
          0.005,
          23,
          0.008,
          24,
          0.005,
          73,
          2.727,
          81,
          2.066,
          82,
          1.434,
          83,
          0.84,
          84,
          1.308,
          102,
          2.564,
          124,
          1.66,
          125,
          1.12,
          126,
          0.822,
          178,
          0.778,
          179,
          0.906,
          213,
          2.669,
          214,
          1.059,
          218,
          1.622,
          219,
          1.059,
          221,
          2.79,
          222,
          2.673,
          228,
          3.659,
          257,
          2.388,
          258,
          2.047,
          261,
          4.101,
          263,
          1.187,
          267,
          1.187,
          276,
          1.918,
          280,
          1.755,
          289,
          2.669,
          302,
          0.906,
          318,
          1.494,
          320,
          2.295,
          321,
          1.861,
          322,
          2.764,
          334,
          1.98,
          337,
          1.98,
          343,
          1.35,
          347,
          1.187,
          352,
          1.187,
          359,
          1.187,
          361,
          1.187,
          365,
          1.35,
          367,
          1.263,
          373,
          1.751,
          374,
          1.983,
          380,
          1.187,
          396,
          1.755,
          399,
          1.059,
          416,
          1.004,
          429,
          0.953,
          434,
          1.12,
          438,
          3.443,
          442,
          3.449,
          444,
          2.706,
          448,
          2.466,
          454,
          1.574,
          458,
          1.726,
          459,
          1.726,
          460,
          3.041,
          462,
          3.443,
          464,
          3.041,
          466,
          3.041,
          468,
          1.574,
          469,
          1.574,
          470,
          1.574,
          471,
          3.176,
          472,
          3.041,
          474,
          1.452,
          476,
          1.574,
          477,
          1.574,
          480,
          3.739,
          482,
          1.574,
          495,
          1.574,
          501,
          1.574,
          636,
          2.275,
          647,
          3.659,
          842,
          1.931,
          864,
          3.026,
          870,
          1.726,
          871,
          1.726,
          883,
          1.931,
          884,
          3.512,
          885,
          2.241,
          886,
          2.241,
          887,
          3.512,
          888,
          3.512,
          889,
          2.241,
          890,
          3.512,
          891,
          2.241,
          892,
          2.241,
          893,
          3.512,
          894,
          2.241,
          895,
          2.241,
          896,
          4.146,
          897,
          2.241,
          898,
          3.512,
          899,
          3.026,
          900,
          2.241,
          901,
          2.241,
          902,
          2.241,
          903,
          2.241,
          904,
          2.241,
          905,
          3.512,
          906,
          3.512,
          907,
          2.241,
          908,
          2.241,
          909,
          3.512,
          910,
          2.241,
          911,
          2.241,
        ],
      ],
      ['title/guards/RolesGuard.html', [57, 2.651, 912, 2.908]],
      [
        'body/guards/RolesGuard.html',
        [
          3,
          0.206,
          4,
          0.206,
          5,
          0.164,
          7,
          0.475,
          8,
          1.775,
          11,
          0.018,
          12,
          0.883,
          14,
          1.32,
          16,
          0.387,
          17,
          0.76,
          18,
          0.206,
          19,
          0.17,
          20,
          1.775,
          22,
          0.009,
          23,
          0.012,
          24,
          0.009,
          57,
          3.732,
          73,
          2.312,
          81,
          1.86,
          82,
          1.29,
          83,
          0.756,
          84,
          1.177,
          85,
          2.56,
          86,
          1.26,
          102,
          2.046,
          114,
          3.262,
          124,
          2.511,
          125,
          2.655,
          126,
          1.95,
          178,
          1.177,
          212,
          3.404,
          218,
          2.042,
          219,
          1.867,
          267,
          2.093,
          274,
          2.227,
          355,
          2.093,
          357,
          2.093,
          697,
          2.774,
          727,
          5.534,
          730,
          3.404,
          754,
          2.774,
          913,
          3.951,
          914,
          3.404,
          915,
          6.423,
          916,
          7.054,
          917,
          3.951,
          918,
          5.315,
          919,
          3.951,
          920,
          3.404,
          921,
          3.951,
          922,
          3.044,
          923,
          3.951,
          924,
          3.951,
          925,
          5.315,
          926,
          3.951,
          927,
          3.951,
          928,
          3.951,
          929,
          3.951,
          930,
          3.951,
          931,
          3.951,
          932,
          3.951,
          933,
          5.315,
          934,
          3.951,
          935,
          3.951,
          936,
          3.951,
        ],
      ],
      ['title/classes/SignedInUserDto.html', [19, 0.163, 937, 2.908]],
      [
        'body/classes/SignedInUserDto.html',
        [
          3,
          0.283,
          4,
          0.283,
          5,
          0.225,
          11,
          0.017,
          16,
          0.375,
          18,
          0.283,
          19,
          0.234,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          99,
          2.878,
          110,
          2.878,
          207,
          3.519,
          209,
          2.714,
          218,
          1.655,
          251,
          1.38,
          318,
          2.31,
          404,
          1.733,
          781,
          4.185,
          782,
          3.062,
          783,
          3.062,
          784,
          4.185,
          937,
          5.013,
          938,
          4.68,
          939,
          4.68,
        ],
      ],
      ['title/classes/UpdateBookDto.html', [19, 0.163, 344, 2.446]],
      [
        'body/classes/UpdateBookDto.html',
        [
          3,
          0.283,
          4,
          0.283,
          5,
          0.225,
          11,
          0.017,
          16,
          0.375,
          18,
          0.283,
          19,
          0.234,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          82,
          1.319,
          218,
          1.655,
          251,
          1.38,
          318,
          2.31,
          327,
          2.878,
          344,
          4.216,
          366,
          3.519,
          404,
          1.733,
          625,
          4.185,
          782,
          3.062,
          783,
          3.062,
          940,
          4.68,
          941,
          4.185,
          942,
          5.013,
          943,
          5.433,
        ],
      ],
      ['title/classes/UpdateCategoryDto.html', [19, 0.163, 546, 2.446]],
      [
        'body/classes/UpdateCategoryDto.html',
        [
          3,
          0.283,
          4,
          0.283,
          5,
          0.225,
          11,
          0.017,
          16,
          0.375,
          18,
          0.283,
          19,
          0.234,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          82,
          1.319,
          218,
          1.655,
          251,
          1.38,
          318,
          2.31,
          404,
          1.733,
          537,
          3.273,
          546,
          4.216,
          554,
          4.185,
          643,
          4.185,
          782,
          3.062,
          783,
          3.062,
          941,
          4.185,
          942,
          5.013,
          944,
          4.68,
          945,
          5.433,
        ],
      ],
      ['title/classes/UpdateRecordDto.html', [19, 0.163, 896, 2.651]],
      [
        'body/classes/UpdateRecordDto.html',
        [
          3,
          0.282,
          4,
          0.282,
          5,
          0.224,
          11,
          0.017,
          16,
          0.375,
          18,
          0.282,
          19,
          0.233,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          218,
          1.649,
          250,
          2.302,
          251,
          1.375,
          318,
          2.302,
          404,
          1.726,
          494,
          3.801,
          647,
          3.506,
          649,
          4.17,
          782,
          3.051,
          783,
          3.051,
          896,
          4.56,
          899,
          4.663,
          941,
          4.17,
          942,
          5.003,
          946,
          4.663,
          947,
          5.413,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [19, 0.163, 948, 2.446]],
      [
        'body/classes/UpdateUserDto.html',
        [
          3,
          0.282,
          4,
          0.282,
          5,
          0.224,
          11,
          0.017,
          16,
          0.375,
          18,
          0.282,
          19,
          0.233,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          99,
          2.868,
          110,
          2.868,
          207,
          3.506,
          218,
          1.649,
          251,
          1.375,
          318,
          2.302,
          404,
          1.726,
          663,
          3.801,
          664,
          3.506,
          666,
          3.506,
          781,
          4.17,
          782,
          3.051,
          783,
          3.051,
          784,
          4.17,
          948,
          4.207,
          949,
          4.663,
        ],
      ],
      ['title/classes/User.html', [19, 0.163, 86, 1.204]],
      [
        'body/classes/User.html',
        [
          3,
          0.154,
          4,
          0.154,
          5,
          0.123,
          7,
          0.356,
          10,
          1.979,
          11,
          0.018,
          12,
          1.164,
          15,
          2.445,
          16,
          0.347,
          18,
          0.154,
          19,
          0.187,
          22,
          0.007,
          23,
          0.01,
          24,
          0.007,
          82,
          1.578,
          83,
          0.997,
          86,
          1.383,
          196,
          2.166,
          209,
          3.006,
          251,
          0.752,
          253,
          1.448,
          255,
          3.604,
          257,
          2.076,
          261,
          3.954,
          262,
          3.604,
          265,
          3.969,
          266,
          3.045,
          267,
          2.719,
          269,
          3.661,
          270,
          2.077,
          274,
          3.756,
          276,
          1.153,
          277,
          3.604,
          279,
          2.077,
          280,
          2.166,
          287,
          4.416,
          289,
          2.843,
          290,
          2.549,
          292,
          2.077,
          293,
          2.077,
          295,
          1.478,
          296,
          1.782,
          297,
          3.045,
          298,
          3.045,
          299,
          3.045,
          301,
          3.736,
          302,
          1.196,
          304,
          2.279,
          305,
          3.969,
          306,
          1.398,
          307,
          3.093,
          309,
          1.844,
          311,
          3.045,
          312,
          2.077,
          355,
          2.719,
          357,
          2.719,
          358,
          1.916,
          406,
          2.893,
          412,
          1.325,
          513,
          2.549,
          518,
          2.549,
          664,
          3.898,
          665,
          5.184,
          666,
          3.898,
          847,
          4.422,
          950,
          2.549,
          951,
          5.133,
          952,
          6.017,
          953,
          2.958,
          954,
          4.336,
          955,
          2.958,
          956,
          2.958,
          957,
          4.336,
          958,
          2.958,
          959,
          2.958,
          960,
          4.336,
          961,
          2.958,
          962,
          4.336,
          963,
          2.958,
          964,
          2.958,
          965,
          2.958,
          966,
          2.958,
          967,
          2.958,
          968,
          2.958,
          969,
          2.958,
          970,
          2.958,
          971,
          2.958,
        ],
      ],
      ['title/controllers/UserController.html', [0, 1.527, 972, 2.651]],
      [
        'body/controllers/UserController.html',
        [
          0,
          1.072,
          2,
          1.072,
          3,
          0.138,
          4,
          0.138,
          5,
          0.11,
          7,
          0.319,
          8,
          1.335,
          10,
          1.559,
          11,
          0.018,
          12,
          0.89,
          14,
          1.789,
          16,
          0.394,
          17,
          0.51,
          18,
          0.138,
          19,
          0.114,
          20,
          1.789,
          22,
          0.006,
          23,
          0.009,
          24,
          0.006,
          69,
          1.717,
          73,
          2.666,
          78,
          4.054,
          81,
          1.874,
          82,
          1.3,
          83,
          0.762,
          84,
          1.186,
          85,
          3.913,
          86,
          1.927,
          102,
          2.484,
          103,
          2.806,
          104,
          1.717,
          106,
          4.126,
          107,
          1.717,
          110,
          1.405,
          112,
          2.046,
          119,
          1.405,
          126,
          0.973,
          127,
          1.717,
          128,
          3.116,
          130,
          4.144,
          213,
          1.888,
          214,
          1.253,
          218,
          1.632,
          219,
          1.253,
          221,
          2.531,
          222,
          2.277,
          257,
          2.833,
          276,
          1.756,
          302,
          1.072,
          320,
          2.549,
          321,
          2.549,
          322,
          2.712,
          335,
          1.862,
          347,
          1.405,
          348,
          1.862,
          349,
          2.042,
          351,
          2.806,
          352,
          1.405,
          353,
          2.042,
          354,
          1.862,
          355,
          1.405,
          356,
          1.862,
          357,
          1.405,
          358,
          1.717,
          359,
          1.405,
          361,
          1.405,
          367,
          1.495,
          369,
          1.717,
          370,
          2.806,
          373,
          1.072,
          374,
          1.616,
          376,
          1.862,
          379,
          1.862,
          380,
          1.405,
          382,
          3.706,
          384,
          1.862,
          385,
          1.862,
          435,
          2.676,
          568,
          2.284,
          948,
          4.18,
          972,
          2.806,
          973,
          2.284,
          974,
          4.144,
          975,
          2.651,
          976,
          2.651,
          977,
          2.651,
          978,
          2.651,
          979,
          2.651,
          980,
          2.651,
          981,
          2.651,
          982,
          2.651,
          983,
          2.651,
          984,
          2.651,
          985,
          2.651,
          986,
          2.284,
          987,
          2.042,
          988,
          2.042,
          989,
          2.284,
          990,
          2.651,
          991,
          2.651,
          992,
          4.811,
          993,
          4.811,
          994,
          4.811,
          995,
          2.651,
          996,
          4.811,
          997,
          4.811,
          998,
          4.811,
          999,
          2.651,
          1000,
          2.651,
        ],
      ],
      ['title/modules/UserModule.html', [25, 1.385, 41, 2.128]],
      [
        'body/modules/UserModule.html',
        [
          2,
          2.339,
          3,
          0.234,
          4,
          0.234,
          5,
          0.186,
          11,
          0.018,
          16,
          0.403,
          17,
          0.865,
          18,
          0.234,
          19,
          0.194,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          25,
          2.347,
          27,
          2.123,
          28,
          2.123,
          29,
          2.533,
          30,
          2.533,
          31,
          2.245,
          32,
          3.606,
          33,
          3.606,
          41,
          4.326,
          42,
          3.26,
          43,
          2.533,
          44,
          2.38,
          46,
          2.533,
          86,
          1.433,
          112,
          3.234,
          398,
          3.747,
          399,
          2.123,
          972,
          4.492,
          988,
          3.461,
          989,
          3.871,
          1001,
          3.871,
          1002,
          3.871,
          1003,
          4.493,
          1004,
          4.493,
          1005,
          4.493,
          1006,
          4.493,
        ],
      ],
      ['title/classes/UserPaginationParam.html', [19, 0.163, 435, 1.886]],
      [
        'body/classes/UserPaginationParam.html',
        [
          3,
          0.178,
          4,
          0.178,
          5,
          0.141,
          7,
          0.411,
          10,
          1.399,
          11,
          0.018,
          12,
          1.127,
          16,
          0.277,
          18,
          0.315,
          19,
          0.292,
          22,
          0.008,
          23,
          0.011,
          24,
          0.008,
          83,
          1.015,
          84,
          1.337,
          246,
          2.057,
          251,
          0.868,
          253,
          1.605,
          276,
          1.918,
          306,
          1.613,
          309,
          2.706,
          331,
          1.706,
          373,
          2.249,
          374,
          2.249,
          403,
          2.057,
          404,
          2.03,
          405,
          4.137,
          406,
          4.19,
          407,
          3.603,
          408,
          3.603,
          409,
          3.603,
          410,
          3.603,
          411,
          3.603,
          412,
          2.85,
          413,
          3.113,
          414,
          4.762,
          415,
          2.397,
          416,
          2.956,
          417,
          2.397,
          418,
          2.212,
          419,
          2.397,
          420,
          2.896,
          421,
          2.397,
          422,
          2.397,
          423,
          2.397,
          424,
          2.212,
          425,
          2.397,
          426,
          3.135,
          427,
          1.925,
          428,
          2.779,
          429,
          1.452,
          430,
          2.212,
          431,
          2.212,
          432,
          2.212,
          433,
          1.706,
          434,
          1.706,
          435,
          2.401,
        ],
      ],
      ['title/injectables/UserService.html', [112, 1.605, 178, 0.836]],
      [
        'body/injectables/UserService.html',
        [
          3,
          0.095,
          4,
          0.095,
          5,
          0.076,
          7,
          0.22,
          8,
          0.997,
          11,
          0.018,
          12,
          1.028,
          14,
          1.961,
          15,
          1.893,
          16,
          0.357,
          17,
          0.352,
          18,
          0.095,
          19,
          0.079,
          20,
          1.961,
          22,
          0.004,
          23,
          0.007,
          24,
          0.004,
          73,
          2.771,
          76,
          3.759,
          81,
          2.113,
          82,
          1.466,
          83,
          0.88,
          84,
          1.338,
          86,
          2.047,
          98,
          2.571,
          99,
          2.547,
          102,
          2.623,
          110,
          2.003,
          112,
          1.269,
          124,
          1.41,
          125,
          0.913,
          126,
          1.601,
          178,
          0.661,
          179,
          0.739,
          193,
          2.571,
          195,
          1.575,
          200,
          2.629,
          202,
          2.298,
          204,
          3.115,
          209,
          2.577,
          213,
          2.437,
          214,
          0.864,
          216,
          2.095,
          218,
          1.572,
          219,
          2.062,
          221,
          2.98,
          222,
          2.84,
          224,
          1.575,
          228,
          3.676,
          237,
          1.575,
          238,
          1.575,
          253,
          0.997,
          257,
          2.086,
          258,
          0.864,
          276,
          1.776,
          280,
          0.913,
          302,
          0.739,
          309,
          0.777,
          320,
          2.003,
          321,
          1.581,
          322,
          2.46,
          334,
          1.682,
          337,
          1.682,
          343,
          1.101,
          347,
          0.968,
          352,
          0.968,
          353,
          1.408,
          359,
          0.968,
          361,
          0.968,
          365,
          1.101,
          367,
          1.03,
          373,
          1.529,
          374,
          1.764,
          380,
          0.968,
          399,
          0.864,
          412,
          0.819,
          416,
          0.819,
          420,
          1.798,
          435,
          0.913,
          438,
          3.064,
          448,
          2.095,
          454,
          1.284,
          458,
          3.704,
          460,
          2.655,
          462,
          3.064,
          464,
          2.655,
          466,
          2.655,
          468,
          1.284,
          469,
          1.284,
          470,
          1.284,
          471,
          2.449,
          472,
          3.064,
          474,
          1.184,
          476,
          1.284,
          477,
          1.284,
          480,
          2.655,
          482,
          1.284,
          601,
          2.571,
          602,
          2.571,
          681,
          1.575,
          715,
          2.571,
          718,
          1.575,
          764,
          1.408,
          948,
          3.525,
          974,
          2.571,
          986,
          1.575,
          987,
          1.408,
          988,
          1.408,
          1007,
          1.575,
          1008,
          3.781,
          1009,
          2.984,
          1010,
          2.984,
          1011,
          2.984,
          1012,
          1.828,
          1013,
          1.828,
          1014,
          2.984,
          1015,
          1.828,
          1016,
          2.984,
          1017,
          1.828,
          1018,
          2.984,
          1019,
          1.828,
          1020,
          2.984,
          1021,
          1.828,
          1022,
          2.984,
          1023,
          1.828,
          1024,
          1.828,
          1025,
          2.984,
          1026,
          1.828,
          1027,
          1.828,
          1028,
          1.828,
          1029,
          1.828,
          1030,
          1.828,
          1031,
          1.828,
          1032,
          1.828,
          1033,
          1.828,
          1034,
          2.984,
          1035,
          1.828,
          1036,
          2.984,
          1037,
          2.984,
          1038,
          1.828,
          1039,
          1.828,
          1040,
          1.828,
          1041,
          1.828,
          1042,
          1.828,
          1043,
          1.828,
          1044,
          4.808,
          1045,
          2.984,
          1046,
          2.984,
          1047,
          1.828,
          1048,
          1.828,
          1049,
          1.828,
          1050,
          1.828,
          1051,
          1.828,
          1052,
          1.828,
          1053,
          1.828,
        ],
      ],
      ['title/coverage.html', [1054, 3.97]],
      [
        'body/coverage.html',
        [
          0,
          2.494,
          1,
          1.969,
          5,
          0.116,
          6,
          2.416,
          11,
          0.018,
          19,
          0.322,
          22,
          0.006,
          23,
          0.009,
          24,
          0.006,
          31,
          1.401,
          57,
          1.969,
          60,
          1.969,
          67,
          1.969,
          68,
          2.416,
          78,
          1.69,
          83,
          0.399,
          86,
          0.894,
          99,
          1.486,
          112,
          1.192,
          114,
          1.325,
          117,
          1.969,
          119,
          1.486,
          121,
          1.969,
          137,
          2.416,
          159,
          1.817,
          160,
          1.817,
          161,
          1.817,
          178,
          1.553,
          180,
          2.416,
          200,
          1.69,
          222,
          1.192,
          250,
          1.192,
          252,
          2.416,
          263,
          1.486,
          289,
          1.325,
          295,
          1.401,
          315,
          1.969,
          316,
          2.416,
          327,
          1.486,
          331,
          1.401,
          344,
          1.817,
          355,
          1.486,
          363,
          1.486,
          396,
          1.401,
          403,
          3.546,
          405,
          1.581,
          433,
          1.401,
          434,
          1.401,
          435,
          1.401,
          436,
          2.416,
          474,
          5.045,
          502,
          2.416,
          523,
          1.969,
          524,
          2.416,
          537,
          1.69,
          546,
          1.817,
          552,
          1.69,
          579,
          2.416,
          624,
          2.416,
          625,
          3.211,
          642,
          2.416,
          643,
          3.211,
          647,
          1.817,
          648,
          2.416,
          649,
          3.211,
          662,
          2.416,
          663,
          3.493,
          695,
          2.416,
          696,
          2.416,
          722,
          2.16,
          723,
          2.416,
          749,
          2.416,
          752,
          2.416,
          780,
          2.416,
          785,
          1.969,
          787,
          2.16,
          790,
          2.16,
          791,
          2.416,
          794,
          2.416,
          796,
          2.416,
          808,
          2.416,
          826,
          2.416,
          828,
          2.416,
          841,
          2.416,
          862,
          1.969,
          863,
          2.416,
          883,
          2.416,
          896,
          1.969,
          912,
          2.16,
          914,
          2.416,
          922,
          2.16,
          937,
          2.16,
          938,
          2.416,
          939,
          2.416,
          940,
          2.416,
          944,
          2.416,
          946,
          2.416,
          948,
          1.817,
          949,
          2.416,
          950,
          2.416,
          972,
          1.969,
          973,
          2.416,
          1007,
          2.416,
          1054,
          2.16,
          1055,
          2.16,
          1056,
          2.804,
          1057,
          2.804,
          1058,
          5.508,
          1059,
          5.508,
          1060,
          4.975,
          1061,
          7.009,
          1062,
          5.886,
          1063,
          6.562,
          1064,
          4.975,
          1065,
          4.168,
          1066,
          2.804,
          1067,
          2.416,
          1068,
          3.591,
          1069,
          4.168,
          1070,
          2.804,
          1071,
          4.168,
          1072,
          2.804,
          1073,
          2.804,
        ],
      ],
      ['title/dependencies.html', [28, 2.146, 1074, 3.152]],
      [
        'body/dependencies.html',
        [
          11,
          0.018,
          17,
          0.914,
          19,
          0.258,
          22,
          0.011,
          23,
          0.014,
          24,
          0.011,
          28,
          2.243,
          48,
          2.861,
          165,
          3.657,
          167,
          2.515,
          216,
          3.334,
          302,
          1.92,
          306,
          2.243,
          399,
          2.243,
          429,
          2.019,
          735,
          4.09,
          763,
          4.84,
          764,
          3.657,
          765,
          4.09,
          782,
          2.676,
          783,
          2.676,
          801,
          4.09,
          832,
          4.09,
          920,
          4.09,
          1075,
          6.564,
          1076,
          4.748,
          1077,
          4.748,
          1078,
          5.991,
          1079,
          5.991,
          1080,
          4.748,
          1081,
          4.09,
          1082,
          4.748,
          1083,
          4.748,
          1084,
          4.748,
          1085,
          4.748,
          1086,
          4.748,
          1087,
          4.748,
          1088,
          4.748,
          1089,
          4.748,
          1090,
          4.748,
          1091,
          4.748,
          1092,
          4.748,
          1093,
          4.748,
          1094,
          4.748,
          1095,
          4.748,
          1096,
          4.748,
        ],
      ],
      ['title/miscellaneous/enumerations.html', [1097, 1.67, 1098, 3.912]],
      [
        'body/miscellaneous/enumerations.html',
        [
          7,
          0.691,
          11,
          0.017,
          22,
          0.013,
          23,
          0.015,
          24,
          0.013,
          86,
          2.145,
          357,
          3.563,
          412,
          3.012,
          1097,
          3.043,
          1098,
          4.948,
          1099,
          5.743,
          1100,
          5.743,
          1101,
          6.726,
        ],
      ],
      ['title/miscellaneous/functions.html', [1097, 1.67, 1102, 3.912]],
      [
        'body/miscellaneous/functions.html',
        [
          7,
          0.71,
          11,
          0.016,
          22,
          0.013,
          23,
          0.016,
          24,
          0.013,
          31,
          3.604,
          1067,
          5.083,
          1097,
          3.126,
          1102,
          5.083,
          1103,
          5.901,
        ],
      ],
      ['title/index.html', [7, 0.379, 1104, 2.716, 1105, 2.716]],
      [
        'body/index.html',
        [
          5,
          0.179,
          11,
          0.018,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          28,
          2.044,
          226,
          3.726,
          256,
          2.802,
          318,
          1.839,
          697,
          3.037,
          717,
          3.726,
          748,
          3.726,
          1054,
          3.332,
          1055,
          4.838,
          1106,
          4.325,
          1107,
          4.325,
          1108,
          4.325,
          1109,
          4.325,
          1110,
          4.325,
          1111,
          4.325,
          1112,
          4.325,
          1113,
          4.325,
          1114,
          5.643,
          1115,
          4.325,
          1116,
          4.325,
          1117,
          5.643,
          1118,
          4.325,
          1119,
          4.325,
          1120,
          4.325,
          1121,
          7.213,
          1122,
          4.325,
          1123,
          4.325,
          1124,
          4.325,
          1125,
          4.325,
          1126,
          4.325,
          1127,
          4.325,
          1128,
          4.325,
          1129,
          4.325,
          1130,
          5.643,
          1131,
          4.325,
          1132,
          4.325,
          1133,
          4.325,
          1134,
          4.325,
          1135,
          4.325,
          1136,
          6.281,
          1137,
          4.325,
          1138,
          4.325,
          1139,
          4.325,
          1140,
          4.325,
          1141,
          4.325,
          1142,
          4.325,
          1143,
          4.325,
          1144,
          4.325,
          1145,
          4.325,
          1146,
          5.643,
          1147,
          5.643,
          1148,
          4.325,
          1149,
          4.325,
          1150,
          5.643,
          1151,
          4.325,
          1152,
          4.325,
          1153,
          4.325,
          1154,
          6.281,
          1155,
          4.325,
          1156,
          4.325,
          1157,
          5.643,
          1158,
          4.325,
          1159,
          4.325,
          1160,
          4.325,
        ],
      ],
      ['title/license.html', [1104, 2.716, 1105, 2.716, 1161, 2.716]],
      [
        'body/license.html',
        [
          11,
          0.013,
          22,
          0.01,
          23,
          0.013,
          24,
          0.01,
          44,
          2.345,
          136,
          4.936,
          227,
          3.814,
          1055,
          3.41,
          1081,
          3.814,
          1161,
          3.814,
          1162,
          4.427,
          1163,
          6.352,
          1164,
          4.427,
          1165,
          4.427,
          1166,
          4.427,
          1167,
          4.427,
          1168,
          5.729,
          1169,
          4.427,
          1170,
          4.427,
          1171,
          4.427,
          1172,
          4.427,
          1173,
          4.427,
          1174,
          4.427,
          1175,
          5.729,
          1176,
          7.428,
          1177,
          4.427,
          1178,
          4.427,
          1179,
          4.427,
          1180,
          6.352,
          1181,
          4.427,
          1182,
          5.729,
          1183,
          4.427,
          1184,
          4.427,
          1185,
          4.427,
          1186,
          4.427,
          1187,
          4.427,
          1188,
          4.427,
          1189,
          4.427,
          1190,
          4.427,
          1191,
          4.427,
          1192,
          5.729,
          1193,
          4.427,
          1194,
          4.427,
          1195,
          4.427,
          1196,
          4.427,
          1197,
          4.427,
          1198,
          4.427,
          1199,
          4.427,
          1200,
          5.729,
          1201,
          5.729,
          1202,
          4.427,
          1203,
          4.427,
          1204,
          4.427,
          1205,
          4.427,
          1206,
          4.427,
          1207,
          4.427,
          1208,
          4.427,
          1209,
          4.427,
          1210,
          4.427,
          1211,
          4.427,
          1212,
          4.427,
          1213,
          4.427,
          1214,
          4.427,
          1215,
          4.427,
          1216,
          4.427,
          1217,
          4.427,
          1218,
          4.427,
          1219,
          4.427,
          1220,
          4.427,
          1221,
          4.427,
          1222,
          4.427,
          1223,
          4.427,
          1224,
          4.427,
          1225,
          4.427,
          1226,
          4.427,
          1227,
          4.427,
          1228,
          4.427,
          1229,
          4.427,
        ],
      ],
      ['title/modules.html', [27, 2.435]],
      [
        'body/modules.html',
        [
          11,
          0.015,
          22,
          0.012,
          23,
          0.015,
          24,
          0.012,
          26,
          3.747,
          27,
          2.521,
          36,
          3.457,
          37,
          3.215,
          38,
          3.457,
          39,
          3.457,
          40,
          3.215,
          41,
          3.008,
          1230,
          7.467,
          1231,
          7.467,
          1232,
          7.467,
          1233,
          7.554,
          1234,
          5.336,
          1235,
          5.336,
        ],
      ],
      ['title/overview.html', [1236, 4.44]],
      [
        'body/overview.html',
        [
          2,
          1.29,
          11,
          0.018,
          22,
          0.007,
          23,
          0.01,
          24,
          0.007,
          25,
          1.17,
          26,
          5.133,
          27,
          1.507,
          28,
          1.507,
          29,
          1.798,
          30,
          1.798,
          31,
          1.594,
          32,
          1.798,
          33,
          1.798,
          34,
          2.748,
          35,
          2.748,
          36,
          4.897,
          37,
          4.539,
          38,
          4.862,
          39,
          3.471,
          40,
          4.332,
          41,
          4.089,
          42,
          2.582,
          43,
          1.798,
          44,
          1.69,
          112,
          2.989,
          114,
          3.142,
          155,
          2.748,
          156,
          2.748,
          157,
          2.748,
          159,
          3.471,
          160,
          3.471,
          161,
          3.471,
          179,
          1.29,
          251,
          0.811,
          363,
          3.604,
          392,
          2.748,
          393,
          2.748,
          395,
          2.748,
          396,
          3.461,
          416,
          2.051,
          552,
          4.006,
          571,
          2.748,
          572,
          2.748,
          573,
          2.748,
          785,
          2.24,
          877,
          2.748,
          879,
          2.748,
          912,
          2.457,
          1001,
          2.748,
          1002,
          2.748,
          1236,
          2.748,
          1237,
          3.19,
          1238,
          3.19,
          1239,
          3.19,
          1240,
          3.19,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [1097, 1.67, 1241, 4.541]],
      [
        'body/miscellaneous/typealiases.html',
        [
          7,
          0.624,
          11,
          0.014,
          22,
          0.012,
          23,
          0.014,
          24,
          0.012,
          83,
          1.055,
          90,
          4.101,
          204,
          4.101,
          360,
          4.877,
          550,
          4.877,
          787,
          3.997,
          788,
          5.454,
          789,
          5.454,
          870,
          4.877,
          987,
          4.877,
          1097,
          2.749,
          1242,
          5.189,
          1243,
          7.113,
          1244,
          7.293,
          1245,
          6.331,
          1246,
          7.293,
          1247,
          5.189,
        ],
      ],
      ['title/miscellaneous/variables.html', [1097, 1.67, 1248, 3.912]],
      [
        'body/miscellaneous/variables.html',
        [
          7,
          0.665,
          11,
          0.017,
          15,
          2.03,
          22,
          0.013,
          23,
          0.015,
          24,
          0.013,
          83,
          0.787,
          309,
          2.798,
          355,
          3.932,
          357,
          2.931,
          412,
          2.946,
          922,
          5.068,
          1068,
          4.766,
          1097,
          2.931,
          1248,
          4.766,
          1249,
          6.579,
          1250,
          5.532,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 11,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 474,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        '0.1.13',
        { _index: 1092, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '0.13.1',
        { _index: 1084, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '0.2.32',
        { _index: 1096, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.4.0', { _index: 1083, title: {}, body: { 'dependencies.html': {} } }],
      ['0.4.1', { _index: 1078, title: {}, body: { 'dependencies.html': {} } }],
      ['0.6.3', { _index: 1076, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 1061, title: {}, body: { 'coverage.html': {} } }],
      ['0/11', { _index: 1064, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 1071, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 1058, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 1062, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 1065, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 1070, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 1059, title: {}, body: { 'coverage.html': {} } }],
      ['0/7', { _index: 1066, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 1063, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 1060, title: {}, body: { 'coverage.html': {} } }],
      [
        '1',
        {
          _index: 416,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'overview.html': {},
          },
        },
      ],
      ['1.0.0', { _index: 1089, title: {}, body: { 'dependencies.html': {} } }],
      [
        '10',
        {
          _index: 420,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['12', { _index: 1239, title: {}, body: { 'overview.html': {} } }],
      ['2.0.0', { _index: 1087, title: {}, body: { 'dependencies.html': {} } }],
      ['2.2.5', { _index: 1086, title: {}, body: { 'dependencies.html': {} } }],
      ['2021', { _index: 1165, title: {}, body: { 'license.html': {} } }],
      [
        '2047',
        { _index: 815, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      ['22', { _index: 1240, title: {}, body: { 'overview.html': {} } }],
      [
        '255',
        { _index: 823, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      ['3.0.2', { _index: 1094, title: {}, body: { 'dependencies.html': {} } }],
      ['4.0.0', { _index: 1088, title: {}, body: { 'dependencies.html': {} } }],
      [
        '5',
        {
          _index: 413,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      ['5.0.1', { _index: 1082, title: {}, body: { 'dependencies.html': {} } }],
      ['6', { _index: 1238, title: {}, body: { 'overview.html': {} } }],
      [
        '64',
        { _index: 819, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      ['7', { _index: 1237, title: {}, body: { 'overview.html': {} } }],
      ['7.0.0', { _index: 1095, title: {}, body: { 'dependencies.html': {} } }],
      ['7.1.5', { _index: 1079, title: {}, body: { 'dependencies.html': {} } }],
      ['7.2.0', { _index: 1077, title: {}, body: { 'dependencies.html': {} } }],
      [
        '7.6.15',
        { _index: 1075, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '72',
        {
          _index: 682,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LengthLimits.html': {},
          },
        },
      ],
      [
        '8',
        { _index: 821, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        '_record',
        {
          _index: 491,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        '_request',
        {
          _index: 94,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      ['above', { _index: 1199, title: {}, body: { 'license.html': {} } }],
      [
        'access_token',
        {
          _index: 241,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'interfaces/IRequest.html': {},
          },
        },
      ],
      [
        'accesstoken',
        {
          _index: 90,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['action', { _index: 1223, title: {}, body: { 'license.html': {} } }],
      [
        'add',
        {
          _index: 459,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'addnewbooktocategory',
        {
          _index: 525,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'addnewbooktocategory(categoryid',
        {
          _index: 584,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'addnewbooktocategory(id',
        {
          _index: 529,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'addoldbooktocategory',
        {
          _index: 526,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'addoldbooktocategory(categoryid',
        {
          _index: 587,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'addoldbooktocategory(id',
        {
          _index: 533,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'admin',
        {
          _index: 1101,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'age=${this.configservice.get',
        {
          _index: 247,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'aliases',
        {
          _index: 1242,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'already',
        {
          _index: 601,
          title: {},
          body: {
            'injectables/CategoryService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['and/or', { _index: 1190, title: {}, body: { 'license.html': {} } }],
      [
        "andwhere('books.id",
        {
          _index: 610,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      ['app', { _index: 1134, title: {}, body: { 'index.html': {} } }],
      [
        'app.controller',
        { _index: 63, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'app_filter',
        { _index: 49, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'app_guard',
        { _index: 50, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'appcontroller',
        {
          _index: 1,
          title: { 'controllers/AppController.html': {} },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['applications', { _index: 1113, title: {}, body: { 'index.html': {} } }],
      [
        'appmodule',
        {
          _index: 26,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'argumentshost',
        {
          _index: 702,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      ['arising', { _index: 1227, title: {}, body: { 'license.html': {} } }],
      [
        'array.isarray(value',
        {
          _index: 741,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'asc',
        {
          _index: 470,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['associated', { _index: 1177, title: {}, body: { 'license.html': {} } }],
      [
        'async',
        {
          _index: 73,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'auth',
        {
          _index: 70,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'interfaces/IRequest.html': {},
          },
        },
      ],
      [
        'auth.controller',
        { _index: 168, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'auth.service',
        {
          _index: 115,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'auth.type',
        {
          _index: 116,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'auth/auth.module',
        { _index: 52, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'auth/auth.service',
        { _index: 921, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'auth/auth.type',
        {
          _index: 353,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'auth/guard/jwt.guard',
        {
          _index: 354,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'authcontroller',
        {
          _index: 67,
          title: { 'controllers/AuthController.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'authentication=${token',
        {
          _index: 243,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'authguard',
        {
          _index: 750,
          title: {},
          body: {
            'injectables/GoogleAuthGuard.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/LocalAuthGuard.html': {},
          },
        },
      ],
      [
        "authguard('google",
        {
          _index: 751,
          title: {},
          body: { 'injectables/GoogleAuthGuard.html': {} },
        },
      ],
      [
        "authguard('jwt",
        {
          _index: 795,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {} },
        },
      ],
      [
        "authguard('local",
        {
          _index: 827,
          title: {},
          body: { 'injectables/LocalAuthGuard.html': {} },
        },
      ],
      [
        'authmodule',
        {
          _index: 36,
          title: { 'modules/AuthModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['authors', { _index: 1216, title: {}, body: { 'license.html': {} } }],
      [
        'authresponse',
        {
          _index: 788,
          title: {},
          body: {
            'interfaces/IRequest.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'authservice',
        {
          _index: 114,
          title: { 'injectables/AuthService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'guards/RolesGuard.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['available', { _index: 1235, title: {}, body: { 'modules.html': {} } }],
      [
        'await',
        {
          _index: 219,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['backend', { _index: 1117, title: {}, body: { 'index.html': {} } }],
      [
        'badrequestexception',
        {
          _index: 760,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      ['bash', { _index: 1155, title: {}, body: { 'index.html': {} } }],
      [
        'bcrypt',
        {
          _index: 216,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/UserService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'bcrypt.comparesync(plainpassword',
        {
          _index: 249,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'bcrypt.hash(plainpassword',
        {
          _index: 1039,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'big_max_length',
        { _index: 809, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'body',
        {
          _index: 103,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "body('bookid",
        {
          _index: 566,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'book',
        {
          _index: 250,
          title: { 'classes/Book.html': {} },
          body: {
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'classes/UpdateRecordDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "book's",
        {
          _index: 481,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'book.categories',
        { _index: 519, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'book.controller',
        { _index: 401, title: {}, body: { 'modules/BookModule.html': {} } },
      ],
      [
        'book.dto',
        {
          _index: 366,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/UpdateBookDto.html': {},
          },
        },
      ],
      [
        'book.dto.ts',
        {
          _index: 625,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/UpdateBookDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'book.dto.ts:17',
        { _index: 632, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'book.dto.ts:22',
        { _index: 627, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'book.dto.ts:27',
        { _index: 634, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'book.dto.ts:31',
        { _index: 630, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'book.dto.ts:35',
        { _index: 629, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'book.entity',
        {
          _index: 362,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
          },
        },
      ],
      [
        'book.isbusy',
        {
          _index: 487,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'book.records',
        { _index: 861, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'book.service',
        {
          _index: 364,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
          },
        },
      ],
      [
        'book/book.entity',
        {
          _index: 517,
          title: {},
          body: {
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        'book/book.module',
        {
          _index: 53,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/CategoryModule.html': {},
          },
        },
      ],
      [
        'book/book.service',
        {
          _index: 576,
          title: {},
          body: {
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'book/dto/create',
        {
          _index: 549,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'book_id',
        {
          _index: 522,
          title: {},
          body: { 'classes/Category.html': {}, 'classes/Record.html': {} },
        },
      ],
      [
        'bookcontroller',
        {
          _index: 315,
          title: { 'controllers/BookController.html': {} },
          body: {
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'bookdto',
        {
          _index: 530,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'bookid',
        {
          _index: 442,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'bookmodule',
        {
          _index: 37,
          title: { 'modules/BookModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'bookpagination',
        {
          _index: 360,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'bookpaginationparam',
        {
          _index: 331,
          title: { 'classes/BookPaginationParam.html': {} },
          body: {
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'bookpaginationparam.default_limit',
        {
          _index: 463,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'bookpaginationparam.default_page',
        {
          _index: 461,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'bookrepo',
        {
          _index: 440,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'books',
        {
          _index: 465,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'books.length',
        {
          _index: 473,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
          },
        },
      ],
      [
        'bookservice',
        {
          _index: 363,
          title: { 'injectables/BookService.html': {} },
          body: {
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'boolean',
        {
          _index: 196,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'bootstrap',
        {
          _index: 31,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'borrow',
        {
          _index: 317,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
          },
        },
      ],
      [
        'borrow(request',
        {
          _index: 323,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'borrow(userid',
        {
          _index: 441,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'borrowed_at',
        { _index: 848, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'borrowedat',
        {
          _index: 495,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'borrowedbook',
        {
          _index: 490,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'borrower',
        {
          _index: 494,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'classes/UpdateRecordDto.html': {},
          },
        },
      ],
      [
        'borrower_id',
        { _index: 850, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'borrowerid',
        {
          _index: 842,
          title: {},
          body: {
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      ['browse', { _index: 1233, title: {}, body: { 'modules.html': {} } }],
      ['browser', { _index: 1230, title: {}, body: { 'modules.html': {} } }],
      ['building', { _index: 1109, title: {}, body: { 'index.html': {} } }],
      ['c', { _index: 1164, title: {}, body: { 'license.html': {} } }],
      [
        'callbackurl',
        {
          _index: 772,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'callhandler',
        {
          _index: 728,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'canactivate',
        { _index: 915, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'canactivate(context',
        { _index: 918, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'catch',
        {
          _index: 471,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'catch(exception',
        {
          _index: 699,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'categories',
        {
          _index: 254,
          title: {},
          body: {
            'classes/Book.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'categories.length',
        {
          _index: 617,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'category',
        {
          _index: 263,
          title: { 'classes/Category.html': {} },
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "category's",
        {
          _index: 623,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'category.books',
        { _index: 313, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'category.books.push(book',
        {
          _index: 612,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'category.controller',
        { _index: 577, title: {}, body: { 'modules/CategoryModule.html': {} } },
      ],
      [
        'category.dto',
        {
          _index: 554,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/UpdateCategoryDto.html': {},
          },
        },
      ],
      [
        'category.dto.ts',
        {
          _index: 643,
          title: {},
          body: {
            'classes/CreateCategoryDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'category.dto.ts:15',
        {
          _index: 646,
          title: {},
          body: { 'classes/CreateCategoryDto.html': {} },
        },
      ],
      [
        'category.dto.ts:20',
        {
          _index: 644,
          title: {},
          body: { 'classes/CreateCategoryDto.html': {} },
        },
      ],
      [
        'category.dto.ts:24',
        {
          _index: 645,
          title: {},
          body: { 'classes/CreateCategoryDto.html': {} },
        },
      ],
      [
        'category.entity',
        {
          _index: 551,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'category.service',
        {
          _index: 553,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
          },
        },
      ],
      [
        'category/category.entity',
        { _index: 303, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'category/category.module',
        { _index: 54, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'category_books',
        { _index: 505, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'category_id',
        { _index: 520, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'categorycontroller',
        {
          _index: 523,
          title: { 'controllers/CategoryController.html': {} },
          body: {
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'categoryid',
        {
          _index: 586,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'categorymodule',
        {
          _index: 38,
          title: { 'modules/CategoryModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/CategoryModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'categorypagination',
        {
          _index: 550,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'categorypaginationparam',
        {
          _index: 433,
          title: { 'classes/CategoryPaginationParam.html': {} },
          body: {
            'classes/BookPaginationParam.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'categorypaginationparam.default_limit',
        {
          _index: 616,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'categorypaginationparam.default_page',
        {
          _index: 615,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'categoryrepo',
        {
          _index: 583,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'categoryservice',
        {
          _index: 552,
          title: { 'injectables/CategoryService.html': {} },
          body: {
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['charge', { _index: 1172, title: {}, body: { 'license.html': {} } }],
      ['claim', { _index: 1219, title: {}, body: { 'license.html': {} } }],
      [
        'class',
        {
          _index: 19,
          title: {
            'classes/Book.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/IdParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
          },
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'classes',
        {
          _index: 251,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/IdParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'clientid',
        {
          _index: 768,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'clientsecret',
        {
          _index: 770,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'cluster_appmodule',
        {
          _index: 34,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_imports',
        {
          _index: 35,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule',
        {
          _index: 155,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule_exports',
        {
          _index: 156,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule_imports',
        { _index: 158, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'cluster_authmodule_providers',
        {
          _index: 157,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_bookmodule',
        {
          _index: 392,
          title: {},
          body: { 'modules/BookModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_bookmodule_exports',
        {
          _index: 395,
          title: {},
          body: { 'modules/BookModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_bookmodule_imports',
        { _index: 394, title: {}, body: { 'modules/BookModule.html': {} } },
      ],
      [
        'cluster_bookmodule_providers',
        {
          _index: 393,
          title: {},
          body: { 'modules/BookModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_categorymodule',
        {
          _index: 571,
          title: {},
          body: { 'modules/CategoryModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_categorymodule_exports',
        {
          _index: 572,
          title: {},
          body: { 'modules/CategoryModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_categorymodule_imports',
        { _index: 574, title: {}, body: { 'modules/CategoryModule.html': {} } },
      ],
      [
        'cluster_categorymodule_providers',
        {
          _index: 573,
          title: {},
          body: { 'modules/CategoryModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_recordmodule',
        {
          _index: 877,
          title: {},
          body: { 'modules/RecordModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_recordmodule_exports',
        {
          _index: 879,
          title: {},
          body: { 'modules/RecordModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_recordmodule_providers',
        { _index: 878, title: {}, body: { 'modules/RecordModule.html': {} } },
      ],
      [
        'cluster_usermodule',
        {
          _index: 1001,
          title: {},
          body: { 'modules/UserModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usermodule_exports',
        {
          _index: 1002,
          title: {},
          body: { 'modules/UserModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_usermodule_providers',
        { _index: 1003, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'column',
        {
          _index: 287,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'column({default',
        {
          _index: 279,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'column({length',
        { _index: 285, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'column({name',
        {
          _index: 847,
          title: {},
          body: { 'classes/Record.html': {}, 'classes/User.html': {} },
        },
      ],
      [
        'column({nullable',
        {
          _index: 273,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        'column({unique',
        {
          _index: 513,
          title: {},
          body: { 'classes/Category.html': {}, 'classes/User.html': {} },
        },
      ],
      [
        'common/constants/length',
        {
          _index: 296,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/User.html': {},
          },
        },
      ],
      ['compodoc', { _index: 1144, title: {}, body: { 'index.html': {} } }],
      [
        'compodoc/compodoc',
        { _index: 1147, title: {}, body: { 'index.html': {} } },
      ],
      ['conditions', { _index: 1198, title: {}, body: { 'license.html': {} } }],
      [
        'config',
        { _index: 689, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'config.entities',
        { _index: 691, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configmodule',
        {
          _index: 47,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/AuthModule.html': {} },
        },
      ],
      [
        'configmodule.forroot',
        { _index: 64, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'configservice',
        {
          _index: 163,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        "configservice.get('google_callback_url",
        {
          _index: 773,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        "configservice.get('google_client_id",
        {
          _index: 769,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        "configservice.get('google_client_secret",
        {
          _index: 771,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        "configservice.get('jwt_secret",
        {
          _index: 806,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      ['connection', { _index: 1228, title: {}, body: { 'license.html': {} } }],
      [
        'const',
        {
          _index: 218,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'constructor',
        {
          _index: 124,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'constructor(authservice',
        {
          _index: 754,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'constructor(bookrepo',
        {
          _index: 437,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'constructor(categoryrepo',
        {
          _index: 581,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'constructor(configservice',
        {
          _index: 187,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'constructor(private',
        {
          _index: 369,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'constructor(recordrepo',
        {
          _index: 885,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'constructor(userrepo',
        {
          _index: 1012,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'contain',
        {
          _index: 562,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'context',
        {
          _index: 730,
          title: {},
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'context.getclass',
        { _index: 928, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'context.gethandler',
        { _index: 927, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'context.switchtohttp().getrequest',
        { _index: 929, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      ['contract', { _index: 1224, title: {}, body: { 'license.html': {} } }],
      [
        'controller',
        {
          _index: 0,
          title: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "controller('auth",
        {
          _index: 123,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "controller('book",
        {
          _index: 368,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        "controller('category",
        {
          _index: 555,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "controller('record",
        {
          _index: 873,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        "controller('user",
        {
          _index: 990,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'controllers',
        {
          _index: 2,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['copies', { _index: 1192, title: {}, body: { 'license.html': {} } }],
      ['copy', { _index: 1175, title: {}, body: { 'license.html': {} } }],
      ['copyright', { _index: 1163, title: {}, body: { 'license.html': {} } }],
      [
        'count',
        {
          _index: 477,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'coverage',
        {
          _index: 1054,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'create',
        {
          _index: 318,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/GoogleUserDto.html': {},
            'injectables/RecordService.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'create(@body',
        {
          _index: 371,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'create(createbookdto',
        {
          _index: 326,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
          },
        },
      ],
      [
        'create(createcategorydto',
        {
          _index: 536,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'create(createrecorddto',
        {
          _index: 888,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'createbookdto',
        {
          _index: 327,
          title: { 'classes/CreateBookDto.html': {} },
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/UpdateBookDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createcategorydto',
        {
          _index: 537,
          title: { 'classes/CreateCategoryDto.html': {} },
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'created_at',
        {
          _index: 311,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        "created_at'})@exclude",
        {
          _index: 271,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        'createdat',
        {
          _index: 255,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'createdatecolumn',
        {
          _index: 298,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'createdatecolumn({name',
        {
          _index: 270,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        "createquerybuilder('category",
        {
          _index: 607,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'createrecorddto',
        {
          _index: 647,
          title: { 'classes/CreateRecordDto.html': {} },
          body: {
            'classes/CreateRecordDto.html': {},
            'injectables/RecordService.html': {},
            'classes/UpdateRecordDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createuserdto',
        {
          _index: 99,
          title: { 'classes/CreateUserDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'classes/CreateUserDto.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createuserdto[key',
        {
          _index: 1035,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'credentials',
        {
          _index: 226,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'index.html': {} },
        },
      ],
      [
        'ctx',
        {
          _index: 706,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'ctx.getresponse',
        {
          _index: 709,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      ['current', { _index: 1125, title: {}, body: { 'index.html': {} } }],
      [
        'currentpage',
        {
          _index: 460,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'currentuser',
        {
          _index: 992,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'currentuser.id',
        {
          _index: 994,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'currentuser.isadmin',
        {
          _index: 993,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      ['công', { _index: 1166, title: {}, body: { 'license.html': {} } }],
      ['damages', { _index: 1220, title: {}, body: { 'license.html': {} } }],
      ['database', { _index: 1142, title: {}, body: { 'index.html': {} } }],
      [
        'database/database.module',
        { _index: 55, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'databasemodule',
        {
          _index: 39,
          title: { 'modules/DatabaseModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'date',
        {
          _index: 269,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'date().toisostring',
        {
          _index: 721,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'date(date.now',
        {
          _index: 496,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      ['deal', { _index: 1179, title: {}, body: { 'license.html': {} } }],
      ['dealings', { _index: 1229, title: {}, body: { 'license.html': {} } }],
      [
        'declarations',
        {
          _index: 30,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'decorators',
        {
          _index: 10,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/IdParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'default',
        {
          _index: 309,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'default_limit',
        {
          _index: 407,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'default_page',
        {
          _index: 408,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'defined',
        {
          _index: 12,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'delete',
        {
          _index: 347,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "delete(':id",
        {
          _index: 384,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "delete(':id')@httpcode(204",
        {
          _index: 868,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'deleteresult',
        {
          _index: 986,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dependencies',
        {
          _index: 28,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'description',
        {
          _index: 256,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'index.html': {},
          },
        },
      ],
      ['development', { _index: 1135, title: {}, body: { 'index.html': {} } }],
      ['directory', { _index: 1126, title: {}, body: { 'index.html': {} } }],
      [
        'disable',
        {
          _index: 146,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'dist',
        { _index: 693, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['distribute', { _index: 1188, title: {}, body: { 'license.html': {} } }],
      [
        'documentation',
        {
          _index: 1055,
          title: {},
          body: { 'coverage.html': {}, 'index.html': {}, 'license.html': {} },
        },
      ],
      [
        'dto/create',
        {
          _index: 365,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'dto/google',
        {
          _index: 1030,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'dto/update',
        {
          _index: 367,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'due',
        { _index: 679, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      ['e2e', { _index: 1158, title: {}, body: { 'index.html': {} } }],
      [
        'eager',
        { _index: 503, title: {}, body: { 'classes/Category.html': {} } },
      ],
      ['efficient', { _index: 1110, title: {}, body: { 'index.html': {} } }],
      [
        'email',
        {
          _index: 677,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/GoogleStrategy.html': {},
          },
        },
      ],
      [
        'emails',
        {
          _index: 775,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'emails[0].value',
        {
          _index: 776,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'empty',
        {
          _index: 151,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'entity',
        {
          _index: 297,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'entity.js',
        { _index: 694, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'enumerations',
        {
          _index: 1098,
          title: { 'miscellaneous/enumerations.html': {} },
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['env', { _index: 1123, title: {}, body: { 'index.html': {} } }],
      ['env_example', { _index: 1124, title: {}, body: { 'index.html': {} } }],
      [
        'error',
        {
          _index: 718,
          title: {},
          body: {
            'classes/ExceptionsFilter.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "error('password",
        {
          _index: 1041,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'eslint',
        {
          _index: 145,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'eslint/no',
        {
          _index: 150,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      ['event', { _index: 1215, title: {}, body: { 'license.html': {} } }],
      [
        'exception',
        {
          _index: 704,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'exception.getresponse',
        {
          _index: 714,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'exception.getstatus',
        {
          _index: 713,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'exceptionfilter',
        {
          _index: 698,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'exceptionsfilter',
        {
          _index: 60,
          title: { 'classes/ExceptionsFilter.html': {} },
          body: {
            'modules/AppModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'exclude',
        {
          _index: 305,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'excludenullinterceptor',
        {
          _index: 722,
          title: { 'injectables/ExcludeNullInterceptor.html': {} },
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'executioncontext',
        {
          _index: 727,
          title: {},
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'exist',
        {
          _index: 379,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'existed',
        {
          _index: 602,
          title: {},
          body: {
            'injectables/CategoryService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'expiresin',
        { _index: 176, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'export',
        {
          _index: 18,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 33,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 1081,
          title: {},
          body: { 'dependencies.html': {}, 'license.html': {} },
        },
      ],
      [
        'extends',
        {
          _index: 404,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'extractjwt',
        {
          _index: 800,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'extractjwt.fromauthheaderasbearertoken',
        {
          _index: 803,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'false',
        {
          _index: 280,
          title: {},
          body: {
            'classes/Book.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'injectables/CategoryService.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'file',
        {
          _index: 5,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      ['files', { _index: 1178, title: {}, body: { 'license.html': {} } }],
      ['fill', { _index: 1132, title: {}, body: { 'index.html': {} } }],
      [
        'filter/exception.filter',
        { _index: 62, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'filter/exception.filter.ts',
        {
          _index: 696,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'filter/exception.filter.ts:11',
        {
          _index: 703,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'find',
        {
          _index: 472,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findandcount',
        {
          _index: 468,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findbooks',
        {
          _index: 319,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
          },
        },
      ],
      [
        'findbooks(page',
        {
          _index: 446,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'findbooks(undefined',
        {
          _index: 330,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'findbooksofone',
        {
          _index: 527,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        "findbooksofone(@param('id",
        {
          _index: 560,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'findbooksofone(id',
        {
          _index: 539,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'findbusyone',
        {
          _index: 884,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'findbusyone(userid',
        {
          _index: 890,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'findcategories',
        {
          _index: 528,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'findcategories(page',
        {
          _index: 591,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'findcategories(undefined',
        {
          _index: 542,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'findone',
        {
          _index: 320,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "findone(@param('id",
        {
          _index: 377,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
          },
        },
      ],
      [
        'findone(id',
        {
          _index: 334,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findone(request',
        {
          _index: 975,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'findonename',
        {
          _index: 580,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'findonename(name',
        {
          _index: 594,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'findonepayload',
        {
          _index: 1009,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'findonepayload(payload',
        {
          _index: 1016,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'findoneusername',
        {
          _index: 1010,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'findoneusername(username',
        {
          _index: 1018,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'findrecords',
        {
          _index: 864,
          title: {},
          body: {
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'findrecords(page',
        {
          _index: 893,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'findrecords(undefined',
        {
          _index: 866,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'findusers',
        {
          _index: 974,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'findusers(page',
        {
          _index: 1020,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'findusers(undefined',
        {
          _index: 977,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'first_name',
        { _index: 954, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'firstname',
        {
          _index: 664,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
          },
        },
      ],
      ['fitness', { _index: 1211, title: {}, body: { 'license.html': {} } }],
      ['following', { _index: 1197, title: {}, body: { 'license.html': {} } }],
      ['framework', { _index: 1108, title: {}, body: { 'index.html': {} } }],
      ['free', { _index: 1171, title: {}, body: { 'license.html': {} } }],
      [
        'function',
        {
          _index: 137,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'functions',
        {
          _index: 1102,
          title: { 'miscellaneous/functions.html': {} },
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      ['furnished', { _index: 1195, title: {}, body: { 'license.html': {} } }],
      ['generated', { _index: 1152, title: {}, body: { 'index.html': {} } }],
      [
        "get(':id",
        {
          _index: 376,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get(':id')@httpcode(200",
        {
          _index: 335,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get(':id/book",
        {
          _index: 559,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "get(':id/book')@httpcode(200",
        {
          _index: 540,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "get('google",
        {
          _index: 144,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "get('google/redirect",
        {
          _index: 153,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'get()@httpcode(200',
        {
          _index: 332,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
          },
        },
      ],
      [
        'getcookiewithjwttoken',
        {
          _index: 181,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'getcookiewithjwttoken(user',
        {
          _index: 190,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'getone',
        {
          _index: 611,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'getprofile',
        {
          _index: 71,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'getprofile(@req',
        {
          _index: 129,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'getprofile(request',
        {
          _index: 77,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'getting',
        {
          _index: 1104,
          title: { 'index.html': {}, 'license.html': {} },
          body: {},
        },
      ],
      [
        'google',
        {
          _index: 764,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/UserService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'googleauthguard',
        {
          _index: 117,
          title: { 'injectables/GoogleAuthGuard.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'googlestrategy',
        {
          _index: 159,
          title: { 'injectables/GoogleStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/GoogleStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'googleuserdto',
        {
          _index: 200,
          title: { 'classes/GoogleUserDto.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['granted', { _index: 1170, title: {}, body: { 'license.html': {} } }],
      ['graph', { _index: 1234, title: {}, body: { 'modules.html': {} } }],
      [
        'guard',
        {
          _index: 912,
          title: { 'guards/RolesGuard.html': {} },
          body: { 'coverage.html': {}, 'overview.html': {} },
        },
      ],
      [
        'guard/google.guard',
        {
          _index: 118,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'guard/jwt.guard',
        {
          _index: 120,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'guard/local.guard',
        {
          _index: 122,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'guards',
        { _index: 913, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'handle',
        {
          _index: 738,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'hash',
        {
          _index: 681,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'hashpassword',
        {
          _index: 193,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'hashpassword(plainpassword',
        {
          _index: 1022,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'hello',
        {
          _index: 9,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      ['hereby', { _index: 1169, title: {}, body: { 'license.html': {} } }],
      ['holders', { _index: 1217, title: {}, body: { 'license.html': {} } }],
      [
        'host',
        {
          _index: 701,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'host.switchtohttp',
        {
          _index: 707,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'http://localhost:8080',
        { _index: 1153, title: {}, body: { 'index.html': {} } },
      ],
      [
        'httpcode',
        {
          _index: 104,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpcode(200',
        {
          _index: 128,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpcode(201',
        {
          _index: 132,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
          },
        },
      ],
      [
        'httpcode(204',
        {
          _index: 385,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpexception',
        {
          _index: 213,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "httpexception('books",
        {
          _index: 475,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        "httpexception('categories",
        {
          _index: 618,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        "httpexception('forbidden",
        {
          _index: 996,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "httpexception('invalid",
        {
          _index: 230,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        "httpexception('not",
        {
          _index: 497,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        "httpexception('records",
        {
          _index: 907,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        "httpexception('unable",
        {
          _index: 458,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "httpexception('users",
        {
          _index: 1047,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        "httpexception('wrong",
        {
          _index: 486,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'httponly',
        {
          _index: 244,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'httpstatus',
        {
          _index: 214,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'httpstatus.bad_request',
        {
          _index: 228,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'httpstatus.conflict',
        {
          _index: 499,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'httpstatus.forbidden',
        {
          _index: 998,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'httpstatus.internal_server_error',
        {
          _index: 715,
          title: {},
          body: {
            'classes/ExceptionsFilter.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'httpstatus.not_acceptable',
        {
          _index: 489,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'httpstatus.not_found',
        {
          _index: 380,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'httpstatus.unauthorized',
        {
          _index: 231,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'id',
        {
          _index: 257,
          title: {},
          body: {
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/IdParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'identifier',
        { _index: 1056, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'idparam',
        {
          _index: 790,
          title: { 'classes/IdParam.html': {} },
          body: { 'classes/IdParam.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'ignoreexpiration',
        {
          _index: 804,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'implements',
        {
          _index: 697,
          title: {},
          body: {
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'guards/RolesGuard.html': {},
            'index.html': {},
          },
        },
      ],
      ['implied', { _index: 1207, title: {}, body: { 'license.html': {} } }],
      [
        'import',
        {
          _index: 16,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'imports',
        {
          _index: 46,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'in.user.dto.ts',
        {
          _index: 939,
          title: {},
          body: { 'classes/SignedInUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      ['included', { _index: 1202, title: {}, body: { 'license.html': {} } }],
      ['including', { _index: 1182, title: {}, body: { 'license.html': {} } }],
      [
        'index',
        {
          _index: 7,
          title: { 'index.html': {} },
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'information',
        {
          _index: 482,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'inherited',
        {
          _index: 414,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'injectable',
        {
          _index: 178,
          title: {
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
          body: {
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 179,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injectrepository',
        {
          _index: 454,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'injectrepository(book',
        {
          _index: 455,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'injectrepository(category',
        {
          _index: 598,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'injectrepository(record',
        {
          _index: 900,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'injectrepository(user',
        {
          _index: 1031,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      ['install', { _index: 1120, title: {}, body: { 'index.html': {} } }],
      ['installation', { _index: 1119, title: {}, body: { 'index.html': {} } }],
      [
        'installprerequisite',
        { _index: 1122, title: {}, body: { 'index.html': {} } },
      ],
      [
        'instanceof',
        {
          _index: 712,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'instead',
        {
          _index: 138,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'intercept',
        {
          _index: 724,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'intercept(context',
        {
          _index: 726,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'interface',
        {
          _index: 785,
          title: { 'interfaces/IRequest.html': {} },
          body: {
            'interfaces/IRequest.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'interfaces',
        { _index: 786, title: {}, body: { 'interfaces/IRequest.html': {} } },
      ],
      [
        'internal',
        {
          _index: 716,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'inversejoincolumn',
        { _index: 507, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'irequest',
        {
          _index: 78,
          title: { 'interfaces/IRequest.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'interfaces/IRequest.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'is_admin',
        { _index: 957, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'is_archived',
        {
          _index: 310,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        "is_archived'})@exclude",
        {
          _index: 281,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        'is_busy',
        { _index: 283, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'isadmin',
        {
          _index: 665,
          title: {},
          body: { 'classes/CreateUserDto.html': {}, 'classes/User.html': {} },
        },
      ],
      [
        'isalphanumberic',
        { _index: 675, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isarchived',
        {
          _index: 258,
          title: {},
          body: {
            'classes/Book.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'isboolean',
        {
          _index: 635,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'isboolean()@isoptional',
        {
          _index: 628,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'isbusy',
        {
          _index: 259,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/CreateBookDto.html': {} },
        },
      ],
      [
        'isdate',
        {
          _index: 658,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isdate()@isoptional',
        {
          _index: 652,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isemail',
        { _index: 676, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isempty',
        {
          _index: 898,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'isinstance',
        {
          _index: 659,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isinstance(book',
        {
          _index: 661,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isinstance(book)@isnotempty',
        {
          _index: 650,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isinstance(user',
        {
          _index: 660,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'isinstance(user)@isnotempty',
        {
          _index: 654,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'ismatchpassword',
        {
          _index: 182,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'ismatchpassword(plainpassword',
        {
          _index: 192,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'isnotempty',
        {
          _index: 636,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'isnumber',
        {
          _index: 426,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/IdParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'isnumber()@isnotempty()@min(1',
        { _index: 633, title: {}, body: { 'classes/CreateBookDto.html': {} } },
      ],
      [
        'isnumber()@min(1',
        { _index: 792, title: {}, body: { 'classes/IdParam.html': {} } },
      ],
      [
        'isoptional',
        {
          _index: 428,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'isoptional()@type(undefined)@isnumber()@min(paginationparam.min_limit)@max(paginationparam.max_limit',
        {
          _index: 418,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'isoptional()@type(undefined)@isnumber()@min(paginationparam.min_page',
        {
          _index: 424,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'isstring',
        {
          _index: 637,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty',
        { _index: 673, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isstring()@isnotempty()@length(lengthlimits.min_length',
        {
          _index: 631,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty()@length(lengthlimits.password_plain_min_length',
        { _index: 670, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'isstring()@isoptional()@maxlength(lengthlimits.big_max_length',
        {
          _index: 626,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
          },
        },
      ],
      [
        'joincolumn',
        {
          _index: 506,
          title: {},
          body: { 'classes/Category.html': {}, 'classes/Record.html': {} },
        },
      ],
      [
        'jointable',
        { _index: 516, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'jwt',
        {
          _index: 801,
          title: {},
          body: { 'injectables/JwtStrategy.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'jwt_expiration_time',
        {
          _index: 248,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'jwtauthguard',
        {
          _index: 119,
          title: { 'injectables/JwtAuthGuard.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'injectables/JwtAuthGuard.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'jwtfromrequest',
        {
          _index: 802,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'jwtmodule',
        { _index: 164, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'jwtmodule.register',
        { _index: 172, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'jwtservice',
        {
          _index: 188,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'jwtstrategy',
        {
          _index: 160,
          title: { 'injectables/JwtStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/JwtStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'jwtuser',
        {
          _index: 789,
          title: {},
          body: {
            'interfaces/IRequest.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'key',
        {
          _index: 748,
          title: {},
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'key_map',
        { _index: 951, title: {}, body: { 'classes/User.html': {} } },
      ],
      ['kind', { _index: 1206, title: {}, body: { 'license.html': {} } }],
      [
        'last_name',
        { _index: 960, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'lastname',
        {
          _index: 666,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        "leftjoinandselect('category.books",
        {
          _index: 608,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'legend',
        {
          _index: 29,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'length',
        {
          _index: 274,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'length(lengthlimits.min_length',
        {
          _index: 639,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'lengthlimits',
        {
          _index: 295,
          title: { 'classes/LengthLimits.html': {} },
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LengthLimits.html': {},
            'classes/User.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'lengthlimits.big_max_length',
        {
          _index: 308,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/Category.html': {} },
        },
      ],
      [
        'lengthlimits.password_hash_length',
        { _index: 970, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'lengthlimits.password_plain_max_length',
        { _index: 671, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'lengthlimits.password_plain_min_length',
        { _index: 683, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'lengthlimits.small_max_length',
        {
          _index: 307,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/User.html': {},
          },
        },
      ],
      ['liability', { _index: 1221, title: {}, body: { 'license.html': {} } }],
      ['liable', { _index: 1218, title: {}, body: { 'license.html': {} } }],
      ['library', { _index: 1114, title: {}, body: { 'index.html': {} } }],
      [
        'license',
        {
          _index: 1161,
          title: { 'license.html': {} },
          body: { 'license.html': {} },
        },
      ],
      [
        'limit',
        {
          _index: 374,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/PaginationParam.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['limitation', { _index: 1183, title: {}, body: { 'license.html': {} } }],
      ['limited', { _index: 1208, title: {}, body: { 'license.html': {} } }],
      [
        'line',
        {
          _index: 148,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'literal',
        {
          _index: 1246,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'local',
        {
          _index: 832,
          title: {},
          body: {
            'injectables/LocalStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'localauthguard',
        {
          _index: 121,
          title: { 'injectables/LocalAuthGuard.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/LocalAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'localstrategy',
        {
          _index: 161,
          title: { 'injectables/LocalStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/LocalStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'login',
        {
          _index: 72,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'login(@req',
        {
          _index: 141,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'login(request',
        {
          _index: 87,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'login(user',
        {
          _index: 197,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'logingoogle',
        {
          _index: 74,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'logingoogle(@req',
        {
          _index: 152,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'logingoogle(_request',
        {
          _index: 91,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'logingoogleredirect',
        {
          _index: 75,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'logingoogleredirect(@req',
        {
          _index: 154,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'logingoogleredirect(request',
        {
          _index: 95,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      ['management', { _index: 1116, title: {}, body: { 'index.html': {} } }],
      [
        'manytomany',
        {
          _index: 300,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/Category.html': {} },
        },
      ],
      [
        'manytomany(undefined',
        {
          _index: 264,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/Category.html': {} },
        },
      ],
      [
        'manytoone',
        { _index: 859, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'manytoone(undefined',
        { _index: 843, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'map',
        {
          _index: 736,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'matching',
        {
          _index: 23,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'max',
        {
          _index: 246,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'max(paginationparam.max_limit',
        {
          _index: 432,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'max_limit',
        {
          _index: 409,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'maximum',
        { _index: 680, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'maxlength',
        {
          _index: 638,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
          },
        },
      ],
      [
        'maxlength(lengthlimits.big_max_length',
        {
          _index: 640,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
          },
        },
      ],
      [
        'merchantability',
        { _index: 1210, title: {}, body: { 'license.html': {} } },
      ],
      ['merge', { _index: 1186, title: {}, body: { 'license.html': {} } }],
      [
        'metadata',
        { _index: 1091, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'methods',
        {
          _index: 8,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'min',
        {
          _index: 427,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/IdParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'min(1',
        {
          _index: 641,
          title: {},
          body: {
            'classes/CreateBookDto.html': {},
            'classes/IdParam.html': {},
          },
        },
      ],
      [
        'min(paginationparam.min_limit',
        {
          _index: 431,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'min(paginationparam.min_page',
        {
          _index: 430,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'min_length',
        { _index: 810, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'min_limit',
        {
          _index: 410,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'min_page',
        {
          _index: 411,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'miscellaneous',
        {
          _index: 1097,
          title: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['mit', { _index: 1162, title: {}, body: { 'license.html': {} } }],
      ['mode', { _index: 1136, title: {}, body: { 'index.html': {} } }],
      ['modify', { _index: 1185, title: {}, body: { 'license.html': {} } }],
      [
        'module',
        {
          _index: 25,
          title: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
          },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules',
        {
          _index: 27,
          title: { 'modules.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'mysql2',
        { _index: 1085, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'name',
        {
          _index: 82,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'name.familyname',
        {
          _index: 778,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'name.givenname',
        {
          _index: 777,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      ['needed', { _index: 1128, title: {}, body: { 'index.html': {} } }],
      [
        'nestinterceptor',
        {
          _index: 734,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      ['nestjs', { _index: 1115, title: {}, body: { 'index.html': {} } }],
      [
        'nestjs/common',
        {
          _index: 17,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/common/decorators',
        {
          _index: 108,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'nestjs/config',
        {
          _index: 48,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/core',
        {
          _index: 920,
          title: {},
          body: { 'guards/RolesGuard.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/core/constants',
        { _index: 51, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'nestjs/jwt',
        {
          _index: 165,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/mapped',
        {
          _index: 782,
          title: {},
          body: {
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/passport',
        {
          _index: 167,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/platform',
        { _index: 1080, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'nestjs/typeorm',
        {
          _index: 399,
          title: {},
          body: {
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'injectables/CategoryService.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'injectables/RecordService.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'new',
        {
          _index: 222,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/GoogleStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'next',
        {
          _index: 147,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
          },
        },
      ],
      ['node.js', { _index: 1107, title: {}, body: { 'index.html': {} } }],
      [
        'noninfringement',
        { _index: 1214, title: {}, body: { 'license.html': {} } },
      ],
      ['notice', { _index: 1200, title: {}, body: { 'license.html': {} } }],
      [
        'now',
        {
          _index: 488,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      ['npx', { _index: 1146, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 743,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'nullable',
        {
          _index: 266,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 276,
          title: {},
          body: {
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'oauth20',
        {
          _index: 765,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'object',
        {
          _index: 745,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'object.assign',
        { _index: 690, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'object.assign(book',
        {
          _index: 456,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'object.assign(category',
        {
          _index: 599,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'object.assign(record',
        {
          _index: 901,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'object.assign(user',
        {
          _index: 1038,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'object.entries(value).map(([key',
        {
          _index: 747,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'object.fromentries',
        {
          _index: 746,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'observable',
        {
          _index: 731,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      ['obtaining', { _index: 1174, title: {}, body: { 'license.html': {} } }],
      ['omitting', { _index: 1127, title: {}, body: { 'index.html': {} } }],
      [
        'omittype',
        {
          _index: 941,
          title: {},
          body: {
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
          },
        },
      ],
      [
        'omittype(createbookdto',
        { _index: 943, title: {}, body: { 'classes/UpdateBookDto.html': {} } },
      ],
      [
        'omittype(createcategorydto',
        {
          _index: 945,
          title: {},
          body: { 'classes/UpdateCategoryDto.html': {} },
        },
      ],
      [
        'omittype(createrecorddto',
        {
          _index: 947,
          title: {},
          body: { 'classes/UpdateRecordDto.html': {} },
        },
      ],
      [
        'onetomany',
        {
          _index: 301,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/User.html': {} },
        },
      ],
      [
        'onetomany(undefined',
        {
          _index: 290,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/User.html': {} },
        },
      ],
      [
        'optional',
        {
          _index: 84,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'order',
        {
          _index: 469,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'ormconfig',
        { _index: 686, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['otherwise', { _index: 1226, title: {}, body: { 'license.html': {} } }],
      [
        'out',
        {
          _index: 44,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'license.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'overview',
        {
          _index: 1236,
          title: { 'overview.html': {} },
          body: { 'overview.html': {} },
        },
      ],
      ['p', { _index: 1148, title: {}, body: { 'index.html': {} } }],
      [
        'package',
        { _index: 1074, title: { 'dependencies.html': {} }, body: {} },
      ],
      [
        'page',
        {
          _index: 373,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/PaginationParam.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'pagination',
        {
          _index: 1245,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'paginationparam',
        {
          _index: 405,
          title: { 'classes/PaginationParam.html': {} },
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paginationparam:10',
        {
          _index: 422,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:11',
        {
          _index: 421,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:17',
        {
          _index: 425,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:24',
        {
          _index: 419,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:5',
        {
          _index: 417,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:6',
        {
          _index: 415,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'paginationparam:8',
        {
          _index: 423,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'param',
        {
          _index: 348,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "param('id",
        {
          _index: 382,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'parameters',
        {
          _index: 81,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'partialtype',
        {
          _index: 942,
          title: {},
          body: {
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
          },
        },
      ],
      ['particular', { _index: 1212, title: {}, body: { 'license.html': {} } }],
      [
        'passport',
        {
          _index: 763,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'passportmodule',
        { _index: 166, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'passportstrategy',
        {
          _index: 761,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'passportstrategy(strategy',
        {
          _index: 766,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'password',
        {
          _index: 207,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'password_hash',
        { _index: 962, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'password_hash_length',
        { _index: 811, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'password_plain_max_length',
        { _index: 812, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'password_plain_min_length',
        { _index: 813, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'passwordhash',
        { _index: 952, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'patch',
        {
          _index: 349,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "patch(':id",
        {
          _index: 568,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "patch(':id')@httpcode(200",
        {
          _index: 984,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "patch(':id/book",
        {
          _index: 565,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "patch(':id/borrow",
        {
          _index: 388,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        "patch(':id/return",
        {
          _index: 390,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'path',
        {
          _index: 245,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'modules/DatabaseModule.html': {},
          },
        },
      ],
      [
        'path.join(process.cwd',
        { _index: 692, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'payload',
        {
          _index: 204,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'interfaces/IRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'payload.sub',
        {
          _index: 237,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'payload.username',
        {
          _index: 238,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['permission', { _index: 1168, title: {}, body: { 'license.html': {} } }],
      ['permit', { _index: 1193, title: {}, body: { 'license.html': {} } }],
      ['person', { _index: 1173, title: {}, body: { 'license.html': {} } }],
      ['persons', { _index: 1194, title: {}, body: { 'license.html': {} } }],
      [
        'picktype',
        {
          _index: 781,
          title: {},
          body: {
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'picktype(createuserdto',
        {
          _index: 784,
          title: {},
          body: {
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'pipe(map((value',
        {
          _index: 739,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'plainpassword',
        {
          _index: 195,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['please', { _index: 1131, title: {}, body: { 'index.html': {} } }],
      ['portions', { _index: 1204, title: {}, body: { 'license.html': {} } }],
      [
        'post',
        {
          _index: 105,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
          },
        },
      ],
      [
        "post(':id/book",
        {
          _index: 563,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "post('signin",
        {
          _index: 140,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('signup",
        {
          _index: 131,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('signup')@httpcode(201",
        {
          _index: 100,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'prefix',
        {
          _index: 69,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'price',
        {
          _index: 260,
          title: {},
          body: { 'classes/Book.html': {}, 'classes/CreateBookDto.html': {} },
        },
      ],
      [
        'primarygeneratedcolumn',
        {
          _index: 277,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'private',
        {
          _index: 125,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'process.env.jwt_expiration',
        { _index: 177, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'process.env.jwt_secret',
        { _index: 174, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      ['production', { _index: 1140, title: {}, body: { 'index.html': {} } }],
      [
        'profile',
        {
          _index: 758,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      ['progressive', { _index: 1106, title: {}, body: { 'index.html': {} } }],
      [
        'promise',
        {
          _index: 102,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'promise.all',
        {
          _index: 483,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
          },
        },
      ],
      [
        'properties',
        {
          _index: 253,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'provide',
        { _index: 65, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'provided',
        {
          _index: 227,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'license.html': {} },
        },
      ],
      [
        'providers',
        {
          _index: 32,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'public',
        { _index: 825, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      ['publish', { _index: 1187, title: {}, body: { 'license.html': {} } }],
      ['purpose', { _index: 1213, title: {}, body: { 'license.html': {} } }],
      [
        'put',
        {
          _index: 350,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        "put(':id",
        {
          _index: 381,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'query',
        {
          _index: 351,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'readonly',
        {
          _index: 126,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'record',
        {
          _index: 289,
          title: { 'classes/Record.html': {} },
          body: {
            'classes/Book.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "record's",
        {
          _index: 911,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'record.book',
        { _index: 314, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'record.borrower',
        { _index: 971, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'record.controller',
        { _index: 881, title: {}, body: { 'modules/RecordModule.html': {} } },
      ],
      [
        'record.dto',
        {
          _index: 899,
          title: {},
          body: {
            'injectables/RecordService.html': {},
            'classes/UpdateRecordDto.html': {},
          },
        },
      ],
      [
        'record.dto.ts',
        {
          _index: 649,
          title: {},
          body: {
            'classes/CreateRecordDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'record.dto.ts:14',
        {
          _index: 655,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'record.dto.ts:18',
        {
          _index: 651,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'record.dto.ts:22',
        {
          _index: 653,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'record.dto.ts:26',
        {
          _index: 657,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'record.dto.ts:30',
        {
          _index: 656,
          title: {},
          body: { 'classes/CreateRecordDto.html': {} },
        },
      ],
      [
        'record.entity',
        {
          _index: 871,
          title: {},
          body: {
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'record.service',
        {
          _index: 872,
          title: {},
          body: {
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
          },
        },
      ],
      [
        'record/record.entity',
        {
          _index: 304,
          title: {},
          body: {
            'classes/Book.html': {},
            'modules/CategoryModule.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'record/record.module',
        {
          _index: 56,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/BookModule.html': {} },
        },
      ],
      [
        'record/record.service',
        {
          _index: 400,
          title: {},
          body: {
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
          },
        },
      ],
      [
        'recordcontroller',
        {
          _index: 862,
          title: { 'controllers/RecordController.html': {} },
          body: {
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'recordmodule',
        {
          _index: 40,
          title: { 'modules/RecordModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/BookModule.html': {},
            'modules/RecordModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'recordpagination',
        {
          _index: 870,
          title: {},
          body: {
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'recordpaginationparam',
        {
          _index: 434,
          title: { 'classes/RecordPaginationParam.html': {} },
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'classes/UserPaginationParam.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'recordpaginationparam.default_limit',
        {
          _index: 904,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'recordpaginationparam.default_page',
        {
          _index: 903,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'recordrepo',
        {
          _index: 887,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'records',
        {
          _index: 261,
          title: {},
          body: {
            'classes/Book.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'records.length',
        {
          _index: 906,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'recordservice',
        {
          _index: 396,
          title: { 'injectables/RecordService.html': {} },
          body: {
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'injectables/RecordService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'recursivelystripnullvalues',
        {
          _index: 725,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'recursivelystripnullvalues(value',
        {
          _index: 732,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'referencedcolumnname',
        { _index: 521, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'reflect',
        { _index: 1090, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'reflector',
        { _index: 916, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'refreshtoken',
        {
          _index: 757,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'register',
        {
          _index: 76,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'register(@body',
        {
          _index: 133,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'register(createuserdto',
        {
          _index: 98,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'registergoogleuser',
        {
          _index: 1011,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'registergoogleuser(userdto',
        {
          _index: 1025,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'relations',
        {
          _index: 619,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'remove',
        {
          _index: 321,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        "remove(@param('id",
        {
          _index: 386,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
          },
        },
      ],
      [
        'remove(id',
        {
          _index: 337,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'remove(request',
        {
          _index: 980,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      ['render', { _index: 1145, title: {}, body: { 'index.html': {} } }],
      [
        'repository',
        {
          _index: 438,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'req',
        {
          _index: 106,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'request',
        {
          _index: 85,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'interfaces/IRequest.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "request.headers.authorization.substring('bearer",
        { _index: 930, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'request.user',
        {
          _index: 130,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'required',
        { _index: 678, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'requiredroles',
        { _index: 925, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'requiredroles.some((role',
        { _index: 935, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'reset',
        {
          _index: 43,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resource',
        {
          _index: 997,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'response',
        {
          _index: 708,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'response.status(statuscode).json',
        {
          _index: 719,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'restriction',
        { _index: 1181, title: {}, body: { 'license.html': {} } },
      ],
      [
        'result',
        {
          _index: 22,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'results',
        {
          _index: 24,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'return',
        {
          _index: 20,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'return(request',
        {
          _index: 340,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'return(userid',
        {
          _index: 451,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'returned_at',
        { _index: 856, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'returnedat',
        {
          _index: 501,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 14,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['rights', { _index: 1184, title: {}, body: { 'license.html': {} } }],
      [
        'rimraf',
        { _index: 1093, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'role',
        {
          _index: 357,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'role.admin',
        { _index: 934, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'role.decorator',
        { _index: 923, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'role.enum',
        { _index: 924, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'role/role.decorator',
        {
          _index: 356,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'role/role.enum',
        {
          _index: 358,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'role/role.guard',
        { _index: 58, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'roles',
        {
          _index: 355,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'roles(role.admin',
        {
          _index: 370,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "roles(role.admin)@delete(':id')@httpcode(204",
        {
          _index: 981,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'roles(role.admin)@get()@httpcode(200',
        {
          _index: 978,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'roles.includes(role',
        { _index: 936, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'roles.push(role.user',
        { _index: 933, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'roles_key',
        {
          _index: 922,
          title: {},
          body: {
            'guards/RolesGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'rolesguard',
        {
          _index: 57,
          title: { 'guards/RolesGuard.html': {} },
          body: {
            'modules/AppModule.html': {},
            'guards/RolesGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['running', { _index: 1130, title: {}, body: { 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 735,
          title: {},
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'rxjs/operators',
        {
          _index: 737,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      ['s', { _index: 1150, title: {}, body: { 'index.html': {} } }],
      [
        'salt_rounds',
        {
          _index: 1008,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      ['scalable', { _index: 1111, title: {}, body: { 'index.html': {} } }],
      ['schema', { _index: 1143, title: {}, body: { 'index.html': {} } }],
      [
        'scope',
        {
          _index: 774,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'secret',
        { _index: 173, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'secretorkey',
        {
          _index: 805,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      ['sell', { _index: 1191, title: {}, body: { 'license.html': {} } }],
      ['serve', { _index: 1151, title: {}, body: { 'index.html': {} } }],
      [
        'server',
        {
          _index: 717,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {}, 'index.html': {} },
        },
      ],
      ['services', { _index: 1129, title: {}, body: { 'index.html': {} } }],
      [
        'setmetadata(roles_key',
        {
          _index: 1250,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['shall', { _index: 1201, title: {}, body: { 'license.html': {} } }],
      ['side', { _index: 1112, title: {}, body: { 'index.html': {} } }],
      [
        'signedinuserdto',
        {
          _index: 937,
          title: { 'classes/SignedInUserDto.html': {} },
          body: { 'classes/SignedInUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'signoptions',
        { _index: 175, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'skip',
        {
          _index: 464,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'small_max_length',
        { _index: 814, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      ['software', { _index: 1176, title: {}, body: { 'license.html': {} } }],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'modules/BookModule.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'modules/CategoryModule.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/DatabaseModule.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleAuthGuard.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtAuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalAuthGuard.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'modules/RecordModule.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'src/.../auth.type.ts',
        {
          _index: 1243,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'src/.../main.ts',
        {
          _index: 1103,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/.../pagination.type.ts',
        {
          _index: 1244,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'src/.../role.decorator.ts',
        {
          _index: 1249,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/.../role.enum.ts',
        {
          _index: 1099,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'src/app/app.controller.ts',
        {
          _index: 6,
          title: {},
          body: { 'controllers/AppController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/app/app.controller.ts:6',
        {
          _index: 13,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'src/app/app.module.ts',
        { _index: 45, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'src/auth/auth.controller.ts',
        {
          _index: 68,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:22',
        {
          _index: 80,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:28',
        {
          _index: 101,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:36',
        {
          _index: 89,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:43',
        {
          _index: 93,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.controller.ts:47',
        {
          _index: 97,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'src/auth/auth.module.ts',
        { _index: 162, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/auth/auth.service.ts',
        {
          _index: 180,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:16',
        {
          _index: 189,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:23',
        {
          _index: 208,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:34',
        {
          _index: 205,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:41',
        {
          _index: 201,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:47',
        {
          _index: 211,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:55',
        {
          _index: 198,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:62',
        {
          _index: 191,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.service.ts:70',
        {
          _index: 194,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'src/auth/auth.type.ts',
        {
          _index: 787,
          title: {},
          body: {
            'interfaces/IRequest.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'src/auth/guard/google.guard.ts',
        {
          _index: 749,
          title: {},
          body: { 'injectables/GoogleAuthGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/guard/jwt.guard.ts',
        {
          _index: 794,
          title: {},
          body: { 'injectables/JwtAuthGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/guard/local.guard.ts',
        {
          _index: 826,
          title: {},
          body: { 'injectables/LocalAuthGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/strategy/google.strategy.ts',
        {
          _index: 752,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/strategy/google.strategy.ts:10',
        {
          _index: 755,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'src/auth/strategy/google.strategy.ts:23',
        {
          _index: 759,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'src/auth/strategy/jwt.strategy.ts',
        {
          _index: 796,
          title: {},
          body: { 'injectables/JwtStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/strategy/jwt.strategy.ts:10',
        {
          _index: 797,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'src/auth/strategy/jwt.strategy.ts:22',
        {
          _index: 799,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'src/auth/strategy/local.strategy.ts',
        {
          _index: 828,
          title: {},
          body: { 'injectables/LocalStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/auth/strategy/local.strategy.ts:13',
        {
          _index: 831,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'src/auth/strategy/local.strategy.ts:8',
        {
          _index: 829,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts',
        {
          _index: 316,
          title: {},
          body: { 'controllers/BookController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:37',
        {
          _index: 329,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:43',
        {
          _index: 333,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:51',
        {
          _index: 336,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:65',
        {
          _index: 346,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:76',
        {
          _index: 339,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:83',
        {
          _index: 325,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.controller.ts:99',
        {
          _index: 342,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'src/book/book.entity.ts',
        {
          _index: 252,
          title: {},
          body: { 'classes/Book.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/book/book.entity.ts:18',
        { _index: 278, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:21',
        { _index: 286, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:24',
        { _index: 275, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:27',
        { _index: 288, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:30',
        { _index: 284, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:34',
        { _index: 282, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:38',
        { _index: 272, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:42',
        { _index: 294, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:47',
        { _index: 268, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.entity.ts:50',
        { _index: 291, title: {}, body: { 'classes/Book.html': {} } },
      ],
      [
        'src/book/book.module.ts',
        { _index: 397, title: {}, body: { 'modules/BookModule.html': {} } },
      ],
      [
        'src/book/book.service.ts',
        {
          _index: 436,
          title: {},
          body: { 'injectables/BookService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:119',
        {
          _index: 452,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:13',
        {
          _index: 439,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:22',
        {
          _index: 445,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:31',
        {
          _index: 447,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:62',
        {
          _index: 449,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:73',
        {
          _index: 453,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:85',
        {
          _index: 450,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/book.service.ts:91',
        {
          _index: 443,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'src/book/dto/create',
        {
          _index: 624,
          title: {},
          body: { 'classes/CreateBookDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/book/dto/update',
        {
          _index: 940,
          title: {},
          body: { 'classes/UpdateBookDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts',
        {
          _index: 524,
          title: {},
          body: {
            'controllers/CategoryController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/category/category.controller.ts:102',
        {
          _index: 535,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:113',
        {
          _index: 548,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:124',
        {
          _index: 545,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:49',
        {
          _index: 538,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:57',
        {
          _index: 543,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:65',
        {
          _index: 544,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:77',
        {
          _index: 541,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.controller.ts:91',
        {
          _index: 532,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'src/category/category.entity.ts',
        {
          _index: 502,
          title: {},
          body: { 'classes/Category.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/category/category.entity.ts:17',
        { _index: 511, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:20',
        { _index: 514, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:23',
        { _index: 510, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:27',
        { _index: 512, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:31',
        { _index: 509, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:35',
        { _index: 515, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.entity.ts:52',
        { _index: 508, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'src/category/category.module.ts',
        { _index: 575, title: {}, body: { 'modules/CategoryModule.html': {} } },
      ],
      [
        'src/category/category.service.ts',
        {
          _index: 579,
          title: {},
          body: { 'injectables/CategoryService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:124',
        {
          _index: 593,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:14',
        {
          _index: 582,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:141',
        {
          _index: 595,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:152',
        {
          _index: 590,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:156',
        {
          _index: 597,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:168',
        {
          _index: 596,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:22',
        {
          _index: 589,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:40',
        {
          _index: 588,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:76',
        {
          _index: 585,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/category.service.ts:87',
        {
          _index: 592,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'src/category/dto/create',
        {
          _index: 642,
          title: {},
          body: { 'classes/CreateCategoryDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/category/dto/update',
        {
          _index: 944,
          title: {},
          body: { 'classes/UpdateCategoryDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/common/constants/length.ts',
        {
          _index: 808,
          title: {},
          body: { 'classes/LengthLimits.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/common/constants/length.ts:2',
        { _index: 817, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/constants/length.ts:3',
        { _index: 824, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/constants/length.ts:4',
        { _index: 816, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/constants/length.ts:5',
        { _index: 818, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/constants/length.ts:6',
        { _index: 822, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/constants/length.ts:7',
        { _index: 820, title: {}, body: { 'classes/LengthLimits.html': {} } },
      ],
      [
        'src/common/types/type.param.ts',
        {
          _index: 791,
          title: {},
          body: { 'classes/IdParam.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/common/types/type.param.ts:6',
        { _index: 793, title: {}, body: { 'classes/IdParam.html': {} } },
      ],
      [
        'src/database/database.module.ts',
        { _index: 684, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'src/main.ts',
        {
          _index: 1067,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/record/dto/create',
        {
          _index: 648,
          title: {},
          body: { 'classes/CreateRecordDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/record/dto/update',
        {
          _index: 946,
          title: {},
          body: { 'classes/UpdateRecordDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/record/record.controller.ts',
        {
          _index: 863,
          title: {},
          body: {
            'controllers/RecordController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/record/record.controller.ts:29',
        {
          _index: 867,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'src/record/record.controller.ts:37',
        {
          _index: 865,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'src/record/record.controller.ts:49',
        {
          _index: 869,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'src/record/record.entity.ts',
        {
          _index: 841,
          title: {},
          body: { 'classes/Record.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/record/record.entity.ts:17',
        { _index: 854, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:20',
        { _index: 852, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:23',
        { _index: 846, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:27',
        { _index: 855, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:30',
        { _index: 849, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:33',
        { _index: 857, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:37',
        { _index: 853, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:41',
        { _index: 858, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:45',
        { _index: 851, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.entity.ts:49',
        { _index: 845, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'src/record/record.module.ts',
        { _index: 880, title: {}, body: { 'modules/RecordModule.html': {} } },
      ],
      [
        'src/record/record.service.ts',
        {
          _index: 883,
          title: {},
          body: { 'injectables/RecordService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:101',
        {
          _index: 895,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:12',
        {
          _index: 886,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:18',
        {
          _index: 889,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:30',
        {
          _index: 894,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:64',
        {
          _index: 892,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:70',
        {
          _index: 891,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/record/record.service.ts:89',
        {
          _index: 897,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'src/role/role.decorator.ts',
        {
          _index: 1068,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/role/role.enum.ts',
        {
          _index: 1100,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'src/role/role.guard.ts',
        {
          _index: 914,
          title: {},
          body: { 'guards/RolesGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/role/role.guard.ts:14',
        { _index: 919, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'src/role/role.guard.ts:8',
        { _index: 917, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'src/user/dto/create',
        {
          _index: 662,
          title: {},
          body: { 'classes/CreateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/dto/google',
        {
          _index: 780,
          title: {},
          body: { 'classes/GoogleUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/dto/signed',
        {
          _index: 938,
          title: {},
          body: { 'classes/SignedInUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/dto/update',
        {
          _index: 949,
          title: {},
          body: { 'classes/UpdateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/user.controller.ts',
        {
          _index: 973,
          title: {},
          body: { 'controllers/UserController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/user.controller.ts:34',
        {
          _index: 979,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/user/user.controller.ts:42',
        {
          _index: 976,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/user/user.controller.ts:61',
        {
          _index: 985,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/user/user.controller.ts:76',
        {
          _index: 982,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'src/user/user.entity.ts',
        {
          _index: 950,
          title: {},
          body: { 'classes/User.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/user.entity.ts:16',
        { _index: 959, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:25',
        { _index: 956, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:28',
        { _index: 969, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:32',
        { _index: 964, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:35',
        { _index: 955, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:38',
        { _index: 961, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:41',
        { _index: 958, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:44',
        { _index: 953, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:48',
        { _index: 968, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:52',
        { _index: 966, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.entity.ts:54',
        { _index: 967, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'src/user/user.module.ts',
        { _index: 1004, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'src/user/user.service.ts',
        {
          _index: 1007,
          title: {},
          body: { 'injectables/UserService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:103',
        {
          _index: 1019,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:109',
        {
          _index: 1017,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:120',
        {
          _index: 1028,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:132',
        {
          _index: 1027,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:14',
        {
          _index: 1013,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:19',
        {
          _index: 1029,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:21',
        {
          _index: 1024,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:42',
        {
          _index: 1026,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:60',
        {
          _index: 1023,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:66',
        {
          _index: 1021,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/user/user.service.ts:97',
        {
          _index: 1015,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'src/utils/exception',
        {
          _index: 695,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/utils/interceptor/excludenull.interceptor.ts',
        {
          _index: 723,
          title: {},
          body: {
            'injectables/ExcludeNullInterceptor.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/utils/interceptor/excludenull.interceptor.ts:12',
        {
          _index: 729,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'src/utils/interceptor/excludenull.interceptor.ts:18',
        {
          _index: 733,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts',
        {
          _index: 403,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/UserPaginationParam.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:10',
        {
          _index: 838,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:11',
        {
          _index: 837,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:17',
        {
          _index: 840,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:24',
        {
          _index: 836,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:5',
        {
          _index: 835,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:6',
        {
          _index: 834,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.param.ts:8',
        {
          _index: 839,
          title: {},
          body: { 'classes/PaginationParam.html': {} },
        },
      ],
      [
        'src/utils/pagination/pagination.type.ts',
        {
          _index: 1247,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['start', { _index: 1137, title: {}, body: { 'index.html': {} } }],
      ['start:dev', { _index: 1139, title: {}, body: { 'index.html': {} } }],
      [
        'start:proddocumentation',
        { _index: 1141, title: {}, body: { 'index.html': {} } },
      ],
      [
        'started',
        {
          _index: 1105,
          title: { 'index.html': {}, 'license.html': {} },
          body: {},
        },
      ],
      [
        'statements',
        { _index: 1057, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'static',
        {
          _index: 406,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
          },
        },
      ],
      [
        'statuscode',
        {
          _index: 710,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'statusmessage',
        {
          _index: 711,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'strategy',
        {
          _index: 762,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'strategy/google.strategy',
        { _index: 169, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'strategy/jwt.strategy',
        { _index: 170, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'strategy/local.strategy',
        { _index: 171, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'string',
        {
          _index: 15,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'classes/Category.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/User.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'sub',
        {
          _index: 236,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'interfaces/IRequest.html': {},
          },
        },
      ],
      ['subject', { _index: 1196, title: {}, body: { 'license.html': {} } }],
      ['sublicense', { _index: 1189, title: {}, body: { 'license.html': {} } }],
      [
        'substantial',
        { _index: 1203, title: {}, body: { 'license.html': {} } },
      ],
      [
        'super',
        {
          _index: 767,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      ['support', { _index: 1231, title: {}, body: { 'modules.html': {} } }],
      ['svg', { _index: 1232, title: {}, body: { 'modules.html': {} } }],
      ['system', { _index: 1118, title: {}, body: { 'index.html': {} } }],
      ['table', { _index: 1073, title: {}, body: { 'coverage.html': {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1072, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'take',
        {
          _index: 462,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['test', { _index: 1154, title: {}, body: { 'index.html': {} } }],
      ['test:cov', { _index: 1160, title: {}, body: { 'index.html': {} } }],
      ['test:e2e', { _index: 1159, title: {}, body: { 'index.html': {} } }],
      ['tests', { _index: 1157, title: {}, body: { 'index.html': {} } }],
      [
        'this.authservice.login(request.user',
        {
          _index: 142,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.validateusergoogle(userdto',
        {
          _index: 779,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'this.authservice.validateuserjwt(payload',
        {
          _index: 807,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'this.authservice.validateuserlocal(username',
        {
          _index: 833,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'this.authservice.verifytokenjwt(token',
        { _index: 931, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'this.bookrepo',
        {
          _index: 467,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.bookrepo.save(book',
        {
          _index: 492,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.bookrepo.save(book).catch',
        {
          _index: 457,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.bookrepo.update(id',
        {
          _index: 478,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.bookservice.borrow(request.user.id',
        {
          _index: 389,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.create(bookdto',
        {
          _index: 614,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.bookservice.create(createbookdto',
        {
          _index: 372,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.findbooks(page',
        {
          _index: 375,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.findone(bookid',
        {
          _index: 605,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.bookservice.findone(id',
        {
          _index: 378,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.remove(id',
        {
          _index: 387,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.return(request.user.id',
        {
          _index: 391,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.bookservice.update(id',
        {
          _index: 383,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'this.categoryrepo',
        {
          _index: 606,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.categoryrepo.save(category',
        {
          _index: 613,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.categoryrepo.save(category).catch',
        {
          _index: 603,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.categoryrepo.update(id',
        {
          _index: 621,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.categoryservice.addnewbooktocategory(id',
        {
          _index: 564,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.addoldbooktocategory(id',
        {
          _index: 567,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.create(createcategorydto',
        {
          _index: 556,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.findbooksofone(id',
        {
          _index: 561,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.findcategories(page',
        {
          _index: 557,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.findone(id',
        {
          _index: 558,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.remove(id',
        {
          _index: 570,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.categoryservice.update(id',
        {
          _index: 569,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'this.findone(bookid',
        {
          _index: 485,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.findone(categoryid',
        {
          _index: 604,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.findone(id)).books',
        {
          _index: 620,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.findonename(category.name',
        {
          _index: 600,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'this.findoneusername(user.username',
        {
          _index: 1036,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.hashpassword(createuserdto.password',
        {
          _index: 1032,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.ismatchpassword(password',
        {
          _index: 223,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.jwtservice.sign(payload',
        {
          _index: 242,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.jwtservice.verify(token',
        {
          _index: 234,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.recordrepo',
        {
          _index: 905,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'this.recordrepo.findone',
        {
          _index: 908,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'this.recordrepo.save(record).catch',
        {
          _index: 902,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'this.recordrepo.update(id',
        {
          _index: 909,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'this.recordservice.create',
        {
          _index: 493,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.recordservice.findbusyone(userid',
        {
          _index: 498,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.recordservice.findone(id',
        {
          _index: 875,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'this.recordservice.findrecords(page',
        {
          _index: 874,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'this.recordservice.remove(id',
        {
          _index: 876,
          title: {},
          body: { 'controllers/RecordController.html': {} },
        },
      ],
      [
        'this.recordservice.update(record.id',
        {
          _index: 500,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.recursivelystripnullvalues(value',
        {
          _index: 740,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'this.reflector.getallandoverride(roles_key',
        { _index: 926, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'this.salt_rounds).catch((error',
        {
          _index: 1040,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo',
        {
          _index: 1045,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo.delete(id).catch',
        {
          _index: 1053,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo.findone',
        {
          _index: 1049,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo.findone(id).catch',
        {
          _index: 1048,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo.save(user).catch',
        {
          _index: 1037,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userrepo.update(id',
        {
          _index: 1050,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'this.userservice.findone(id',
        {
          _index: 995,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.findone(userid',
        {
          _index: 484,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'this.userservice.findonepayload(payload',
        {
          _index: 229,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.userservice.findoneusername(userdto.username',
        {
          _index: 232,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.userservice.findoneusername(username',
        {
          _index: 220,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.userservice.findusers(page',
        {
          _index: 991,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.register(createuserdto',
        {
          _index: 134,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.userservice.registergoogleuser(userdto',
        {
          _index: 233,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.userservice.remove(id',
        {
          _index: 1000,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.userservice.update(id',
        {
          _index: 999,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'this.validateuserjwt',
        {
          _index: 235,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'throw',
        {
          _index: 221,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/GoogleStrategy.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'timestamp',
        {
          _index: 720,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      [
        'todo',
        {
          _index: 135,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'classes/CreateUserDto.html': {},
          },
        },
      ],
      [
        'token',
        {
          _index: 212,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      ['tort', { _index: 1225, title: {}, body: { 'license.html': {} } }],
      [
        'total',
        {
          _index: 466,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'transformer',
        {
          _index: 306,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/BookPaginationParam.html': {},
            'classes/Category.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'true',
        {
          _index: 267,
          title: {},
          body: {
            'classes/Book.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'injectables/CategoryService.html': {},
            'classes/Record.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'true})@exclude',
        { _index: 965, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'true})@joincolumn({name',
        { _index: 844, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'true})@jointable({name',
        { _index: 504, title: {}, body: { 'classes/Category.html': {} } },
      ],
      [
        'tsconfig.json',
        { _index: 1149, title: {}, body: { 'index.html': {} } },
      ],
      [
        'type',
        {
          _index: 83,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'classes/BookPaginationParam.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/CategoryService.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'classes/IdParam.html': {},
            'injectables/JwtStrategy.html': {},
            'classes/LengthLimits.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/PaginationParam.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'typealiases',
        {
          _index: 1241,
          title: { 'miscellaneous/typealiases.html': {} },
          body: {},
        },
      ],
      [
        'typeof',
        {
          _index: 744,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      [
        'typeorm',
        {
          _index: 302,
          title: {},
          body: {
            'classes/Book.html': {},
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'classes/Category.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/Record.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'typeormmodule',
        {
          _index: 398,
          title: {},
          body: {
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'typeormmodule.forfeature([book',
        { _index: 402, title: {}, body: { 'modules/BookModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([category',
        { _index: 578, title: {}, body: { 'modules/CategoryModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([record',
        { _index: 882, title: {}, body: { 'modules/RecordModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([user',
        { _index: 1006, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'typeormmodule.forrootasync',
        { _index: 687, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'typeormmoduleoptions',
        { _index: 685, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'types',
        {
          _index: 783,
          title: {},
          body: {
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateBookDto.html': {},
            'classes/UpdateCategoryDto.html': {},
            'classes/UpdateRecordDto.html': {},
            'classes/UpdateUserDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'typescript',
        {
          _index: 149,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'unable',
        {
          _index: 480,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'unauthorizedexception',
        {
          _index: 215,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'unavailable',
        {
          _index: 476,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'undefined',
        {
          _index: 265,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'undefined})@exclude',
        { _index: 963, title: {}, body: { 'classes/User.html': {} } },
      ],
      [
        'unique',
        {
          _index: 518,
          title: {},
          body: { 'classes/Category.html': {}, 'classes/User.html': {} },
        },
      ],
      ['unit', { _index: 1156, title: {}, body: { 'index.html': {} } }],
      [
        'unknown',
        {
          _index: 700,
          title: {},
          body: {
            'classes/ExceptionsFilter.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
          },
        },
      ],
      [
        'update',
        {
          _index: 322,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'update(id',
        {
          _index: 343,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'update(request',
        {
          _index: 983,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'updatebookdto',
        {
          _index: 344,
          title: { 'classes/UpdateBookDto.html': {} },
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'classes/UpdateBookDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatebookdto).catch',
        {
          _index: 479,
          title: {},
          body: { 'injectables/BookService.html': {} },
        },
      ],
      [
        'updatecategorydto',
        {
          _index: 546,
          title: { 'classes/UpdateCategoryDto.html': {} },
          body: {
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'classes/UpdateCategoryDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatecategorydto).catch',
        {
          _index: 622,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      [
        'updated_at',
        {
          _index: 312,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        "updated_at'})@exclude",
        {
          _index: 293,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'updatedat',
        {
          _index: 262,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'updatedatecolumn',
        {
          _index: 299,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'updatedatecolumn({name',
        {
          _index: 292,
          title: {},
          body: {
            'classes/Book.html': {},
            'classes/Category.html': {},
            'classes/Record.html': {},
            'classes/User.html': {},
          },
        },
      ],
      [
        'updaterecorddto',
        {
          _index: 896,
          title: { 'classes/UpdateRecordDto.html': {} },
          body: {
            'injectables/RecordService.html': {},
            'classes/UpdateRecordDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updaterecorddto).catch',
        {
          _index: 910,
          title: {},
          body: { 'injectables/RecordService.html': {} },
        },
      ],
      [
        'updateresult',
        {
          _index: 352,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'updateuserdto',
        {
          _index: 948,
          title: { 'classes/UpdateUserDto.html': {} },
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateuserdto).catch',
        {
          _index: 1051,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'use',
        {
          _index: 136,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'license.html': {} },
        },
      ],
      [
        'useclass',
        { _index: 66, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'usefactory',
        { _index: 688, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'useguards',
        {
          _index: 107,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'useguards(googleauthguard',
        {
          _index: 143,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "useguards(googleauthguard)@get('google",
        {
          _index: 92,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "useguards(googleauthguard)@get('google/redirect",
        {
          _index: 96,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'useguards(jwtauthguard',
        {
          _index: 127,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
            'controllers/RecordController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'useguards(jwtauthguard)@get()@httpcode(200',
        {
          _index: 79,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "useguards(jwtauthguard)@patch(':id/borrow')@httpcode(200",
        {
          _index: 324,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        "useguards(jwtauthguard)@patch(':id/return')@httpcode(200",
        {
          _index: 341,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        "useguards(jwtauthguard)@roles(role.admin)@delete(':id')@httpcode(204",
        {
          _index: 338,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
          },
        },
      ],
      [
        "useguards(jwtauthguard)@roles(role.admin)@patch(':id')@httpcode(200",
        {
          _index: 547,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "useguards(jwtauthguard)@roles(role.admin)@patch(':id/book')@httpcode(200",
        {
          _index: 534,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        "useguards(jwtauthguard)@roles(role.admin)@post(':id/book')@httpcode(201",
        {
          _index: 531,
          title: {},
          body: { 'controllers/CategoryController.html': {} },
        },
      ],
      [
        'useguards(jwtauthguard)@roles(role.admin)@post()@httpcode(201',
        {
          _index: 328,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'controllers/CategoryController.html': {},
          },
        },
      ],
      [
        "useguards(jwtauthguard)@roles(role.admin)@put(':id')@httpcode(200",
        {
          _index: 345,
          title: {},
          body: { 'controllers/BookController.html': {} },
        },
      ],
      [
        'useguards(localauthguard',
        {
          _index: 139,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "useguards(localauthguard)@post('signin')@httpcode(200",
        {
          _index: 88,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'user',
        {
          _index: 86,
          title: { 'classes/User.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'classes/CreateRecordDto.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/Record.html': {},
            'guards/RolesGuard.html': {},
            'classes/User.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        "user's",
        {
          _index: 1052,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'user.controller',
        { _index: 1005, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'user.dto',
        {
          _index: 110,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'user.dto.ts',
        {
          _index: 663,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/GoogleUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'user.dto.ts:15',
        { _index: 674, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:24',
        { _index: 672, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:29',
        { _index: 667, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:34',
        { _index: 669, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.dto.ts:38',
        { _index: 668, title: {}, body: { 'classes/CreateUserDto.html': {} } },
      ],
      [
        'user.entity',
        {
          _index: 988,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'user.id',
        {
          _index: 239,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.isadmin',
        { _index: 932, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'user.key_map.foreach((key',
        {
          _index: 1033,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'user.passwordhash',
        {
          _index: 224,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'user.records',
        { _index: 860, title: {}, body: { 'classes/Record.html': {} } },
      ],
      [
        'user.service',
        {
          _index: 989,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'user.username',
        {
          _index: 240,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user/dto/create',
        {
          _index: 109,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'user/dto/google',
        {
          _index: 217,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
          },
        },
      ],
      [
        'user/user.entity',
        {
          _index: 111,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'modules/CategoryModule.html': {},
            'classes/CreateRecordDto.html': {},
            'injectables/GoogleStrategy.html': {},
            'interfaces/IRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/Record.html': {},
          },
        },
      ],
      [
        'user/user.module',
        {
          _index: 59,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
          },
        },
      ],
      [
        'user/user.service',
        {
          _index: 113,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
          },
        },
      ],
      [
        'user[key',
        {
          _index: 1034,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'usercontroller',
        {
          _index: 972,
          title: { 'controllers/UserController.html': {} },
          body: {
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userdto',
        {
          _index: 202,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/GoogleStrategy.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'userid',
        {
          _index: 444,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'interfaces/IRequest.html': {},
            'injectables/RecordService.html': {},
          },
        },
      ],
      [
        'usermodule',
        {
          _index: 41,
          title: { 'modules/UserModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'username',
        {
          _index: 209,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/GoogleStrategy.html': {},
            'classes/GoogleUserDto.html': {},
            'interfaces/IRequest.html': {},
            'injectables/LocalStrategy.html': {},
            'classes/SignedInUserDto.html': {},
            'classes/User.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'userpagination',
        {
          _index: 987,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'userpaginationparam',
        {
          _index: 435,
          title: { 'classes/UserPaginationParam.html': {} },
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'controllers/UserController.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userpaginationparam.default_limit',
        {
          _index: 1043,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'userpaginationparam.default_page',
        {
          _index: 1042,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'userrepo',
        {
          _index: 1014,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'users',
        {
          _index: 1044,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'users.length',
        {
          _index: 1046,
          title: {},
          body: { 'injectables/UserService.html': {} },
        },
      ],
      [
        'userservice',
        {
          _index: 112,
          title: { 'injectables/UserService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'modules/BookModule.html': {},
            'injectables/BookService.html': {},
            'modules/CategoryModule.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'utils/exception',
        { _index: 61, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'utils/pagination/pagination.param',
        {
          _index: 359,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      [
        'utils/pagination/pagination.type',
        {
          _index: 361,
          title: {},
          body: {
            'controllers/BookController.html': {},
            'injectables/BookService.html': {},
            'controllers/CategoryController.html': {},
            'injectables/CategoryService.html': {},
            'controllers/RecordController.html': {},
            'injectables/RecordService.html': {},
            'controllers/UserController.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['v', { _index: 1167, title: {}, body: { 'license.html': {} } }],
      [
        'validate',
        {
          _index: 753,
          title: {},
          body: {
            'injectables/GoogleStrategy.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/LocalStrategy.html': {},
          },
        },
      ],
      [
        'validate(accesstoken',
        {
          _index: 756,
          title: {},
          body: { 'injectables/GoogleStrategy.html': {} },
        },
      ],
      [
        'validate(payload',
        {
          _index: 798,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'validate(username',
        {
          _index: 830,
          title: {},
          body: { 'injectables/LocalStrategy.html': {} },
        },
      ],
      [
        'validateusergoogle',
        {
          _index: 183,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateusergoogle(userdto',
        {
          _index: 199,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateuserjwt',
        {
          _index: 184,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateuserjwt(payload',
        {
          _index: 203,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateuserlocal',
        {
          _index: 185,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validateuserlocal(username',
        {
          _index: 206,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'validator',
        {
          _index: 429,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'classes/CreateBookDto.html': {},
            'classes/CreateCategoryDto.html': {},
            'classes/CreateRecordDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/IdParam.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'injectables/RecordService.html': {},
            'classes/UserPaginationParam.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'value',
        {
          _index: 412,
          title: {},
          body: {
            'classes/BookPaginationParam.html': {},
            'classes/CategoryPaginationParam.html': {},
            'injectables/ExcludeNullInterceptor.html': {},
            'classes/LengthLimits.html': {},
            'classes/PaginationParam.html': {},
            'classes/RecordPaginationParam.html': {},
            'classes/User.html': {},
            'classes/UserPaginationParam.html': {},
            'injectables/UserService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'value.map(this.recursivelystripnullvalues',
        {
          _index: 742,
          title: {},
          body: { 'injectables/ExcludeNullInterceptor.html': {} },
        },
      ],
      ['variable', { _index: 1069, title: {}, body: { 'coverage.html': {} } }],
      [
        'variables',
        {
          _index: 1248,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'verifytokenjwt',
        {
          _index: 186,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'verifytokenjwt(token',
        {
          _index: 210,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'void',
        {
          _index: 705,
          title: {},
          body: { 'classes/ExceptionsFilter.html': {} },
        },
      ],
      ['warranties', { _index: 1209, title: {}, body: { 'license.html': {} } }],
      ['warranty', { _index: 1205, title: {}, body: { 'license.html': {} } }],
      ['watch', { _index: 1138, title: {}, body: { 'index.html': {} } }],
      [
        "where('category.id",
        {
          _index: 609,
          title: {},
          body: { 'injectables/CategoryService.html': {} },
        },
      ],
      ['whether', { _index: 1222, title: {}, body: { 'license.html': {} } }],
      ['without', { _index: 1180, title: {}, body: { 'license.html': {} } }],
      [
        'world',
        {
          _index: 21,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'wrong',
        {
          _index: 225,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['yarn', { _index: 1121, title: {}, body: { 'index.html': {} } }],
      [
        'yes',
        {
          _index: 448,
          title: {},
          body: {
            'injectables/BookService.html': {},
            'injectables/CategoryService.html': {},
            'injectables/RecordService.html': {},
            'injectables/UserService.html': {},
          },
        },
      ],
      ['yourself', { _index: 1133, title: {}, body: { 'index.html': {} } }],
      [
        'zoom',
        {
          _index: 42,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/BookModule.html': {},
            'modules/CategoryModule.html': {},
            'modules/RecordModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'controllers/AppController.html': {
      url: 'controllers/AppController.html',
      title: 'controller - AppController',
      body:
        '\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \nhello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \'@nestjs/common\';\n\n@Controller()\nexport class AppController {\n  @Get()\n  hello(): string {\n    return \'Hello World!\';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRecordModule\n\nRecordModule\n\nAppModule -->\n\nRecordModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RecordModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER, APP_GUARD } from '@nestjs/core/constants';\nimport { AuthModule } from '../auth/auth.module';\nimport { BookModule } from '../book/book.module';\nimport { CategoryModule } from '../category/category.module';\nimport { DatabaseModule } from '../database/database.module';\nimport { RecordModule } from '../record/record.module';\nimport { RolesGuard } from '../role/role.guard';\nimport { UserModule } from '../user/user.module';\nimport { ExceptionsFilter } from '../utils/exception-filter/exception.filter';\nimport { AppController } from './app.controller';\n\n@Module({\n  controllers: [AppController],\n  imports: [\n    AuthModule,\n    BookModule,\n    CategoryModule,\n    ConfigModule.forRoot(),\n    DatabaseModule,\n    RecordModule,\n    UserModule,\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: ExceptionsFilter,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/AuthController.html': {
      url: 'controllers/AuthController.html',
      title: 'controller - AuthController',
      body:
        "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                loginGoogle\n                            \n                            \n                                loginGoogleRedirect\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(request: IRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(request: IRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('signin')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AccessToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginGoogle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginGoogle(_request: IRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GoogleAuthGuard)@Get('google')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginGoogleRedirect\n                        \n                        \n                    \n                \n            \n            \n                \nloginGoogleRedirect(request: IRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GoogleAuthGuard)@Get('google/redirect')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AccessToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, Post, Req } from '@nestjs/common';\nimport { UseGuards } from '@nestjs/common/decorators';\nimport { CreateUserDto } from '../user/dto/create-user.dto';\nimport { User } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { AccessToken, IRequest } from './auth.type';\nimport { GoogleAuthGuard } from './guard/google.guard';\nimport { JwtAuthGuard } from './guard/jwt.guard';\nimport { LocalAuthGuard } from './guard/local.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  @HttpCode(200)\n  getProfile(@Req() request: IRequest): User {\n    return request.user;\n  }\n\n  @Post('signup')\n  @HttpCode(201)\n  async register(@Body() createUserDto: CreateUserDto): Promise {\n    return this.userService.register(createUserDto);\n  }\n\n  // Todo: use function instead\n  @UseGuards(LocalAuthGuard)\n  @Post('signin')\n  @HttpCode(200)\n  login(@Req() request: IRequest): AccessToken {\n    return this.authService.login(request.user);\n  }\n\n  @UseGuards(GoogleAuthGuard)\n  @Get('google')\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async loginGoogle(@Req() _request: IRequest) {}\n\n  @UseGuards(GoogleAuthGuard)\n  @Get('google/redirect')\n  loginGoogleRedirect(@Req() request: IRequest): AccessToken {\n    return this.authService.login(request.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AuthModule.html': {
      url: 'modules/AuthModule.html',
      title: 'module - AuthModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { GoogleStrategy } from './strategy/google.strategy';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n  controllers: [AuthController],\n  exports: [AuthService, AuthModule],\n  imports: [\n    ConfigModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: process.env.JWT_EXPIRATION },\n    }),\n    PassportModule,\n    UserModule,\n  ],\n  providers: [\n    AuthService,\n    ConfigService,\n    GoogleStrategy,\n    JwtStrategy,\n    LocalStrategy,\n    UserService,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthService.html': {
      url: 'injectables/AuthService.html',
      title: 'injectable - AuthService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCookieWithJwtToken\n                            \n                            \n                                isMatchPassword\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                validateUserGoogle\n                            \n                            \n                                    Async\n                                validateUserJwt\n                            \n                            \n                                    Async\n                                validateUserLocal\n                            \n                            \n                                    Async\n                                verifyTokenJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCookieWithJwtToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetCookieWithJwtToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \nisMatchPassword(plainPassword: string, hashPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AccessToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserGoogle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserGoogle(userDto: GoogleUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                GoogleUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserJwt(payload: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserLocal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserLocal(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyTokenJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyTokenJwt(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { GoogleUserDto } from '../user/dto/google-user.dto';\nimport { User } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { AccessToken, Payload } from './auth.type';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly userService: UserService,\n  ) {}\n\n  async validateUserLocal(username: string, password: string): Promise {\n    const user = await this.userService.findOneUsername(username);\n    if (!user) throw new UnauthorizedException();\n    if (!this.isMatchPassword(password, user.passwordHash))\n      throw new HttpException(\n        'Wrong credentials provided',\n        HttpStatus.BAD_REQUEST,\n      );\n    return user;\n  }\n\n  async validateUserJwt(payload: Payload): Promise {\n    const user = await this.userService.findOnePayload(payload);\n    if (!user)\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    return user;\n  }\n\n  async validateUserGoogle(userDto: GoogleUserDto): Promise {\n    let user = await this.userService.findOneUsername(userDto.username);\n    if (!user) user = await this.userService.registerGoogleUser(userDto);\n    return user;\n  }\n\n  async verifyTokenJwt(token: string): Promise {\n    const payload = (await this.jwtService.verify(token)) as Payload;\n    return this.validateUserJwt({\n      sub: payload.sub,\n      username: payload.username,\n    });\n  }\n\n  login(user: User): AccessToken {\n    const payload: Payload = { sub: user.id, username: user.username };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  getCookieWithJwtToken(user: User): string {\n    const payload: Payload = { sub: user.id, username: user.username };\n    const token = this.jwtService.sign(payload);\n    return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.configService.get(\n      'JWT_EXPIRATION_TIME',\n    )}`;\n  }\n\n  isMatchPassword(plainPassword: string, hashPassword: string): boolean {\n    return bcrypt.compareSync(plainPassword, hashPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Book.html': {
      url: 'classes/Book.html',
      title: 'class - Book',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                categories\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isArchived\n                            \n                            \n                                isBusy\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                records\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, name: 'is_archived'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, name: 'is_busy'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            records\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/book.entity.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import LengthLimits from '../common/constants/length';\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToMany,\n  OneToMany,\n} from 'typeorm';\nimport { Category } from '../category/category.entity';\nimport { Record } from '../record/record.entity';\nimport { Exclude } from 'class-transformer';\n\n@Entity()\nexport class Book {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: LengthLimits.SMALL_MAX_LENGTH })\n  name: string;\n\n  @Column({ nullable: true, length: LengthLimits.BIG_MAX_LENGTH })\n  description: string;\n\n  @Column()\n  price: number;\n\n  @Column({ default: false, name: 'is_busy' })\n  isBusy: boolean;\n\n  @Column({ default: false, name: 'is_archived' })\n  @Exclude()\n  isArchived: boolean;\n\n  @CreateDateColumn({ name: 'created_at' })\n  @Exclude()\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  @Exclude()\n  updatedAt: Date;\n\n  @ManyToMany(() => Category, (category) => category.books, {\n    nullable: true,\n  })\n  categories?: Category[];\n\n  @OneToMany(() => Record, (record) => record.book, { nullable: true })\n  records: Record[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/BookController.html': {
      url: 'controllers/BookController.html',
      title: 'controller - BookController',
      body:
        "\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                book\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                borrow\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findBooks\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                return\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            borrow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    borrow(request: IRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id/borrow')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Post()@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBooks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBooks(undefined: BookPaginationParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                BookPaginationParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Delete(':id')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            return\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    return(request: IRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id/return')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Put(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UpdateResult } from 'typeorm';\nimport { IRequest } from '../auth/auth.type';\nimport { JwtAuthGuard } from '../auth/guard/jwt.guard';\nimport { Roles } from '../role/role.decorator';\nimport { Role } from '../role/role.enum';\nimport { BookPaginationParam } from '../utils/pagination/pagination.param';\nimport { BookPagination } from '../utils/pagination/pagination.type';\nimport { Book } from './book.entity';\nimport { BookService } from './book.service';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\n\n@Controller('book')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Post()\n  @HttpCode(201)\n  async create(@Body() createBookDto: CreateBookDto): Promise {\n    return this.bookService.create(createBookDto);\n  }\n\n  @Get()\n  @HttpCode(200)\n  async findBooks(\n    @Query() { page, limit }: BookPaginationParam,\n  ): Promise {\n    return this.bookService.findBooks(page, limit);\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  async findOne(@Param('id') id: number): Promise {\n    const book = await this.bookService.findOne(id);\n    if (!book)\n      throw new HttpException(\n        'Book with this id does not exist',\n        HttpStatus.NOT_FOUND,\n      );\n    return book;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Put(':id')\n  @HttpCode(200)\n  async update(\n    @Param('id') id: number,\n    @Body() updateBookDto: UpdateBookDto,\n  ): Promise {\n    return this.bookService.update(id, updateBookDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Delete(':id')\n  @HttpCode(204)\n  async remove(@Param('id') id: number): Promise {\n    return this.bookService.remove(id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id/borrow')\n  @HttpCode(200)\n  async borrow(\n    @Req() request: IRequest,\n    @Param('id') id: number,\n  ): Promise {\n    const book = await this.bookService.borrow(request.user.id, id);\n    if (!book)\n      throw new HttpException(\n        'Book with this id does not exist',\n        HttpStatus.NOT_FOUND,\n      );\n    return book;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id/return')\n  @HttpCode(200)\n  async return(\n    @Req() request: IRequest,\n    @Param('id') id: number,\n  ): Promise {\n    const book = await this.bookService.return(request.user.id, id);\n    if (!book)\n      throw new HttpException(\n        'Book with this id does not exist',\n        HttpStatus.NOT_FOUND,\n      );\n    return book;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/BookModule.html': {
      url: 'modules/BookModule.html',
      title: 'module - BookModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_BookModule_imports\n\n\n\ncluster_BookModule_exports\n\n\n\n\nRecordModule\n\nRecordModule\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nRecordModule->BookModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nBookModule -->\n\nUserModule->BookModule\n\n\n\n\n\nBookModule \n\nBookModule \n\nBookModule  -->\n\nBookModule->BookModule \n\n\n\n\n\nBookService \n\nBookService \n\nBookService  -->\n\nBookModule->BookService \n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nRecordService\n\nRecordService\n\nBookModule -->\n\nRecordService->BookModule\n\n\n\n\n\nUserService\n\nUserService\n\nBookModule -->\n\nUserService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            RecordService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RecordModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BookModule\n                        \n                        \n                            BookService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RecordModule } from '../record/record.module';\nimport { RecordService } from '../record/record.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\nimport { BookController } from './book.controller';\nimport { Book } from './book.entity';\nimport { BookService } from './book.service';\n\n@Module({\n  controllers: [BookController],\n  exports: [BookService, BookModule, TypeOrmModule],\n  imports: [TypeOrmModule.forFeature([Book]), RecordModule, UserModule],\n  providers: [BookService, RecordService, UserService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/BookPaginationParam.html': {
      url: 'classes/BookPaginationParam.html',
      title: 'class - BookPaginationParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookPaginationParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/pagination.param.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                DEFAULT_LIMIT\n                            \n                            \n                                    Static\n                                DEFAULT_PAGE\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Static\n                                MAX_LIMIT\n                            \n                            \n                                    Static\n                                MIN_LIMIT\n                            \n                            \n                                    Static\n                                MIN_PAGE\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_LIMIT)@Max(PaginationParam.MAX_LIMIT)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_PAGE)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, Max } from \'class-validator\';\nimport { Type } from \'class-transformer\';\n\nclass PaginationParam {\n  static DEFAULT_PAGE = 1;\n  static DEFAULT_LIMIT = 5;\n\n  static MIN_PAGE = 1;\n\n  static MIN_LIMIT = 1;\n  static MAX_LIMIT = 10;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_PAGE)\n  page?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_LIMIT)\n  @Max(PaginationParam.MAX_LIMIT)\n  limit?: number;\n}\n\nexport class BookPaginationParam extends PaginationParam {}\nexport class CategoryPaginationParam extends PaginationParam {}\nexport class RecordPaginationParam extends PaginationParam {}\nexport class UserPaginationParam extends PaginationParam {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/BookService.html': {
      url: 'injectables/BookService.html',
      title: 'injectable - BookService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                borrow\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findBooks\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                return\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRepo: Repository, recordService: RecordService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recordService\n                                                  \n                                                        \n                                                                        RecordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            borrow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    borrow(userId: number, bookId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBooks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBooks(page?: number, limit?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            return\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    return(userId: number, bookId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { RecordService } from '../record/record.service';\nimport { UserService } from '../user/user.service';\nimport { BookPaginationParam } from '../utils/pagination/pagination.param';\nimport { BookPagination } from '../utils/pagination/pagination.type';\nimport { Book } from './book.entity';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\n\n@Injectable()\nexport class BookService {\n  constructor(\n    @InjectRepository(Book)\n    private readonly bookRepo: Repository,\n\n    private readonly recordService: RecordService,\n    private readonly userService: UserService,\n  ) {}\n\n  async create(createBookDto: CreateBookDto): Promise {\n    const book = new Book();\n    Object.assign(book, createBookDto);\n\n    return this.bookRepo.save(book).catch(() => {\n      throw new HttpException('Unable to add new book', HttpStatus.BAD_REQUEST);\n    });\n  }\n\n  async findBooks(page?: number, limit?: number): Promise {\n    const currentPage = page || BookPaginationParam.DEFAULT_PAGE;\n    const take = limit || BookPaginationParam.DEFAULT_LIMIT;\n    const skip = (currentPage - 1) * take;\n\n    const [books, total] = await this.bookRepo\n      .findAndCount({\n        order: {\n          id: 'ASC',\n        },\n        where: {\n          isArchived: false,\n        },\n        take: take,\n        skip: skip,\n      })\n      .catch(() => {\n        throw new HttpException('Unable to find books', HttpStatus.BAD_REQUEST);\n      });\n\n    if (!books || books.length === 0)\n      throw new HttpException('Books unavailable', HttpStatus.NOT_FOUND);\n\n    return {\n      total: total,\n      page: currentPage,\n      count: books.length,\n      books: books,\n    };\n  }\n\n  async findOne(id: number): Promise {\n    return this.bookRepo\n      .findOne({\n        id: id,\n        isArchived: false,\n      })\n      .catch(() => {\n        throw new HttpException('Unable to find book', HttpStatus.BAD_REQUEST);\n      });\n  }\n\n  async update(\n    id: number,\n    updateBookDto: UpdateBookDto,\n  ): Promise {\n    return this.bookRepo.update(id, updateBookDto).catch(() => {\n      throw new HttpException(\n        \"Unable to update this book's information\",\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async remove(id: number): Promise {\n    return this.bookRepo.update(id, { isArchived: true }).catch(() => {\n      throw new HttpException('Unable to delete book', HttpStatus.BAD_REQUEST);\n    });\n  }\n\n  async borrow(userId: number, bookId: number): Promise {\n    const [user, book] = await Promise.all([\n      this.userService.findOne(userId),\n      this.findOne(bookId),\n    ]);\n\n    if (!user || !book)\n      throw new HttpException('Wrong user or book', HttpStatus.BAD_REQUEST);\n\n    if (book.isBusy)\n      throw new HttpException(\n        'Book is unavailable for now',\n        HttpStatus.NOT_ACCEPTABLE,\n      );\n\n    book.isBusy = true;\n    const [borrowedBook, _record] = await Promise.all([\n      this.bookRepo.save(book),\n      this.recordService.create({\n        borrower: user,\n        book: book,\n        borrowedAt: new Date(Date.now()),\n      }),\n    ]);\n\n    return borrowedBook;\n  }\n\n  async return(userId: number, bookId: number): Promise {\n    const [user, book] = await Promise.all([\n      this.userService.findOne(userId),\n      this.findOne(bookId),\n    ]);\n\n    if (!user || !book)\n      throw new HttpException('Wrong user or book', HttpStatus.BAD_REQUEST);\n\n    if (!book.isBusy)\n      throw new HttpException('Not your book...', HttpStatus.NOT_ACCEPTABLE);\n\n    const record = await this.recordService.findBusyOne(userId, bookId);\n    if (!record)\n      throw new HttpException('Unable to return book', HttpStatus.CONFLICT);\n\n    book.isBusy = false;\n    const [borrowedBook, _record] = await Promise.all([\n      this.bookRepo.save(book),\n      this.recordService.update(record.id, {\n        returnedAt: new Date(Date.now()),\n      }),\n    ]);\n\n    return borrowedBook;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Category.html': {
      url: 'classes/Category.html',
      title: 'class - Category',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                books\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isArchived\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            books\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Book[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined, {nullable: true, eager: true})@JoinTable({name: 'category_books', joinColumn: undefined, inverseJoinColumn: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, name: 'is_archived'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/category.entity.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import LengthLimits from '../common/constants/length';\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToMany,\n  JoinTable,\n} from 'typeorm';\nimport { Book } from '../book/book.entity';\nimport { Exclude } from 'class-transformer';\n\n@Entity()\nexport class Category {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true, length: LengthLimits.SMALL_MAX_LENGTH })\n  name: string;\n\n  @Column({ nullable: true, length: LengthLimits.BIG_MAX_LENGTH })\n  description: string;\n\n  @Column({ default: false, name: 'is_archived' })\n  @Exclude()\n  isArchived: boolean;\n\n  @CreateDateColumn({ name: 'created_at' })\n  @Exclude()\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  @Exclude()\n  updatedAt: Date;\n\n  @ManyToMany(() => Book, (book) => book.categories, {\n    nullable: true,\n    eager: true,\n  })\n  @JoinTable({\n    name: 'category_books',\n    joinColumn: {\n      name: 'category_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'book_id',\n      referencedColumnName: 'id',\n    },\n  })\n  books?: Book[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/CategoryController.html': {
      url: 'controllers/CategoryController.html',
      title: 'controller - CategoryController',
      body:
        "\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                category\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewBookToCategory\n                            \n                            \n                                    Async\n                                addOldBookToCategory\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findBooksOfOne\n                            \n                            \n                                    Async\n                                findCategories\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewBookToCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewBookToCategory(id: number, bookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Post(':id/book')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addOldBookToCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOldBookToCategory(id: number, bookId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Patch(':id/book')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Post()@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBooksOfOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBooksOfOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/book')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCategories(undefined: CategoryPaginationParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CategoryPaginationParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Delete(':id')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Roles(Role.ADMIN)@Patch(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body, Controller,\n\n\n\n\n\n  Delete, Get,\n\n\n\n\n\n  HttpCode,\n\n  HttpException,\n  HttpStatus, Param, Patch, Post,\n\n\n\n\n\n  Query,\n\n\n  UseGuards\n} from '@nestjs/common';\nimport { UpdateResult } from 'typeorm';\nimport { JwtAuthGuard } from '../auth/guard/jwt.guard';\nimport { Book } from '../book/book.entity';\nimport { CreateBookDto } from '../book/dto/create-book.dto';\nimport { Roles } from '../role/role.decorator';\nimport { Role } from '../role/role.enum';\nimport { CategoryPaginationParam } from '../utils/pagination/pagination.param';\nimport { CategoryPagination } from '../utils/pagination/pagination.type';\nimport { Category } from './category.entity';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\n\n@Controller('category')\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Post()\n  @HttpCode(201)\n  async create(\n    @Body() createCategoryDto: CreateCategoryDto,\n  ): Promise {\n    return this.categoryService.create(createCategoryDto);\n  }\n\n  @Get()\n  @HttpCode(200)\n  async findCategories(\n    @Query() { page, limit }: CategoryPaginationParam,\n  ): Promise {\n    return this.categoryService.findCategories(page, limit);\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  async findOne(@Param('id') id: number): Promise {\n    const category = await this.categoryService.findOne(id);\n    if (!category)\n      throw new HttpException(\n        'Category with this id does not exist',\n        HttpStatus.NOT_FOUND,\n      );\n    return category;\n  }\n\n  @Get(':id/book')\n  @HttpCode(200)\n  async findBooksOfOne(@Param('id') id: number): Promise {\n    const books = await this.categoryService.findBooksOfOne(id);\n    if (!books.length)\n      throw new HttpException(\n        'Category does not contain any books',\n        HttpStatus.NOT_FOUND,\n      );\n    return books;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Post(':id/book')\n  @HttpCode(201)\n  async addNewBookToCategory(\n    @Param('id') id: number,\n    @Body() bookDto: CreateBookDto,\n  ): Promise {\n    return this.categoryService.addNewBookToCategory(id, bookDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Patch(':id/book')\n  @HttpCode(200)\n  async addOldBookToCategory(\n    @Param('id') id: number,\n    @Body('bookId') bookId: number,\n  ): Promise {\n    return this.categoryService.addOldBookToCategory(id, bookId);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Patch(':id')\n  @HttpCode(200)\n  async update(\n    @Param('id') id: number,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ): Promise {\n    return this.categoryService.update(id, updateCategoryDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.ADMIN)\n  @Delete(':id')\n  @HttpCode(204)\n  async remove(@Param('id') id: number): Promise {\n    return this.categoryService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/CategoryModule.html': {
      url: 'modules/CategoryModule.html',
      title: 'module - CategoryModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_CategoryModule_imports\n\n\n\n\nBookModule\n\nBookModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nBookModule->CategoryModule\n\n\n\n\n\nCategoryModule \n\nCategoryModule \n\nCategoryModule  -->\n\nCategoryModule->CategoryModule \n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nBookService\n\nBookService\n\nCategoryModule -->\n\nBookService->CategoryModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nRecordService\n\nRecordService\n\nCategoryModule -->\n\nRecordService->CategoryModule\n\n\n\n\n\nUserService\n\nUserService\n\nCategoryModule -->\n\nUserService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/category/category.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            RecordService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryModule\n                        \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BookModule } from '../book/book.module';\nimport { BookService } from '../book/book.service';\nimport { Record } from '../record/record.entity';\nimport { RecordService } from '../record/record.service';\nimport { User } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { CategoryController } from './category.controller';\nimport { Category } from './category.entity';\nimport { CategoryService } from './category.service';\n\n@Module({\n  controllers: [CategoryController],\n  exports: [CategoryService, CategoryModule, TypeOrmModule],\n  imports: [TypeOrmModule.forFeature([Category, Record, User]), BookModule],\n  providers: [BookService, CategoryService, RecordService, UserService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CategoryPaginationParam.html': {
      url: 'classes/CategoryPaginationParam.html',
      title: 'class - CategoryPaginationParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryPaginationParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/pagination.param.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                DEFAULT_LIMIT\n                            \n                            \n                                    Static\n                                DEFAULT_PAGE\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Static\n                                MAX_LIMIT\n                            \n                            \n                                    Static\n                                MIN_LIMIT\n                            \n                            \n                                    Static\n                                MIN_PAGE\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_LIMIT)@Max(PaginationParam.MAX_LIMIT)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_PAGE)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, Max } from \'class-validator\';\nimport { Type } from \'class-transformer\';\n\nclass PaginationParam {\n  static DEFAULT_PAGE = 1;\n  static DEFAULT_LIMIT = 5;\n\n  static MIN_PAGE = 1;\n\n  static MIN_LIMIT = 1;\n  static MAX_LIMIT = 10;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_PAGE)\n  page?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_LIMIT)\n  @Max(PaginationParam.MAX_LIMIT)\n  limit?: number;\n}\n\nexport class BookPaginationParam extends PaginationParam {}\nexport class CategoryPaginationParam extends PaginationParam {}\nexport class RecordPaginationParam extends PaginationParam {}\nexport class UserPaginationParam extends PaginationParam {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/CategoryService.html': {
      url: 'injectables/CategoryService.html',
      title: 'injectable - CategoryService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewBookToCategory\n                            \n                            \n                                    Async\n                                addOldBookToCategory\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findBooksOfOne\n                            \n                            \n                                    Async\n                                findCategories\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneName\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepo: Repository, bookService: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/category/category.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewBookToCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewBookToCategory(categoryId: number, bookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addOldBookToCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOldBookToCategory(categoryId: number, bookId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBooksOfOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBooksOfOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCategories(page?: number, limit?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Book } from '../book/book.entity';\nimport { BookService } from '../book/book.service';\nimport { CreateBookDto } from '../book/dto/create-book.dto';\nimport { CategoryPaginationParam } from '../utils/pagination/pagination.param';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { Category } from './category.entity';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { CategoryPagination } from '../utils/pagination/pagination.type';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(Category)\n    private readonly categoryRepo: Repository,\n\n    private readonly bookService: BookService,\n  ) {}\n\n  async create(createCategoryDto: CreateCategoryDto): Promise {\n    const category = new Category();\n    Object.assign(category, createCategoryDto);\n\n    if (await this.findOneName(category.name))\n      throw new HttpException(\n        'Already existed category name',\n        HttpStatus.BAD_REQUEST,\n      );\n\n    return this.categoryRepo.save(category).catch(() => {\n      throw new HttpException(\n        'Unable to add new category',\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async addOldBookToCategory(\n    categoryId: number,\n    bookId: number,\n  ): Promise {\n    const [category, book] = await Promise.all([\n      this.findOne(categoryId),\n      this.bookService.findOne(bookId),\n    ]);\n\n    if (!category || !book)\n      throw new HttpException('Wrong category or book', HttpStatus.BAD_REQUEST);\n\n    if (\n      await this.categoryRepo\n        .createQueryBuilder('category')\n        .leftJoinAndSelect('category.books', 'books')\n        .where('category.id = :categoryId', { categoryId: categoryId })\n        .andWhere('books.id = :bookId', { bookId: bookId })\n        .getOne()\n        .catch(() => {\n          throw new HttpException(\n            'Unable to find book',\n            HttpStatus.BAD_REQUEST,\n          );\n        })\n    )\n      throw new HttpException(\n        'Category already has this book',\n        HttpStatus.CONFLICT,\n      );\n\n    category.books.push(book);\n    await this.categoryRepo.save(category);\n    return category;\n  }\n\n  async addNewBookToCategory(\n    categoryId: number,\n    bookDto: CreateBookDto,\n  ): Promise {\n    const category = await this.findOne(categoryId);\n    const book = await this.bookService.create(bookDto);\n    category.books.push(book);\n    await this.categoryRepo.save(category);\n    return category;\n  }\n\n  async findCategories(\n    page?: number,\n    limit?: number,\n  ): Promise {\n    const currentPage = page || CategoryPaginationParam.DEFAULT_PAGE;\n    const take = limit || CategoryPaginationParam.DEFAULT_LIMIT;\n    const skip = (currentPage - 1) * take;\n\n    const [categories, total] = await this.categoryRepo\n      .findAndCount({\n        order: {\n          id: 'ASC',\n        },\n        where: {\n          isArchived: false,\n        },\n        take: take,\n        skip: skip,\n      })\n      .catch(() => {\n        throw new HttpException(\n          'Unable to find categories',\n          HttpStatus.BAD_REQUEST,\n        );\n      });\n\n    if (!categories || categories.length === 0)\n      throw new HttpException('Categories unavailable', HttpStatus.NOT_FOUND);\n\n    return {\n      total: total,\n      page: currentPage,\n      count: categories.length,\n      categories: categories,\n    };\n  }\n\n  async findOne(id: number): Promise {\n    return this.categoryRepo\n      .findOne(\n        {\n          id: id,\n          isArchived: false,\n        },\n        { relations: ['books'] },\n      )\n      .catch(() => {\n        throw new HttpException(\n          'Unable to find category',\n          HttpStatus.BAD_REQUEST,\n        );\n      });\n  }\n\n  async findOneName(name: string): Promise {\n    return this.categoryRepo\n      .findOne({ name: name, isArchived: false })\n      .catch(() => {\n        throw new HttpException(\n          'Unable to find category',\n          HttpStatus.BAD_REQUEST,\n        );\n      });\n  }\n\n  async findBooksOfOne(id: number): Promise {\n    return (await this.findOne(id)).books;\n  }\n\n  async update(\n    id: number,\n    updateCategoryDto: UpdateCategoryDto,\n  ): Promise {\n    return this.categoryRepo.update(id, updateCategoryDto).catch(() => {\n      throw new HttpException(\n        \"Unable to update this category's information\",\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async remove(id: number): Promise {\n    return this.categoryRepo.update(id, { isArchived: true }).catch(() => {\n      throw new HttpException(\n        'Unable to delete category',\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateBookDto.html': {
      url: 'classes/CreateBookDto.html',
      title: 'class - CreateBookDto',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                isArchived\n                            \n                            \n                                    Optional\n                                isBusy\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@MaxLength(LengthLimits.BIG_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/dto/create-book.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/dto/create-book.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/dto/create-book.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/dto/create-book.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/book/dto/create-book.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n  Min\n} from \'class-validator\';\nimport LengthLimits from \'../../common/constants/length\';\n\nexport class CreateBookDto {\n  @IsString()\n  @IsNotEmpty()\n  @Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n  name: string;\n\n  @IsString()\n  @IsOptional()\n  @MaxLength(LengthLimits.BIG_MAX_LENGTH)\n  description?: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  @Min(1)\n  price: number;\n\n  @IsBoolean()\n  @IsOptional()\n  isBusy?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  isArchived?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateCategoryDto.html': {
      url: 'classes/CreateCategoryDto.html',
      title: 'class - CreateCategoryDto',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/create-category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                isArchived\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@MaxLength(LengthLimits.BIG_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/dto/create-category.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/dto/create-category.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/category/dto/create-category.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength\n} from \'class-validator\';\nimport LengthLimits from \'../../common/constants/length\';\n\nexport class CreateCategoryDto {\n  @IsString()\n  @IsNotEmpty()\n  @Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n  name: string;\n\n  @IsString()\n  @IsOptional()\n  @MaxLength(LengthLimits.BIG_MAX_LENGTH)\n  description?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  isArchived?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateRecordDto.html': {
      url: 'classes/CreateRecordDto.html',
      title: 'class - CreateRecordDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRecordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/record/dto/create-record.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                book\n                            \n                            \n                                    Optional\n                                borrowedAt\n                            \n                            \n                                borrower\n                            \n                            \n                                    Optional\n                                isArchived\n                            \n                            \n                                    Optional\n                                returnedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            book\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Book\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInstance(Book)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/dto/create-record.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            borrowedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/dto/create-record.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borrower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInstance(User)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/dto/create-record.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/dto/create-record.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            returnedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/dto/create-record.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsDate,\n  IsInstance,\n  IsNotEmpty,\n  IsOptional\n} from 'class-validator';\nimport { Book } from '../../book/book.entity';\nimport { User } from '../../user/user.entity';\n\nexport class CreateRecordDto {\n  @IsInstance(User)\n  @IsNotEmpty()\n  borrower: User;\n\n  @IsInstance(Book)\n  @IsNotEmpty()\n  book: Book;\n\n  @IsDate()\n  @IsOptional()\n  borrowedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  returnedAt?: Date;\n\n  @IsBoolean()\n  @IsOptional()\n  isArchived?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                isAdmin\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(LengthLimits.PASSWORD_PLAIN_MIN_LENGTH, LengthLimits.PASSWORD_PLAIN_MAX_LENGTH)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length\n} from \'class-validator\';\nimport LengthLimits from \'../../common/constants/length\';\n\nexport class CreateUserDto {\n  // Todo: isalphanumberic for username\n  // Todo: isemail for email\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  //required, due to the maximum length of bcrypt hash = 72\n  @Length(\n    LengthLimits.PASSWORD_PLAIN_MIN_LENGTH,\n    LengthLimits.PASSWORD_PLAIN_MAX_LENGTH,\n  )\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Length(LengthLimits.MIN_LENGTH, LengthLimits.SMALL_MAX_LENGTH)\n  lastName: string;\n\n  @IsBoolean()\n  @IsOptional()\n  isAdmin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules/DatabaseModule.html': {
      url: 'modules/DatabaseModule.html',
      title: 'module - DatabaseModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport * as path from 'path';\nimport * as ormConfig from '../../ormconfig';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useFactory: () => {\n        const config = Object.assign({}, ormConfig);\n        config.entities = [path.join(process.cwd(), 'dist', '**/*.entity.js')];\n        return config as TypeOrmModuleOptions;\n      },\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ExceptionsFilter.html': {
      url: 'classes/ExceptionsFilter.html',
      title: 'class - ExceptionsFilter',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/exception-filter/exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/exception-filter/exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from \'@nestjs/common\';\n\n@Catch()\nexport class ExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    let statusCode: number, statusMessage: string;\n    if (exception instanceof HttpException) {\n      statusCode = exception.getStatus();\n      statusMessage = exception.getResponse() as string;\n    } else {\n      statusCode = HttpStatus.INTERNAL_SERVER_ERROR;\n      statusMessage = \'Internal Server Error\';\n    }\n\n    response.status(statusCode).json({\n      statusCode: statusCode,\n      statusMessage: statusMessage,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/ExcludeNullInterceptor.html': {
      url: 'injectables/ExcludeNullInterceptor.html',
      title: 'injectable - ExcludeNullInterceptor',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interceptor/excludeNull.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                recursivelyStripNullValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/interceptor/excludeNull.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            recursivelyStripNullValues\n                        \n                        \n                    \n                \n            \n            \n                \nrecursivelyStripNullValues(value: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/interceptor/excludeNull.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(map((value) => this.recursivelyStripNullValues(value)));\n  }\n\n  recursivelyStripNullValues(value: unknown): unknown {\n    if (Array.isArray(value)) {\n      return value.map(this.recursivelyStripNullValues);\n    }\n    if (value !== null && typeof value === 'object') {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, value]) => [\n          key,\n          this.recursivelyStripNullValues(value),\n        ]),\n      );\n    }\n    if (value !== null) {\n      return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/GoogleAuthGuard.html': {
      url: 'injectables/GoogleAuthGuard.html',
      title: 'injectable - GoogleAuthGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/google.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class GoogleAuthGuard extends AuthGuard('google') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/GoogleStrategy.html': {
      url: 'injectables/GoogleStrategy.html',
      title: 'injectable - GoogleStrategy',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/google.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/google.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/google.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-google-oauth20';\nimport { GoogleUserDto } from '../../user/dto/google-user.dto';\nimport { User } from '../../user/user.entity';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      clientID: configService.get('GOOGLE_CLIENT_ID'),\n      clientSecret: configService.get('GOOGLE_CLIENT_SECRET'),\n      callbackURL: configService.get('GOOGLE_CALLBACK_URL'),\n      scope: ['email', 'profile'],\n    });\n  }\n\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: any,\n  ): Promise {\n    if (!profile) throw new BadRequestException();\n\n    const { name, emails } = profile;\n    const userDto: GoogleUserDto = {\n      username: emails[0].value,\n      firstName: name.givenName,\n      lastName: name.familyName,\n    };\n    return this.authService.validateUserGoogle(userDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/GoogleUserDto.html': {
      url: 'classes/GoogleUserDto.html',
      title: 'class - GoogleUserDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/google-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class GoogleUserDto extends PickType(CreateUserDto, [\n  'username',\n  'firstName',\n  'lastName',\n] as const) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/IRequest.html': {
      url: 'interfaces/IRequest.html',
      title: 'interface - IRequest',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.type.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \'@nestjs/common\';\nimport { User } from \'../user/user.entity\';\n\nexport type AuthResponse = {\n  access_token: string;\n};\n\nexport type Payload = {\n  sub: number;\n  username: string;\n};\n\nexport type JwtUser = {\n  userId: number;\n  username: string;\n};\n\nexport type AccessToken = {\n  access_token: string;\n};\n\nexport interface IRequest extends Request {\n  user: User & {\n    auth?: AuthResponse;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/IdParam.html': {
      url: 'classes/IdParam.html',
      title: 'class - IdParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/types/type.param.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/types/type.param.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min } from "class-validator";\n\nexport class IdParam {\n  @IsNumber()\n  @Min(1)\n  id: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/JwtAuthGuard.html': {
      url: 'injectables/JwtAuthGuard.html',
      title: 'injectable - JwtAuthGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/JwtStrategy.html': {
      url: 'injectables/JwtStrategy.html',
      title: 'injectable - JwtStrategy',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Payload } from '../auth.type';\nimport { AuthService } from '../auth.service';\nimport { User } from '../../user/user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: Payload): Promise {\n    return this.authService.validateUserJwt(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/LengthLimits.html': {
      url: 'classes/LengthLimits.html',
      title: 'class - LengthLimits',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LengthLimits\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/constants/length.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                BIG_MAX_LENGTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_LENGTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORD_HASH_LENGTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORD_PLAIN_MAX_LENGTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORD_PLAIN_MIN_LENGTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                SMALL_MAX_LENGTH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BIG_MAX_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2047\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MIN_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PASSWORD_HASH_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 72\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PASSWORD_PLAIN_MAX_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 64\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PASSWORD_PLAIN_MIN_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SMALL_MAX_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 255\n                        \n                    \n                        \n                            \n                                    Defined in src/common/constants/length.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class LengthLimits {\n  public static readonly MIN_LENGTH = 1;\n  public static readonly SMALL_MAX_LENGTH = 255;\n  public static readonly BIG_MAX_LENGTH = 2047;\n  public static readonly PASSWORD_HASH_LENGTH = 72;\n  public static readonly PASSWORD_PLAIN_MIN_LENGTH = 8;\n  public static readonly PASSWORD_PLAIN_MAX_LENGTH = 64;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/LocalAuthGuard.html': {
      url: 'injectables/LocalAuthGuard.html',
      title: 'injectable - LocalAuthGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/LocalStrategy.html': {
      url: 'injectables/LocalStrategy.html',
      title: 'injectable - LocalStrategy',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { User } from '../../user/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy, 'local') {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    return this.authService.validateUserLocal(username, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/PaginationParam.html': {
      url: 'classes/PaginationParam.html',
      title: 'class - PaginationParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/pagination.param.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                DEFAULT_LIMIT\n                            \n                            \n                                    Static\n                                DEFAULT_PAGE\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Static\n                                MAX_LIMIT\n                            \n                            \n                                    Static\n                                MIN_LIMIT\n                            \n                            \n                                    Static\n                                MIN_PAGE\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_LIMIT)@Max(PaginationParam.MAX_LIMIT)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_PAGE)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/utils/pagination/pagination.param.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, Max } from \'class-validator\';\nimport { Type } from \'class-transformer\';\n\nclass PaginationParam {\n  static DEFAULT_PAGE = 1;\n  static DEFAULT_LIMIT = 5;\n\n  static MIN_PAGE = 1;\n\n  static MIN_LIMIT = 1;\n  static MAX_LIMIT = 10;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_PAGE)\n  page?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_LIMIT)\n  @Max(PaginationParam.MAX_LIMIT)\n  limit?: number;\n}\n\nexport class BookPaginationParam extends PaginationParam {}\nexport class CategoryPaginationParam extends PaginationParam {}\nexport class RecordPaginationParam extends PaginationParam {}\nexport class UserPaginationParam extends PaginationParam {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/Record.html': {
      url: 'classes/Record.html',
      title: 'class - Record',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Record\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/record/record.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                book\n                            \n                            \n                                bookId\n                            \n                            \n                                borrowedAt\n                            \n                            \n                                borrower\n                            \n                            \n                                borrowerId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                isArchived\n                            \n                            \n                                returnedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            book\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Book\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'book_id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, name: 'book_id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borrowedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'borrowed_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borrower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'borrower_id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borrowerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, name: 'borrower_id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, name: 'is_archived'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'returned_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/record/record.entity.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Book } from '../book/book.entity';\nimport { User } from '../user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\n\n@Entity()\nexport class Record {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ nullable: true, name: 'borrower_id' })\n  borrowerId: number;\n\n  @Column({ nullable: true, name: 'book_id' })\n  bookId: number;\n\n  @Column({ default: false, name: 'is_archived' })\n  @Exclude()\n  isArchived: boolean;\n\n  @Column({ name: 'borrowed_at' })\n  borrowedAt: Date;\n\n  @Column({ name: 'returned_at' })\n  returnedAt: Date;\n\n  @CreateDateColumn({ name: 'created_at' })\n  @Exclude()\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  @Exclude()\n  updatedAt: Date;\n\n  @ManyToOne(() => User, (user) => user.records, { nullable: true })\n  @JoinColumn({ name: 'borrower_id' })\n  borrower: User;\n\n  @ManyToOne(() => Book, (book) => book.records, { nullable: true })\n  @JoinColumn({ name: 'book_id' })\n  book: Book;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/RecordController.html': {
      url: 'controllers/RecordController.html',
      title: 'controller - RecordController',
      body:
        "\n                   \n\n\n\n\n\n\n  Controllers\n  RecordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/record/record.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                record\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findRecords\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/record/record.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRecords(undefined: RecordPaginationParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/record/record.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RecordPaginationParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/record/record.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Param,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { UpdateResult } from 'typeorm';\nimport { JwtAuthGuard } from '../auth/guard/jwt.guard';\nimport { Roles } from '../role/role.decorator';\nimport { Role } from '../role/role.enum';\nimport { RecordPaginationParam } from '../utils/pagination/pagination.param';\nimport { RecordPagination } from '../utils/pagination/pagination.type';\nimport { Record } from './record.entity';\nimport { RecordService } from './record.service';\n\n@UseGuards(JwtAuthGuard)\n@Roles(Role.ADMIN)\n@Controller('record')\nexport class RecordController {\n  constructor(private readonly recordService: RecordService) {}\n\n  @Get()\n  @HttpCode(200)\n  async findRecords(\n    @Query() { page, limit }: RecordPaginationParam,\n  ): Promise {\n    return this.recordService.findRecords(page, limit);\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  async findOne(@Param('id') id: number): Promise {\n    const record = await this.recordService.findOne(id);\n    if (!record)\n      throw new HttpException(\n        'Record with this id does not exist',\n        HttpStatus.NOT_FOUND,\n      );\n    return record;\n  }\n\n  @Delete(':id')\n  @HttpCode(204)\n  async remove(@Param('id') id: number): Promise {\n    return this.recordService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RecordModule.html': {
      url: 'modules/RecordModule.html',
      title: 'module - RecordModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    RecordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecordModule\n\n\n\ncluster_RecordModule_providers\n\n\n\ncluster_RecordModule_exports\n\n\n\n\nRecordModule \n\nRecordModule \n\n\n\nRecordService \n\nRecordService \n\n\n\nRecordModule\n\nRecordModule\n\nRecordModule  -->\n\nRecordModule->RecordModule \n\n\n\nRecordService  -->\n\nRecordModule->RecordService \n\n\n\n\n\nRecordService\n\nRecordService\n\nRecordModule -->\n\nRecordService->RecordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/record/record.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RecordService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RecordController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RecordModule\n                        \n                        \n                            RecordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RecordService } from './record.service';\nimport { RecordController } from './record.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Record } from './record.entity';\n\n@Module({\n  controllers: [RecordController],\n  exports: [RecordService, RecordModule, TypeOrmModule],\n  imports: [TypeOrmModule.forFeature([Record])],\n  providers: [RecordService],\n})\nexport class RecordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RecordPaginationParam.html': {
      url: 'classes/RecordPaginationParam.html',
      title: 'class - RecordPaginationParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordPaginationParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/pagination.param.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                DEFAULT_LIMIT\n                            \n                            \n                                    Static\n                                DEFAULT_PAGE\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Static\n                                MAX_LIMIT\n                            \n                            \n                                    Static\n                                MIN_LIMIT\n                            \n                            \n                                    Static\n                                MIN_PAGE\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_LIMIT)@Max(PaginationParam.MAX_LIMIT)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_PAGE)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, Max } from \'class-validator\';\nimport { Type } from \'class-transformer\';\n\nclass PaginationParam {\n  static DEFAULT_PAGE = 1;\n  static DEFAULT_LIMIT = 5;\n\n  static MIN_PAGE = 1;\n\n  static MIN_LIMIT = 1;\n  static MAX_LIMIT = 10;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_PAGE)\n  page?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_LIMIT)\n  @Max(PaginationParam.MAX_LIMIT)\n  limit?: number;\n}\n\nexport class BookPaginationParam extends PaginationParam {}\nexport class CategoryPaginationParam extends PaginationParam {}\nexport class RecordPaginationParam extends PaginationParam {}\nexport class UserPaginationParam extends PaginationParam {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/RecordService.html': {
      url: 'injectables/RecordService.html',
      title: 'injectable - RecordService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RecordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/record/record.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findBusyOne\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findRecords\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recordRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/record/record.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recordRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRecordDto: CreateRecordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRecordDto\n                                    \n                                                CreateRecordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBusyOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBusyOne(userId: number, bookId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRecords(page?: number, limit?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateRecordDto: UpdateRecordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/record/record.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRecordDto\n                                    \n                                                UpdateRecordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IsEmpty, IsNotEmpty } from 'class-validator';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { RecordPaginationParam } from '../utils/pagination/pagination.param';\nimport { RecordPagination } from '../utils/pagination/pagination.type';\nimport { CreateRecordDto } from './dto/create-record.dto';\nimport { UpdateRecordDto } from './dto/update-record.dto';\nimport { Record } from './record.entity';\n\n@Injectable()\nexport class RecordService {\n  constructor(\n    @InjectRepository(Record)\n    private readonly recordRepo: Repository,\n  ) {}\n\n  async create(createRecordDto: CreateRecordDto): Promise {\n    const record = new Record();\n    Object.assign(record, createRecordDto);\n\n    return this.recordRepo.save(record).catch(() => {\n      throw new HttpException(\n        'Unable to add new category',\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async findRecords(page?: number, limit?: number): Promise {\n    const currentPage = page || RecordPaginationParam.DEFAULT_PAGE;\n    const take = limit || RecordPaginationParam.DEFAULT_LIMIT;\n    const skip = (currentPage - 1) * take;\n\n    const [records, total] = await this.recordRepo\n      .findAndCount({\n        order: {\n          id: 'ASC',\n        },\n        where: {\n          isArchived: false,\n        },\n        take: take,\n        skip: skip,\n      })\n      .catch(() => {\n        throw new HttpException(\n          'Unable to find records',\n          HttpStatus.BAD_REQUEST,\n        );\n      });\n\n    if (!records || records.length === 0)\n      throw new HttpException('Records unavailable', HttpStatus.NOT_FOUND);\n\n    return {\n      total: total,\n      page: currentPage,\n      count: records.length,\n      records: records,\n    };\n  }\n\n  async findOne(id: number): Promise {\n    return this.recordRepo.findOne({ id: id, isArchived: false }).catch(() => {\n      throw new HttpException('Unable to find record', HttpStatus.BAD_REQUEST);\n    });\n  }\n\n  async findBusyOne(userId: number, bookId: number): Promise {\n    return this.recordRepo\n      .findOne(\n        { borrowerId: userId, bookId: bookId },\n        {\n          where: {\n            borrowedAt: IsNotEmpty(),\n            returnedAt: IsEmpty(),\n          },\n        },\n      )\n      .catch(() => {\n        throw new HttpException(\n          'Unable to find record',\n          HttpStatus.BAD_REQUEST,\n        );\n      });\n  }\n\n  async update(\n    id: number,\n    updateRecordDto: UpdateRecordDto,\n  ): Promise {\n    return this.recordRepo.update(id, updateRecordDto).catch(() => {\n      throw new HttpException(\n        \"Unable to update this record's information\",\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async remove(id: number): Promise {\n    return this.recordRepo.update(id, { isArchived: true }).catch(() => {\n      throw new HttpException(\n        'Unable to delete record',\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/RolesGuard.html': {
      url: 'guards/RolesGuard.html',
      title: 'guard - RolesGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/role/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ROLES_KEY } from './role.decorator';\nimport { Role } from './role.enum';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = request.headers.authorization.substring('Bearer '.length);\n    const user = await this.authService.verifyTokenJwt(token);\n\n    const roles = [];\n    if (user.isAdmin) roles.push(Role.USER, Role.ADMIN);\n    else roles.push(Role.USER);\n\n    return requiredRoles.some((role) => roles.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SignedInUserDto.html': {
      url: 'classes/SignedInUserDto.html',
      title: 'class - SignedInUserDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignedInUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/signed-in.user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class SignedInUserDto extends PickType(CreateUserDto, [\n  'username',\n  'password',\n] as const) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateBookDto.html': {
      url: 'classes/UpdateBookDto.html',
      title: 'class - UpdateBookDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateBookDto } from './create-book.dto';\n\nexport class UpdateBookDto extends PartialType(\n  OmitType(CreateBookDto, ['name'] as const),\n) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateCategoryDto.html': {
      url: 'classes/UpdateCategoryDto.html',
      title: 'class - UpdateCategoryDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/update-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(\n  OmitType(CreateCategoryDto, ['name'] as const),\n) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateRecordDto.html': {
      url: 'classes/UpdateRecordDto.html',
      title: 'class - UpdateRecordDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRecordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/record/dto/update-record.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateRecordDto } from './create-record.dto';\n\nexport class UpdateRecordDto extends PartialType(\n  OmitType(CreateRecordDto, ['borrower', 'book'] as const),\n) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PickType(CreateUserDto, [\n  'password',\n  'firstName',\n  'lastName',\n] as const) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/User.html': {
      url: 'classes/User.html',
      title: 'class - User',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                    Static\n                                KEY_MAP\n                            \n                            \n                                lastName\n                            \n                            \n                                passwordHash\n                            \n                            \n                                records\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'first_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, name: 'is_admin'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            KEY_MAP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'username',\n    'passwordHash',\n    'firstName',\n    'lastName',\n    'isAdmin',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'last_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordHash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'password_hash', length: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            records\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport LengthLimits from '../common/constants/length';\nimport { Record } from '../record/record.entity';\nimport { Role } from '../role/role.enum';\n\n@Entity()\nexport class User {\n  static KEY_MAP = [\n    'username',\n    'passwordHash',\n    'firstName',\n    'lastName',\n    'isAdmin',\n  ];\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true, length: LengthLimits.SMALL_MAX_LENGTH })\n  username: string;\n\n  @Column({ name: 'password_hash', length: LengthLimits.PASSWORD_HASH_LENGTH })\n  @Exclude()\n  passwordHash: string;\n\n  @Column({ name: 'first_name', length: LengthLimits.SMALL_MAX_LENGTH })\n  firstName: string;\n\n  @Column({ name: 'last_name', length: LengthLimits.SMALL_MAX_LENGTH })\n  lastName: string;\n\n  @Column({ default: false, name: 'is_admin' })\n  isAdmin: boolean;\n\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  @Exclude()\n  updatedAt: Date;\n\n  @OneToMany(() => Record, (record) => record.borrower, { nullable: true })\n  @Exclude()\n  records: Record[];\n\n  roles: Role[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UserController.html': {
      url: 'controllers/UserController.html',
      title: 'controller - UserController',
      body:
        "\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findUsers\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: IRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsers(undefined: UserPaginationParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Get()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserPaginationParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: IRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Delete(':id')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: IRequest, id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Param,\n  Patch,\n  Query,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { DeleteResult, UpdateResult } from 'typeorm';\nimport { IRequest } from '../auth/auth.type';\nimport { JwtAuthGuard } from '../auth/guard/jwt.guard';\nimport { Roles } from '../role/role.decorator';\nimport { Role } from '../role/role.enum';\nimport { UserPaginationParam } from '../utils/pagination/pagination.param';\nimport { UserPagination } from '../utils/pagination/pagination.type';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './user.entity';\nimport { UserService } from './user.service';\n\n@UseGuards(JwtAuthGuard)\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Roles(Role.ADMIN)\n  @Get()\n  @HttpCode(200)\n  async findUsers(\n    @Query() { page, limit }: UserPaginationParam,\n  ): Promise {\n    return this.userService.findUsers(page, limit);\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  async findOne(\n    @Req() request: IRequest,\n    @Param('id') id: number,\n  ): Promise {\n    const currentUser = request.user;\n    if (currentUser.isAdmin || currentUser.id === id) {\n      const user = await this.userService.findOne(id);\n      if (!user)\n        throw new HttpException(\n          'User with this id does not exist',\n          HttpStatus.NOT_FOUND,\n        );\n      return user;\n    }\n    throw new HttpException('Forbidden resource', HttpStatus.FORBIDDEN);\n  }\n\n  @Patch(':id')\n  @HttpCode(200)\n  async update(\n    @Req() request: IRequest,\n    @Param('id') id: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    const currentUser = request.user;\n    if (currentUser.isAdmin || currentUser.id === id) {\n      return this.userService.update(id, updateUserDto);\n    }\n    throw new HttpException('Forbidden resource', HttpStatus.FORBIDDEN);\n  }\n\n  @Roles(Role.ADMIN)\n  @Delete(':id')\n  @HttpCode(204)\n  async remove(\n    @Req() request: IRequest,\n    @Param('id') id: number,\n  ): Promise {\n    const currentUser = request.user;\n    if (currentUser.isAdmin || currentUser.id === id) {\n      return this.userService.remove(id);\n    }\n    throw new HttpException('Forbidden resource', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UserModule.html': {
      url: 'modules/UserModule.html',
      title: 'module - UserModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule \n\nUserModule \n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserModule  -->\n\nUserModule->UserModule \n\n\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserModule\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\n\n@Module({\n  controllers: [UserController],\n  exports: [UserService, UserModule, TypeOrmModule],\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserPaginationParam.html': {
      url: 'classes/UserPaginationParam.html',
      title: 'class - UserPaginationParam',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPaginationParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/pagination.param.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                DEFAULT_LIMIT\n                            \n                            \n                                    Static\n                                DEFAULT_PAGE\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Static\n                                MAX_LIMIT\n                            \n                            \n                                    Static\n                                MIN_LIMIT\n                            \n                            \n                                    Static\n                                MIN_PAGE\n                            \n                            \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEFAULT_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_LIMIT)@Max(PaginationParam.MAX_LIMIT)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_LIMIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_PAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsNumber()@Min(PaginationParam.MIN_PAGE)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationParam:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, Max } from \'class-validator\';\nimport { Type } from \'class-transformer\';\n\nclass PaginationParam {\n  static DEFAULT_PAGE = 1;\n  static DEFAULT_LIMIT = 5;\n\n  static MIN_PAGE = 1;\n\n  static MIN_LIMIT = 1;\n  static MAX_LIMIT = 10;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_PAGE)\n  page?: number;\n\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @Min(PaginationParam.MIN_LIMIT)\n  @Max(PaginationParam.MAX_LIMIT)\n  limit?: number;\n}\n\nexport class BookPaginationParam extends PaginationParam {}\nexport class CategoryPaginationParam extends PaginationParam {}\nexport class RecordPaginationParam extends PaginationParam {}\nexport class UserPaginationParam extends PaginationParam {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/UserService.html': {
      url: 'injectables/UserService.html',
      title: 'injectable - UserService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                SALT_ROUNDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOnePayload\n                            \n                            \n                                    Async\n                                findOneUsername\n                            \n                            \n                                    Async\n                                findUsers\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                registerGoogleUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOnePayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePayload(payload: Payload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsers(page?: number, limit?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(plainPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerGoogleUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerGoogleUser(userDto: GoogleUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                GoogleUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            SALT_ROUNDS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteResult, Repository, UpdateResult } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { Payload } from '../auth/auth.type';\nimport { GoogleUserDto } from './dto/google-user.dto';\nimport { UserPagination } from '../utils/pagination/pagination.type';\nimport { UserPaginationParam } from '../utils/pagination/pagination.param';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private readonly userRepo: Repository,\n  ) {}\n\n  readonly SALT_ROUNDS = 10;\n\n  async register(createUserDto: CreateUserDto): Promise {\n    const user: User = new User();\n    user.passwordHash = await this.hashPassword(createUserDto.password);\n    User.KEY_MAP.forEach((key) => {\n      user[key] = user[key] || createUserDto[key];\n    });\n\n    if (await this.findOneUsername(user.username))\n      throw new HttpException(\n        'Already existed username',\n        HttpStatus.BAD_REQUEST,\n      );\n\n    return this.userRepo.save(user).catch(() => {\n      throw new HttpException(\n        'Unable to register a new user ',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    });\n  }\n\n  async registerGoogleUser(userDto: GoogleUserDto): Promise {\n    const user: User = new User();\n    Object.assign(user, userDto);\n\n    if (await this.findOneUsername(user.username))\n      throw new HttpException(\n        'Already existed username',\n        HttpStatus.BAD_REQUEST,\n      );\n\n    return this.userRepo.save(user).catch(() => {\n      throw new HttpException(\n        'Unable to register a new Google user',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    });\n  }\n\n  async hashPassword(plainPassword: string): Promise {\n    return bcrypt.hash(plainPassword, this.SALT_ROUNDS).catch((error) => {\n      throw new Error('Password Hash ' + error);\n    });\n  }\n\n  async findUsers(page?: number, limit?: number): Promise {\n    const currentPage = page || UserPaginationParam.DEFAULT_PAGE;\n    const take = limit || UserPaginationParam.DEFAULT_LIMIT;\n    const skip = (currentPage - 1) * take;\n\n    const [users, total] = await this.userRepo\n      .findAndCount({\n        order: {\n          id: 'ASC',\n        },\n        where: {\n          isArchived: false,\n        },\n        take: take,\n        skip: skip,\n      })\n      .catch(() => {\n        throw new HttpException('Unable to find users', HttpStatus.BAD_REQUEST);\n      });\n\n    if (!users || users.length === 0)\n      throw new HttpException('Users unavailable', HttpStatus.NOT_FOUND);\n\n    return {\n      total: total,\n      page: currentPage,\n      count: users.length,\n      users: users,\n    };\n  }\n\n  async findOne(id: number): Promise {\n    return this.userRepo.findOne(id).catch(() => {\n      throw new HttpException('Unable to find user', HttpStatus.BAD_REQUEST);\n    });\n  }\n\n  async findOneUsername(username: string): Promise {\n    return this.userRepo.findOne({ username: username }).catch(() => {\n      throw new HttpException('Unable to find user', HttpStatus.BAD_REQUEST);\n    });\n  }\n\n  async findOnePayload(payload: Payload): Promise {\n    return this.userRepo\n      .findOne({\n        id: payload.sub,\n        username: payload.username,\n      })\n      .catch(() => {\n        throw new HttpException('Unable to find user', HttpStatus.BAD_REQUEST);\n      });\n  }\n\n  async update(\n    id: number,\n    updateUserDto: UpdateUserDto,\n  ): Promise {\n    return this.userRepo.update(id, updateUserDto).catch(() => {\n      throw new HttpException(\n        \"Unable to update this user's information\",\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n\n  async remove(id: number): Promise {\n    return this.userRepo.delete(id).catch(() => {\n      throw new HttpException('Unable to delete user', HttpStatus.BAD_REQUEST);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/auth.type.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guard/google.guard.ts\n            \n            injectable\n            GoogleAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategy/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/book/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/category/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/category/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/category/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/length.ts\n            \n            class\n            LengthLimits\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/types/type.param.ts\n            \n            class\n            IdParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/record/dto/create-record.dto.ts\n            \n            class\n            CreateRecordDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/record/dto/update-record.dto.ts\n            \n            class\n            UpdateRecordDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/record/record.controller.ts\n            \n            controller\n            RecordController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/record/record.entity.ts\n            \n            class\n            Record\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/record/record.service.ts\n            \n            injectable\n            RecordService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/role/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/google-user.dto.ts\n            \n            class\n            GoogleUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/signed-in.user.dto.ts\n            \n            class\n            SignedInUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils/exception-filter/exception.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/interceptor/excludeNull.interceptor.ts\n            \n            injectable\n            ExcludeNullInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/pagination/pagination.param.ts\n            \n            class\n            BookPaginationParam\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/pagination/pagination.param.ts\n            \n            class\n            CategoryPaginationParam\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/pagination/pagination.param.ts\n            \n            class\n            PaginationParam\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/pagination/pagination.param.ts\n            \n            class\n            RecordPaginationParam\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/pagination/pagination.param.ts\n            \n            class\n            UserPaginationParam\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : ^0.4.1\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mysql2 : ^2.2.5\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.0.0\n        \n            typeorm : ^0.2.32\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/enumerations.html': {
      url: 'miscellaneous/enumerations.html',
      title: 'miscellaneous-enumerations - enumerations',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/role/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body:
        '\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nLibrary - Nestjs implements a Library Management backend system.\nInstallation\n# Install dependencies\n$ yarn installPrerequisite: create .env\nThe .env_example file in the current directory is likely omitting key credentials needed to get the backend services running. Please fill it by yourself.\nRunning the app\n# Development mode\n$ yarn start\n\n# Watch mode\n$ yarn start:dev\n\n# Production mode\n$ yarn start:prodDocumentation\n\nDatabase schema\n\n\n\n\n\nCompodoc documentation# Render documentation\n$ npx @compodoc/compodoc -p tsconfig.json -s\n\n\nServe generated documentation at http://localhost:8080\n$ npx @compodoc/compodoc -s\n\n## Test\n\n```bash\n# Unit tests\n$ yarn test\n\n# E2E tests\n$ yarn test:e2e\n\n# Test coverage\n$ yarn test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'license.html': {
      url: 'license.html',
      title: 'getting-started - license',
      body:
        '\n                   \n\nMIT License\nCopyright (c) 2021 Công Vũ\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body:
        '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body:
        '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_exports\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_RecordModule\n\n\n\ncluster_RecordModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBookModule\n\nBookModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nBookModule->CategoryModule\n\n\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nBookModule \n\nBookModule \n\nBookModule  -->\n\nBookModule->BookModule \n\n\n\n\n\nBookService \n\nBookService \n\nBookService  -->\n\nBookModule->BookService \n\n\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nCategoryModule \n\nCategoryModule \n\nCategoryModule  -->\n\nCategoryModule->CategoryModule \n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRecordModule\n\nRecordModule\n\nBookModule -->\n\nRecordModule->BookModule\n\n\n\nAppModule -->\n\nRecordModule->AppModule\n\n\n\n\n\nRecordModule \n\nRecordModule \n\nRecordModule  -->\n\nRecordModule->RecordModule \n\n\n\n\n\nRecordService \n\nRecordService \n\nRecordService  -->\n\nRecordModule->RecordService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nBookModule -->\n\nUserModule->BookModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserModule \n\nUserModule \n\nUserModule  -->\n\nUserModule->UserModule \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nBookModule -->\n\nUserService->BookModule\n\n\n\nCategoryModule -->\n\nUserService->CategoryModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\nCategoryModule -->\n\nBookService->CategoryModule\n\n\n\n\n\nRecordService\n\nRecordService\n\nBookModule -->\n\nRecordService->BookModule\n\n\n\nCategoryModule -->\n\nRecordService->CategoryModule\n\n\n\nRecordModule -->\n\nRecordService->RecordModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessToken   (src/.../auth.type.ts)\n                        \n                        \n                            AuthResponse   (src/.../auth.type.ts)\n                        \n                        \n                            BookPagination   (src/.../pagination.type.ts)\n                        \n                        \n                            CategoryPagination   (src/.../pagination.type.ts)\n                        \n                        \n                            JwtUser   (src/.../auth.type.ts)\n                        \n                        \n                            Pagination   (src/.../pagination.type.ts)\n                        \n                        \n                            Payload   (src/.../auth.type.ts)\n                        \n                        \n                            RecordPagination   (src/.../pagination.type.ts)\n                        \n                        \n                            UserPagination   (src/.../pagination.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.type.ts\n    \n    \n        \n            \n                \n                    \n                    AccessToken\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JwtUser\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/utils/pagination/pagination.type.ts\n    \n    \n        \n            \n                \n                    \n                    BookPagination\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CategoryPagination\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RecordPagination\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserPagination\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/role/role.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROLES_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \'roles\'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
